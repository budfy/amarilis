function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(S,e){"use strict";function m(e){return null!=e&&e===e.window}var t=[],i=Object.getPrototypeOf,o=t.slice,g=t.flat?function(e){return t.flat.call(e)}:function(e){return t.concat.apply([],e)},l=t.push,a=t.indexOf,n={},r=n.toString,v=n.hasOwnProperty,s=v.toString,c=s.call(Object),y={},b=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},C=S.document,d={type:!0,src:!0,nonce:!0,noModule:!0};function x(e,t,n){var i,a,r=(n=n||C).createElement("script");if(r.text=e,t)for(i in d)(a=t[i]||t.getAttribute&&t.getAttribute(i))&&r.setAttribute(i,a);n.head.appendChild(r).parentNode.removeChild(r)}function w(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?n[r.call(e)]||"object":typeof e}var u="3.5.0",E=function(e,t){return new E.fn.init(e,t)};function p(e){var t=!!e&&"length"in e&&e.length,n=w(e);return!b(e)&&!m(e)&&("array"===n||0===t||"number"==typeof t&&0<t&&t-1 in e)}E.fn=E.prototype={jquery:u,constructor:E,length:0,toArray:function(){return o.call(this)},get:function(e){return null==e?o.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=E.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return E.each(this,e)},map:function(n){return this.pushStack(E.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(o.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(E.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(E.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(0<=n&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:t.sort,splice:t.splice},E.extend=E.fn.extend=function(){var e,t,n,i,a,r,s=arguments[0]||{},o=1,l=arguments.length,c=!1;for("boolean"==typeof s&&(c=s,s=arguments[o]||{},o++),"object"==typeof s||b(s)||(s={}),o===l&&(s=this,o--);o<l;o++)if(null!=(e=arguments[o]))for(t in e)i=e[t],"__proto__"!==t&&s!==i&&(c&&i&&(E.isPlainObject(i)||(a=Array.isArray(i)))?(n=s[t],r=a&&!Array.isArray(n)?[]:a||E.isPlainObject(n)?n:{},a=!1,s[t]=E.extend(c,r,i)):void 0!==i&&(s[t]=i));return s},E.extend({expando:"jQuery"+(u+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||"[object Object]"!==r.call(e))&&(!(t=i(e))||"function"==typeof(n=v.call(t,"constructor")&&t.constructor)&&s.call(n)===c)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t,n){x(e,{nonce:t&&t.nonce},n)},each:function(e,t){var n,i=0;if(p(e))for(n=e.length;i<n&&!1!==t.call(e[i],i,e[i]);i++);else for(i in e)if(!1===t.call(e[i],i,e[i]))break;return e},makeArray:function(e,t){var n=t||[];return null!=e&&(p(Object(e))?E.merge(n,"string"==typeof e?[e]:e):l.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:a.call(t,e,n)},merge:function(e,t){for(var n=+t.length,i=0,a=e.length;i<n;i++)e[a++]=t[i];return e.length=a,e},grep:function(e,t,n){for(var i=[],a=0,r=e.length,s=!n;a<r;a++)!t(e[a],a)!=s&&i.push(e[a]);return i},map:function(e,t,n){var i,a,r=0,s=[];if(p(e))for(i=e.length;r<i;r++)null!=(a=t(e[r],r,n))&&s.push(a);else for(r in e)null!=(a=t(e[r],r,n))&&s.push(a);return g(s)},guid:1,support:y}),"function"==typeof Symbol&&(E.fn[Symbol.iterator]=t[Symbol.iterator]),E.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){n["[object "+t+"]"]=t.toLowerCase()});var h=function(n){function u(e,t){var n="0x"+e.slice(1)-65536;return t||(n<0?String.fromCharCode(65536+n):String.fromCharCode(n>>10|55296,1023&n|56320))}function a(){T()}var e,h,x,r,s,f,p,m,w,l,c,T,S,o,C,g,d,v,y,E="sizzle"+ +new Date,b=n.document,P=0,i=0,k=le(),M=le(),$=le(),L=le(),D=function(e,t){return e===t&&(c=!0),0},A={}.hasOwnProperty,t=[],z=t.pop,I=t.push,O=t.push,N=t.slice,H=function(e,t){for(var n=0,i=e.length;n<i;n++)if(e[n]===t)return n;return-1},j="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",q="[\\x20\\t\\r\\n\\f]",F="(?:\\\\[\\da-fA-F]{1,6}"+q+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",B="\\["+q+"*("+F+")(?:"+q+"*([*^$|!~]?=)"+q+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+F+"))|)"+q+"*\\]",R=":("+F+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+B+")*)|.*)\\)|)",X=new RegExp(q+"+","g"),Y=new RegExp("^"+q+"+|((?:^|[^\\\\])(?:\\\\.)*)"+q+"+$","g"),W=new RegExp("^"+q+"*,"+q+"*"),G=new RegExp("^"+q+"*([>+~]|"+q+")"+q+"*"),V=new RegExp(q+"|>"),_=new RegExp(R),U=new RegExp("^"+F+"$"),K={ID:new RegExp("^#("+F+")"),CLASS:new RegExp("^\\.("+F+")"),TAG:new RegExp("^("+F+"|[*])"),ATTR:new RegExp("^"+B),PSEUDO:new RegExp("^"+R),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+q+"*(even|odd|(([+-]|)(\\d*)n|)"+q+"*(?:([+-]|)"+q+"*(\\d+)|))"+q+"*\\)|)","i"),bool:new RegExp("^(?:"+j+")$","i"),needsContext:new RegExp("^"+q+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+q+"*((?:-\\d)?\\d*)"+q+"*\\)|)(?=[^-]|$)","i")},Z=/HTML$/i,Q=/^(?:input|select|textarea|button)$/i,J=/^h\d$/i,ee=/^[^{]+\{\s*\[native \w/,te=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ne=/[+~]/,ie=new RegExp("\\\\[\\da-fA-F]{1,6}"+q+"?|\\\\([^\\r\\n\\f])","g"),ae=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,re=function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},se=xe(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{O.apply(t=N.call(b.childNodes),b.childNodes),t[b.childNodes.length].nodeType}catch(e){O={apply:t.length?function(e,t){I.apply(e,N.call(t))}:function(e,t){for(var n=e.length,i=0;e[n++]=t[i++];);e.length=n-1}}}function oe(t,e,n,i){var a,r,s,o,l,c,d,u=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!i&&(T(e),e=e||S,C)){if(11!==p&&(l=te.exec(t)))if(a=l[1]){if(9===p){if(!(s=e.getElementById(a)))return n;if(s.id===a)return n.push(s),n}else if(u&&(s=u.getElementById(a))&&y(e,s)&&s.id===a)return n.push(s),n}else{if(l[2])return O.apply(n,e.getElementsByTagName(t)),n;if((a=l[3])&&h.getElementsByClassName&&e.getElementsByClassName)return O.apply(n,e.getElementsByClassName(a)),n}if(h.qsa&&!L[t+" "]&&(!g||!g.test(t))&&(1!==p||"object"!==e.nodeName.toLowerCase())){if(d=t,u=e,1===p&&(V.test(t)||G.test(t))){for((u=ne.test(t)&&ve(e.parentNode)||e)===e&&h.scope||((o=e.getAttribute("id"))?o=o.replace(ae,re):e.setAttribute("id",o=E)),r=(c=f(t)).length;r--;)c[r]=(o?"#"+o:":scope")+" "+be(c[r]);d=c.join(",")}try{return O.apply(n,u.querySelectorAll(d)),n}catch(e){L(t,!0)}finally{o===E&&e.removeAttribute("id")}}}return m(t.replace(Y,"$1"),e,n,i)}function le(){var n=[];function i(e,t){return n.push(e+" ")>x.cacheLength&&delete i[n.shift()],i[e+" "]=t}return i}function ce(e){return e[E]=!0,e}function de(e){var t=S.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function ue(e,t){for(var n=e.split("|"),i=n.length;i--;)x.attrHandle[n[i]]=t}function pe(e,t){var n=t&&e,i=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(i)return i;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function he(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function fe(n){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===n}}function me(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&se(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function ge(s){return ce(function(r){return r=+r,ce(function(e,t){for(var n,i=s([],e.length,r),a=i.length;a--;)e[n=i[a]]&&(e[n]=!(t[n]=e[n]))})})}function ve(e){return e&&void 0!==e.getElementsByTagName&&e}for(e in h=oe.support={},s=oe.isXML=function(e){var t=e.namespaceURI,n=(e.ownerDocument||e).documentElement;return!Z.test(t||n&&n.nodeName||"HTML")},T=oe.setDocument=function(e){var t,n,i=e?e.ownerDocument||e:b;return i!=S&&9===i.nodeType&&i.documentElement&&(o=(S=i).documentElement,C=!s(S),b!=S&&(n=S.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",a,!1):n.attachEvent&&n.attachEvent("onunload",a)),h.scope=de(function(e){return o.appendChild(e).appendChild(S.createElement("div")),void 0!==e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),h.attributes=de(function(e){return e.className="i",!e.getAttribute("className")}),h.getElementsByTagName=de(function(e){return e.appendChild(S.createComment("")),!e.getElementsByTagName("*").length}),h.getElementsByClassName=ee.test(S.getElementsByClassName),h.getById=de(function(e){return o.appendChild(e).id=E,!S.getElementsByName||!S.getElementsByName(E).length}),h.getById?(x.filter.ID=function(e){var t=e.replace(ie,u);return function(e){return e.getAttribute("id")===t}},x.find.ID=function(e,t){if(void 0!==t.getElementById&&C){var n=t.getElementById(e);return n?[n]:[]}}):(x.filter.ID=function(e){var n=e.replace(ie,u);return function(e){var t=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===n}},x.find.ID=function(e,t){if(void 0!==t.getElementById&&C){var n,i,a,r=t.getElementById(e);if(r){if((n=r.getAttributeNode("id"))&&n.value===e)return[r];for(a=t.getElementsByName(e),i=0;r=a[i++];)if((n=r.getAttributeNode("id"))&&n.value===e)return[r]}return[]}}),x.find.TAG=h.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):h.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,i=[],a=0,r=t.getElementsByTagName(e);if("*"!==e)return r;for(;n=r[a++];)1===n.nodeType&&i.push(n);return i},x.find.CLASS=h.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&C)return t.getElementsByClassName(e)},d=[],g=[],(h.qsa=ee.test(S.querySelectorAll))&&(de(function(e){var t;o.appendChild(e).innerHTML="<a id='"+E+"'></a><select id='"+E+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&g.push("[*^$]="+q+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||g.push("\\["+q+"*(?:value|"+j+")"),e.querySelectorAll("[id~="+E+"-]").length||g.push("~="),(t=S.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||g.push("\\["+q+"*name"+q+"*="+q+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||g.push(":checked"),e.querySelectorAll("a#"+E+"+*").length||g.push(".#.+[+~]"),e.querySelectorAll("\\\f"),g.push("[\\r\\n\\f]")}),de(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=S.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&g.push("name"+q+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&g.push(":enabled",":disabled"),o.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&g.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),g.push(",.*:")})),(h.matchesSelector=ee.test(v=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&de(function(e){h.disconnectedMatch=v.call(e,"*"),v.call(e,"[s!='']:x"),d.push("!=",R)}),g=g.length&&new RegExp(g.join("|")),d=d.length&&new RegExp(d.join("|")),t=ee.test(o.compareDocumentPosition),y=t||ee.test(o.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,i=t&&t.parentNode;return e===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):e.compareDocumentPosition&&16&e.compareDocumentPosition(i)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},D=t?function(e,t){if(e===t)return c=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!h.sortDetached&&t.compareDocumentPosition(e)===n?e==S||e.ownerDocument==b&&y(b,e)?-1:t==S||t.ownerDocument==b&&y(b,t)?1:l?H(l,e)-H(l,t):0:4&n?-1:1)}:function(e,t){if(e===t)return c=!0,0;var n,i=0,a=e.parentNode,r=t.parentNode,s=[e],o=[t];if(!a||!r)return e==S?-1:t==S?1:a?-1:r?1:l?H(l,e)-H(l,t):0;if(a===r)return pe(e,t);for(n=e;n=n.parentNode;)s.unshift(n);for(n=t;n=n.parentNode;)o.unshift(n);for(;s[i]===o[i];)i++;return i?pe(s[i],o[i]):s[i]==b?-1:o[i]==b?1:0}),S},oe.matches=function(e,t){return oe(e,null,null,t)},oe.matchesSelector=function(e,t){if(T(e),h.matchesSelector&&C&&!L[t+" "]&&(!d||!d.test(t))&&(!g||!g.test(t)))try{var n=v.call(e,t);if(n||h.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){L(t,!0)}return 0<oe(t,S,null,[e]).length},oe.contains=function(e,t){return(e.ownerDocument||e)!=S&&T(e),y(e,t)},oe.attr=function(e,t){(e.ownerDocument||e)!=S&&T(e);var n=x.attrHandle[t.toLowerCase()],i=n&&A.call(x.attrHandle,t.toLowerCase())?n(e,t,!C):void 0;return void 0!==i?i:h.attributes||!C?e.getAttribute(t):(i=e.getAttributeNode(t))&&i.specified?i.value:null},oe.escape=function(e){return(e+"").replace(ae,re)},oe.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},oe.uniqueSort=function(e){var t,n=[],i=0,a=0;if(c=!h.detectDuplicates,l=!h.sortStable&&e.slice(0),e.sort(D),c){for(;t=e[a++];)t===e[a]&&(i=n.push(a));for(;i--;)e.splice(n[i],1)}return l=null,e},r=oe.getText=function(e){var t,n="",i=0,a=e.nodeType;if(a){if(1===a||9===a||11===a){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=r(e)}else if(3===a||4===a)return e.nodeValue}else for(;t=e[i++];)n+=r(t);return n},(x=oe.selectors={cacheLength:50,createPseudo:ce,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(ie,u),e[3]=(e[3]||e[4]||e[5]||"").replace(ie,u),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||oe.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&oe.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return K.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&_.test(n)&&(t=f(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(ie,u).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=k[e+" "];return t||(t=new RegExp("(^|"+q+")"+e+"("+q+"|$)"))&&k(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(n,i,a){return function(e){var t=oe.attr(e,n);return null==t?"!="===i:!i||(t+="","="===i?t===a:"!="===i?t!==a:"^="===i?a&&0===t.indexOf(a):"*="===i?a&&-1<t.indexOf(a):"$="===i?a&&t.slice(-a.length)===a:"~="===i?-1<(" "+t.replace(X," ")+" ").indexOf(a):"|="===i&&(t===a||t.slice(0,a.length+1)===a+"-"))}},CHILD:function(f,e,t,m,g){var v="nth"!==f.slice(0,3),y="last"!==f.slice(-4),b="of-type"===e;return 1===m&&0===g?function(e){return!!e.parentNode}:function(e,t,n){var i,a,r,s,o,l,c=v!=y?"nextSibling":"previousSibling",d=e.parentNode,u=b&&e.nodeName.toLowerCase(),p=!n&&!b,h=!1;if(d){if(v){for(;c;){for(s=e;s=s[c];)if(b?s.nodeName.toLowerCase()===u:1===s.nodeType)return!1;l=c="only"===f&&!l&&"nextSibling"}return!0}if(l=[y?d.firstChild:d.lastChild],y&&p){for(h=(o=(i=(a=(r=(s=d)[E]||(s[E]={}))[s.uniqueID]||(r[s.uniqueID]={}))[f]||[])[0]===P&&i[1])&&i[2],s=o&&d.childNodes[o];s=++o&&s&&s[c]||(h=o=0)||l.pop();)if(1===s.nodeType&&++h&&s===e){a[f]=[P,o,h];break}}else if(p&&(h=o=(i=(a=(r=(s=e)[E]||(s[E]={}))[s.uniqueID]||(r[s.uniqueID]={}))[f]||[])[0]===P&&i[1]),!1===h)for(;(s=++o&&s&&s[c]||(h=o=0)||l.pop())&&((b?s.nodeName.toLowerCase()!==u:1!==s.nodeType)||!++h||(p&&((a=(r=s[E]||(s[E]={}))[s.uniqueID]||(r[s.uniqueID]={}))[f]=[P,h]),s!==e)););return(h-=g)===m||h%m==0&&0<=h/m}}},PSEUDO:function(e,r){var t,s=x.pseudos[e]||x.setFilters[e.toLowerCase()]||oe.error("unsupported pseudo: "+e);return s[E]?s(r):1<s.length?(t=[e,e,"",r],x.setFilters.hasOwnProperty(e.toLowerCase())?ce(function(e,t){for(var n,i=s(e,r),a=i.length;a--;)e[n=H(e,i[a])]=!(t[n]=i[a])}):function(e){return s(e,0,t)}):s}},pseudos:{not:ce(function(e){var i=[],a=[],o=p(e.replace(Y,"$1"));return o[E]?ce(function(e,t,n,i){for(var a,r=o(e,null,i,[]),s=e.length;s--;)(a=r[s])&&(e[s]=!(t[s]=a))}):function(e,t,n){return i[0]=e,o(i,null,n,a),i[0]=null,!a.pop()}}),has:ce(function(t){return function(e){return 0<oe(t,e).length}}),contains:ce(function(t){return t=t.replace(ie,u),function(e){return-1<(e.textContent||r(e)).indexOf(t)}}),lang:ce(function(n){return U.test(n||"")||oe.error("unsupported lang: "+n),n=n.replace(ie,u).toLowerCase(),function(e){var t;do{if(t=C?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===n||0===t.indexOf(n+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=n.location&&n.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===o},focus:function(e){return e===S.activeElement&&(!S.hasFocus||S.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:me(!1),disabled:me(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!x.pseudos.empty(e)},header:function(e){return J.test(e.nodeName)},input:function(e){return Q.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:ge(function(){return[0]}),last:ge(function(e,t){return[t-1]}),eq:ge(function(e,t,n){return[n<0?n+t:n]}),even:ge(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:ge(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:ge(function(e,t,n){for(var i=n<0?n+t:t<n?t:n;0<=--i;)e.push(i);return e}),gt:ge(function(e,t,n){for(var i=n<0?n+t:n;++i<t;)e.push(i);return e})}}).pseudos.nth=x.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})x.pseudos[e]=he(e);for(e in{submit:!0,reset:!0})x.pseudos[e]=fe(e);function ye(){}function be(e){for(var t=0,n=e.length,i="";t<n;t++)i+=e[t].value;return i}function xe(o,e,t){var l=e.dir,c=e.next,d=c||l,u=t&&"parentNode"===d,p=i++;return e.first?function(e,t,n){for(;e=e[l];)if(1===e.nodeType||u)return o(e,t,n);return!1}:function(e,t,n){var i,a,r,s=[P,p];if(n){for(;e=e[l];)if((1===e.nodeType||u)&&o(e,t,n))return!0}else for(;e=e[l];)if(1===e.nodeType||u)if(a=(r=e[E]||(e[E]={}))[e.uniqueID]||(r[e.uniqueID]={}),c&&c===e.nodeName.toLowerCase())e=e[l]||e;else{if((i=a[d])&&i[0]===P&&i[1]===p)return s[2]=i[2];if((a[d]=s)[2]=o(e,t,n))return!0}return!1}}function we(a){return 1<a.length?function(e,t,n){for(var i=a.length;i--;)if(!a[i](e,t,n))return!1;return!0}:a[0]}function Te(e,t,n,i,a){for(var r,s=[],o=0,l=e.length,c=null!=t;o<l;o++)(r=e[o])&&(n&&!n(r,i,a)||(s.push(r),c&&t.push(o)));return s}function Se(h,f,m,g,v,e){return g&&!g[E]&&(g=Se(g)),v&&!v[E]&&(v=Se(v,e)),ce(function(e,t,n,i){var a,r,s,o=[],l=[],c=t.length,d=e||function(e,t,n){for(var i=0,a=t.length;i<a;i++)oe(e,t[i],n);return n}(f||"*",n.nodeType?[n]:n,[]),u=!h||!e&&f?d:Te(d,o,h,n,i),p=m?v||(e?h:c||g)?[]:t:u;if(m&&m(u,p,n,i),g)for(a=Te(p,l),g(a,[],n,i),r=a.length;r--;)(s=a[r])&&(p[l[r]]=!(u[l[r]]=s));if(e){if(v||h){if(v){for(a=[],r=p.length;r--;)(s=p[r])&&a.push(u[r]=s);v(null,p=[],a,i)}for(r=p.length;r--;)(s=p[r])&&-1<(a=v?H(e,s):o[r])&&(e[a]=!(t[a]=s))}}else p=Te(p===t?p.splice(c,p.length):p),v?v(null,t,p,i):O.apply(t,p)})}function Ce(e){for(var a,t,n,i=e.length,r=x.relative[e[0].type],s=r||x.relative[" "],o=r?1:0,l=xe(function(e){return e===a},s,!0),c=xe(function(e){return-1<H(a,e)},s,!0),d=[function(e,t,n){var i=!r&&(n||t!==w)||((a=t).nodeType?l:c)(e,t,n);return a=null,i}];o<i;o++)if(t=x.relative[e[o].type])d=[xe(we(d),t)];else{if((t=x.filter[e[o].type].apply(null,e[o].matches))[E]){for(n=++o;n<i&&!x.relative[e[n].type];n++);return Se(1<o&&we(d),1<o&&be(e.slice(0,o-1).concat({value:" "===e[o-2].type?"*":""})).replace(Y,"$1"),t,o<n&&Ce(e.slice(o,n)),n<i&&Ce(e=e.slice(n)),n<i&&be(e))}d.push(t)}return we(d)}function Ee(g,v){function e(e,t,n,i,a){var r,s,o,l=0,c="0",d=e&&[],u=[],p=w,h=e||b&&x.find.TAG("*",a),f=P+=null==p?1:Math.random()||.1,m=h.length;for(a&&(w=t==S||t||a);c!==m&&null!=(r=h[c]);c++){if(b&&r){for(s=0,t||r.ownerDocument==S||(T(r),n=!C);o=g[s++];)if(o(r,t||S,n)){i.push(r);break}a&&(P=f)}y&&((r=!o&&r)&&l--,e&&d.push(r))}if(l+=c,y&&c!==l){for(s=0;o=v[s++];)o(d,u,t,n);if(e){if(0<l)for(;c--;)d[c]||u[c]||(u[c]=z.call(i));u=Te(u)}O.apply(i,u),a&&!e&&0<u.length&&1<l+v.length&&oe.uniqueSort(i)}return a&&(P=f,w=p),d}var y=0<v.length,b=0<g.length;return y?ce(e):e}return ye.prototype=x.filters=x.pseudos,x.setFilters=new ye,f=oe.tokenize=function(e,t){var n,i,a,r,s,o,l,c=M[e+" "];if(c)return t?0:c.slice(0);for(s=e,o=[],l=x.preFilter;s;){for(r in n&&!(i=W.exec(s))||(i&&(s=s.slice(i[0].length)||s),o.push(a=[])),n=!1,(i=G.exec(s))&&(n=i.shift(),a.push({value:n,type:i[0].replace(Y," ")}),s=s.slice(n.length)),x.filter)!(i=K[r].exec(s))||l[r]&&!(i=l[r](i))||(n=i.shift(),a.push({value:n,type:r,matches:i}),s=s.slice(n.length));if(!n)break}return t?s.length:s?oe.error(e):M(e,o).slice(0)},p=oe.compile=function(e,t){var n,i=[],a=[],r=$[e+" "];if(!r){for(n=(t=t||f(e)).length;n--;)(r=Ce(t[n]))[E]?i.push(r):a.push(r);(r=$(e,Ee(a,i))).selector=e}return r},m=oe.select=function(e,t,n,i){var a,r,s,o,l,c="function"==typeof e&&e,d=!i&&f(e=c.selector||e);if(n=n||[],1===d.length){if(2<(r=d[0]=d[0].slice(0)).length&&"ID"===(s=r[0]).type&&9===t.nodeType&&C&&x.relative[r[1].type]){if(!(t=(x.find.ID(s.matches[0].replace(ie,u),t)||[])[0]))return n;c&&(t=t.parentNode),e=e.slice(r.shift().value.length)}for(a=K.needsContext.test(e)?0:r.length;a--&&(s=r[a],!x.relative[o=s.type]);)if((l=x.find[o])&&(i=l(s.matches[0].replace(ie,u),ne.test(r[0].type)&&ve(t.parentNode)||t))){if(r.splice(a,1),!(e=i.length&&be(r)))return O.apply(n,i),n;break}}return(c||p(e,d))(i,t,!C,n,!t||ne.test(e)&&ve(t.parentNode)||t),n},h.sortStable=E.split("").sort(D).join("")===E,h.detectDuplicates=!!c,T(),h.sortDetached=de(function(e){return 1&e.compareDocumentPosition(S.createElement("fieldset"))}),de(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||ue("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),h.attributes&&de(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||ue("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),de(function(e){return null==e.getAttribute("disabled")})||ue(j,function(e,t,n){var i;if(!n)return!0===e[t]?t.toLowerCase():(i=e.getAttributeNode(t))&&i.specified?i.value:null}),oe}(S);E.find=h,E.expr=h.selectors,E.expr[":"]=E.expr.pseudos,E.uniqueSort=E.unique=h.uniqueSort,E.text=h.getText,E.isXMLDoc=h.isXML,E.contains=h.contains,E.escapeSelector=h.escape;function f(e,t,n){for(var i=[],a=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(a&&E(e).is(n))break;i.push(e)}return i}function T(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}var P=E.expr.match.needsContext;function k(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var M=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function $(e,n,i){return b(n)?E.grep(e,function(e,t){return!!n.call(e,t,e)!==i}):n.nodeType?E.grep(e,function(e){return e===n!==i}):"string"!=typeof n?E.grep(e,function(e){return-1<a.call(n,e)!==i}):E.filter(n,e,i)}E.filter=function(e,t,n){var i=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===i.nodeType?E.find.matchesSelector(i,e)?[i]:[]:E.find.matches(e,E.grep(t,function(e){return 1===e.nodeType}))},E.fn.extend({find:function(e){var t,n,i=this.length,a=this;if("string"!=typeof e)return this.pushStack(E(e).filter(function(){for(t=0;t<i;t++)if(E.contains(a[t],this))return!0}));for(n=this.pushStack([]),t=0;t<i;t++)E.find(e,a[t],n);return 1<i?E.uniqueSort(n):n},filter:function(e){return this.pushStack($(this,e||[],!1))},not:function(e){return this.pushStack($(this,e||[],!0))},is:function(e){return!!$(this,"string"==typeof e&&P.test(e)?E(e):e||[],!1).length}});var L,D=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(E.fn.init=function(e,t,n){var i,a;if(!e)return this;if(n=n||L,"string"!=typeof e)return e.nodeType?(this[0]=e,this.length=1,this):b(e)?void 0!==n.ready?n.ready(e):e(E):E.makeArray(e,this);if(!(i="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:D.exec(e))||!i[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(i[1]){if(t=t instanceof E?t[0]:t,E.merge(this,E.parseHTML(i[1],t&&t.nodeType?t.ownerDocument||t:C,!0)),M.test(i[1])&&E.isPlainObject(t))for(i in t)b(this[i])?this[i](t[i]):this.attr(i,t[i]);return this}return(a=C.getElementById(i[2]))&&(this[0]=a,this.length=1),this}).prototype=E.fn,L=E(C);var A=/^(?:parents|prev(?:Until|All))/,z={children:!0,contents:!0,next:!0,prev:!0};function I(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}E.fn.extend({has:function(e){var t=E(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(E.contains(this,t[e]))return!0})},closest:function(e,t){var n,i=0,a=this.length,r=[],s="string"!=typeof e&&E(e);if(!P.test(e))for(;i<a;i++)for(n=this[i];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(s?-1<s.index(n):1===n.nodeType&&E.find.matchesSelector(n,e))){r.push(n);break}return this.pushStack(1<r.length?E.uniqueSort(r):r)},index:function(e){return e?"string"==typeof e?a.call(E(e),this[0]):a.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(E.uniqueSort(E.merge(this.get(),E(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),E.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return f(e,"parentNode")},parentsUntil:function(e,t,n){return f(e,"parentNode",n)},next:function(e){return I(e,"nextSibling")},prev:function(e){return I(e,"previousSibling")},nextAll:function(e){return f(e,"nextSibling")},prevAll:function(e){return f(e,"previousSibling")},nextUntil:function(e,t,n){return f(e,"nextSibling",n)},prevUntil:function(e,t,n){return f(e,"previousSibling",n)},siblings:function(e){return T((e.parentNode||{}).firstChild,e)},children:function(e){return T(e.firstChild)},contents:function(e){return null!=e.contentDocument&&i(e.contentDocument)?e.contentDocument:(k(e,"template")&&(e=e.content||e),E.merge([],e.childNodes))}},function(i,a){E.fn[i]=function(e,t){var n=E.map(this,a,e);return"Until"!==i.slice(-5)&&(t=e),t&&"string"==typeof t&&(n=E.filter(t,n)),1<this.length&&(z[i]||E.uniqueSort(n),A.test(i)&&n.reverse()),this.pushStack(n)}});var O=/[^\x20\t\r\n\f]+/g;function N(e){return e}function H(e){throw e}function j(e,t,n,i){var a;try{e&&b(a=e.promise)?a.call(e).done(t).fail(n):e&&b(a=e.then)?a.call(e,t,n):t.apply(void 0,[e].slice(i))}catch(e){n.apply(void 0,[e])}}E.Callbacks=function(i){var e,n;i="string"==typeof i?(e=i,n={},E.each(e.match(O)||[],function(e,t){n[t]=!0}),n):E.extend({},i);function a(){for(o=o||i.once,s=r=!0;c.length;d=-1)for(t=c.shift();++d<l.length;)!1===l[d].apply(t[0],t[1])&&i.stopOnFalse&&(d=l.length,t=!1);i.memory||(t=!1),r=!1,o&&(l=t?[]:"")}var r,t,s,o,l=[],c=[],d=-1,u={add:function(){return l&&(t&&!r&&(d=l.length-1,c.push(t)),function n(e){E.each(e,function(e,t){b(t)?i.unique&&u.has(t)||l.push(t):t&&t.length&&"string"!==w(t)&&n(t)})}(arguments),t&&!r&&a()),this},remove:function(){return E.each(arguments,function(e,t){for(var n;-1<(n=E.inArray(t,l,n));)l.splice(n,1),n<=d&&d--}),this},has:function(e){return e?-1<E.inArray(e,l):0<l.length},empty:function(){return l=l&&[],this},disable:function(){return o=c=[],l=t="",this},disabled:function(){return!l},lock:function(){return o=c=[],t||r||(l=t=""),this},locked:function(){return!!o},fireWith:function(e,t){return o||(t=[e,(t=t||[]).slice?t.slice():t],c.push(t),r||a()),this},fire:function(){return u.fireWith(this,arguments),this},fired:function(){return!!s}};return u},E.extend({Deferred:function(e){var r=[["notify","progress",E.Callbacks("memory"),E.Callbacks("memory"),2],["resolve","done",E.Callbacks("once memory"),E.Callbacks("once memory"),0,"resolved"],["reject","fail",E.Callbacks("once memory"),E.Callbacks("once memory"),1,"rejected"]],a="pending",s={state:function(){return a},always:function(){return o.done(arguments).fail(arguments),this},catch:function(e){return s.then(null,e)},pipe:function(){var a=arguments;return E.Deferred(function(i){E.each(r,function(e,t){var n=b(a[t[4]])&&a[t[4]];o[t[1]](function(){var e=n&&n.apply(this,arguments);e&&b(e.promise)?e.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[t[0]+"With"](this,n?[e]:arguments)})}),a=null}).promise()},then:function(t,n,i){var l=0;function c(a,r,s,o){return function(){function e(){var e,t;if(!(a<l)){if((e=s.apply(n,i))===r.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,b(t)?o?t.call(e,c(l,r,N,o),c(l,r,H,o)):(l++,t.call(e,c(l,r,N,o),c(l,r,H,o),c(l,r,N,r.notifyWith))):(s!==N&&(n=void 0,i=[e]),(o||r.resolveWith)(n,i))}}var n=this,i=arguments,t=o?e:function(){try{e()}catch(e){E.Deferred.exceptionHook&&E.Deferred.exceptionHook(e,t.stackTrace),l<=a+1&&(s!==H&&(n=void 0,i=[e]),r.rejectWith(n,i))}};a?t():(E.Deferred.getStackHook&&(t.stackTrace=E.Deferred.getStackHook()),S.setTimeout(t))}}return E.Deferred(function(e){r[0][3].add(c(0,e,b(i)?i:N,e.notifyWith)),r[1][3].add(c(0,e,b(t)?t:N)),r[2][3].add(c(0,e,b(n)?n:H))}).promise()},promise:function(e){return null!=e?E.extend(e,s):s}},o={};return E.each(r,function(e,t){var n=t[2],i=t[5];s[t[1]]=n.add,i&&n.add(function(){a=i},r[3-e][2].disable,r[3-e][3].disable,r[0][2].lock,r[0][3].lock),n.add(t[3].fire),o[t[0]]=function(){return o[t[0]+"With"](this===o?void 0:this,arguments),this},o[t[0]+"With"]=n.fireWith}),s.promise(o),e&&e.call(o,o),o},when:function(e){function t(t){return function(e){a[t]=this,r[t]=1<arguments.length?o.call(arguments):e,--n||s.resolveWith(a,r)}}var n=arguments.length,i=n,a=Array(i),r=o.call(arguments),s=E.Deferred();if(n<=1&&(j(e,s.done(t(i)).resolve,s.reject,!n),"pending"===s.state()||b(r[i]&&r[i].then)))return s.then();for(;i--;)j(r[i],t(i),s.reject);return s.promise()}});var q=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;E.Deferred.exceptionHook=function(e,t){S.console&&S.console.warn&&e&&q.test(e.name)&&S.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},E.readyException=function(e){S.setTimeout(function(){throw e})};var F=E.Deferred();function B(){C.removeEventListener("DOMContentLoaded",B),S.removeEventListener("load",B),E.ready()}E.fn.ready=function(e){return F.then(e).catch(function(e){E.readyException(e)}),this},E.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--E.readyWait:E.isReady)||(E.isReady=!0)!==e&&0<--E.readyWait||F.resolveWith(C,[E])}}),E.ready.then=F.then,"complete"===C.readyState||"loading"!==C.readyState&&!C.documentElement.doScroll?S.setTimeout(E.ready):(C.addEventListener("DOMContentLoaded",B),S.addEventListener("load",B));var R=function(e,t,n,i,a,r,s){var o=0,l=e.length,c=null==n;if("object"===w(n))for(o in a=!0,n)R(e,t,o,n[o],!0,r,s);else if(void 0!==i&&(a=!0,b(i)||(s=!0),c&&(t=s?(t.call(e,i),null):(c=t,function(e,t,n){return c.call(E(e),n)})),t))for(;o<l;o++)t(e[o],n,s?i:i.call(e[o],o,t(e[o],n)));return a?e:c?t.call(e):l?t(e[0],n):r},X=/^-ms-/,Y=/-([a-z])/g;function W(e,t){return t.toUpperCase()}function G(e){return e.replace(X,"ms-").replace(Y,W)}function V(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType}function _(){this.expando=E.expando+_.uid++}_.uid=1,_.prototype={cache:function(e){var t=e[this.expando];return t||(t=Object.create(null),V(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var i,a=this.cache(e);if("string"==typeof t)a[G(t)]=n;else for(i in t)a[G(i)]=t[i];return a},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][G(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,i=e[this.expando];if(void 0!==i){if(void 0!==t){n=(t=Array.isArray(t)?t.map(G):(t=G(t))in i?[t]:t.match(O)||[]).length;for(;n--;)delete i[t[n]]}void 0!==t&&!E.isEmptyObject(i)||(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!E.isEmptyObject(t)}};var U=new _,K=new _,Z=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Q=/[A-Z]/g;function J(e,t,n){var i,a;if(void 0===n&&1===e.nodeType)if(i="data-"+t.replace(Q,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(i))){try{n="true"===(a=n)||"false"!==a&&("null"===a?null:a===+a+""?+a:Z.test(a)?JSON.parse(a):a)}catch(e){}K.set(e,t,n)}else n=void 0;return n}E.extend({hasData:function(e){return K.hasData(e)||U.hasData(e)},data:function(e,t,n){return K.access(e,t,n)},removeData:function(e,t){K.remove(e,t)},_data:function(e,t,n){return U.access(e,t,n)},_removeData:function(e,t){U.remove(e,t)}}),E.fn.extend({data:function(n,e){var t,i,a,r=this[0],s=r&&r.attributes;if(void 0!==n)return"object"==typeof n?this.each(function(){K.set(this,n)}):R(this,function(e){var t;if(r&&void 0===e)return void 0!==(t=K.get(r,n))||void 0!==(t=J(r,n))?t:void 0;this.each(function(){K.set(this,n,e)})},null,e,1<arguments.length,null,!0);if(this.length&&(a=K.get(r),1===r.nodeType&&!U.get(r,"hasDataAttrs"))){for(t=s.length;t--;)s[t]&&0===(i=s[t].name).indexOf("data-")&&(i=G(i.slice(5)),J(r,i,a[i]));U.set(r,"hasDataAttrs",!0)}return a},removeData:function(e){return this.each(function(){K.remove(this,e)})}}),E.extend({queue:function(e,t,n){var i;if(e)return t=(t||"fx")+"queue",i=U.get(e,t),n&&(!i||Array.isArray(n)?i=U.access(e,t,E.makeArray(n)):i.push(n)),i||[]},dequeue:function(e,t){t=t||"fx";var n=E.queue(e,t),i=n.length,a=n.shift(),r=E._queueHooks(e,t);"inprogress"===a&&(a=n.shift(),i--),a&&("fx"===t&&n.unshift("inprogress"),delete r.stop,a.call(e,function(){E.dequeue(e,t)},r)),!i&&r&&r.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return U.get(e,n)||U.access(e,n,{empty:E.Callbacks("once memory").add(function(){U.remove(e,[t+"queue",n])})})}}),E.fn.extend({queue:function(t,n){var e=2;return"string"!=typeof t&&(n=t,t="fx",e--),arguments.length<e?E.queue(this[0],t):void 0===n?this:this.each(function(){var e=E.queue(this,t,n);E._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&E.dequeue(this,t)})},dequeue:function(e){return this.each(function(){E.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function n(){--a||r.resolveWith(s,[s])}var i,a=1,r=E.Deferred(),s=this,o=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";o--;)(i=U.get(s[o],e+"queueHooks"))&&i.empty&&(a++,i.empty.add(n));return n(),r.promise(t)}});var ee=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,te=new RegExp("^(?:([+-])=|)("+ee+")([a-z%]*)$","i"),ne=["Top","Right","Bottom","Left"],ie=C.documentElement,ae=function(e){return E.contains(e.ownerDocument,e)},re={composed:!0};ie.getRootNode&&(ae=function(e){return E.contains(e.ownerDocument,e)||e.getRootNode(re)===e.ownerDocument});var se=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&ae(e)&&"none"===E.css(e,"display")};function oe(e,t,n,i){var a,r,s=20,o=i?function(){return i.cur()}:function(){return E.css(e,t,"")},l=o(),c=n&&n[3]||(E.cssNumber[t]?"":"px"),d=e.nodeType&&(E.cssNumber[t]||"px"!==c&&+l)&&te.exec(E.css(e,t));if(d&&d[3]!==c){for(l/=2,c=c||d[3],d=+l||1;s--;)E.style(e,t,d+c),(1-r)*(1-(r=o()/l||.5))<=0&&(s=0),d/=r;d*=2,E.style(e,t,d+c),n=n||[]}return n&&(d=+d||+l||0,a=n[1]?d+(n[1]+1)*n[2]:+n[2],i&&(i.unit=c,i.start=d,i.end=a)),a}var le={};function ce(e,t){for(var n,i,a,r,s,o,l,c=[],d=0,u=e.length;d<u;d++)(i=e[d]).style&&(n=i.style.display,t?("none"===n&&(c[d]=U.get(i,"display")||null,c[d]||(i.style.display="")),""===i.style.display&&se(i)&&(c[d]=(l=s=r=void 0,s=(a=i).ownerDocument,o=a.nodeName,(l=le[o])||(r=s.body.appendChild(s.createElement(o)),l=E.css(r,"display"),r.parentNode.removeChild(r),"none"===l&&(l="block"),le[o]=l)))):"none"!==n&&(c[d]="none",U.set(i,"display",n)));for(d=0;d<u;d++)null!=c[d]&&(e[d].style.display=c[d]);return e}E.fn.extend({show:function(){return ce(this,!0)},hide:function(){return ce(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){se(this)?E(this).show():E(this).hide()})}});var de,ue,pe=/^(?:checkbox|radio)$/i,he=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,fe=/^$|^module$|\/(?:java|ecma)script/i;de=C.createDocumentFragment().appendChild(C.createElement("div")),(ue=C.createElement("input")).setAttribute("type","radio"),ue.setAttribute("checked","checked"),ue.setAttribute("name","t"),de.appendChild(ue),y.checkClone=de.cloneNode(!0).cloneNode(!0).lastChild.checked,de.innerHTML="<textarea>x</textarea>",y.noCloneChecked=!!de.cloneNode(!0).lastChild.defaultValue,de.innerHTML="<option></option>",y.option=!!de.lastChild;var me={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function ge(e,t){var n;return n=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&k(e,t)?E.merge([e],n):n}function ve(e,t){for(var n=0,i=e.length;n<i;n++)U.set(e[n],"globalEval",!t||U.get(t[n],"globalEval"))}me.tbody=me.tfoot=me.colgroup=me.caption=me.thead,me.th=me.td,y.option||(me.optgroup=me.option=[1,"<select multiple='multiple'>","</select>"]);var ye=/<|&#?\w+;/;function be(e,t,n,i,a){for(var r,s,o,l,c,d,u=t.createDocumentFragment(),p=[],h=0,f=e.length;h<f;h++)if((r=e[h])||0===r)if("object"===w(r))E.merge(p,r.nodeType?[r]:r);else if(ye.test(r)){for(s=s||u.appendChild(t.createElement("div")),o=(he.exec(r)||["",""])[1].toLowerCase(),l=me[o]||me._default,s.innerHTML=l[1]+E.htmlPrefilter(r)+l[2],d=l[0];d--;)s=s.lastChild;E.merge(p,s.childNodes),(s=u.firstChild).textContent=""}else p.push(t.createTextNode(r));for(u.textContent="",h=0;r=p[h++];)if(i&&-1<E.inArray(r,i))a&&a.push(r);else if(c=ae(r),s=ge(u.appendChild(r),"script"),c&&ve(s),n)for(d=0;r=s[d++];)fe.test(r.type||"")&&n.push(r);return u}var xe=/^key/,we=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Te=/^([^.]*)(?:\.(.+)|)/;function Se(){return!0}function Ce(){return!1}function Ee(e,t){return e===function(){try{return C.activeElement}catch(e){}}()==("focus"===t)}function Pe(e,t,n,i,a,r){var s,o;if("object"==typeof t){for(o in"string"!=typeof n&&(i=i||n,n=void 0),t)Pe(e,o,n,i,t[o],r);return e}if(null==i&&null==a?(a=n,i=n=void 0):null==a&&("string"==typeof n?(a=i,i=void 0):(a=i,i=n,n=void 0)),!1===a)a=Ce;else if(!a)return e;return 1===r&&(s=a,(a=function(e){return E().off(e),s.apply(this,arguments)}).guid=s.guid||(s.guid=E.guid++)),e.each(function(){E.event.add(this,t,a,i,n)})}function ke(e,a,r){r?(U.set(e,a,!1),E.event.add(e,a,{namespace:!1,handler:function(e){var t,n,i=U.get(this,a);if(1&e.isTrigger&&this[a]){if(i.length)(E.event.special[a]||{}).delegateType&&e.stopPropagation();else if(i=o.call(arguments),U.set(this,a,i),t=r(this,a),this[a](),i!==(n=U.get(this,a))||t?U.set(this,a,!1):n={},i!==n)return e.stopImmediatePropagation(),e.preventDefault(),n.value}else i.length&&(U.set(this,a,{value:E.event.trigger(E.extend(i[0],E.Event.prototype),i.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===U.get(e,a)&&E.event.add(e,a,Se)}E.event={global:{},add:function(t,e,n,i,a){var r,s,o,l,c,d,u,p,h,f,m,g=U.get(t);if(V(t))for(n.handler&&(n=(r=n).handler,a=r.selector),a&&E.find.matchesSelector(ie,a),n.guid||(n.guid=E.guid++),(l=g.events)||(l=g.events=Object.create(null)),(s=g.handle)||(s=g.handle=function(e){return void 0!==E&&E.event.triggered!==e.type?E.event.dispatch.apply(t,arguments):void 0}),c=(e=(e||"").match(O)||[""]).length;c--;)h=m=(o=Te.exec(e[c])||[])[1],f=(o[2]||"").split(".").sort(),h&&(u=E.event.special[h]||{},h=(a?u.delegateType:u.bindType)||h,u=E.event.special[h]||{},d=E.extend({type:h,origType:m,data:i,handler:n,guid:n.guid,selector:a,needsContext:a&&E.expr.match.needsContext.test(a),namespace:f.join(".")},r),(p=l[h])||((p=l[h]=[]).delegateCount=0,u.setup&&!1!==u.setup.call(t,i,f,s)||t.addEventListener&&t.addEventListener(h,s)),u.add&&(u.add.call(t,d),d.handler.guid||(d.handler.guid=n.guid)),a?p.splice(p.delegateCount++,0,d):p.push(d),E.event.global[h]=!0)},remove:function(e,t,n,i,a){var r,s,o,l,c,d,u,p,h,f,m,g=U.hasData(e)&&U.get(e);if(g&&(l=g.events)){for(c=(t=(t||"").match(O)||[""]).length;c--;)if(h=m=(o=Te.exec(t[c])||[])[1],f=(o[2]||"").split(".").sort(),h){for(u=E.event.special[h]||{},p=l[h=(i?u.delegateType:u.bindType)||h]||[],o=o[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),s=r=p.length;r--;)d=p[r],!a&&m!==d.origType||n&&n.guid!==d.guid||o&&!o.test(d.namespace)||i&&i!==d.selector&&("**"!==i||!d.selector)||(p.splice(r,1),d.selector&&p.delegateCount--,u.remove&&u.remove.call(e,d));s&&!p.length&&(u.teardown&&!1!==u.teardown.call(e,f,g.handle)||E.removeEvent(e,h,g.handle),delete l[h])}else for(h in l)E.event.remove(e,h+t[c],n,i,!0);E.isEmptyObject(l)&&U.remove(e,"handle events")}},dispatch:function(e){var t,n,i,a,r,s,o=new Array(arguments.length),l=E.event.fix(e),c=(U.get(this,"events")||Object.create(null))[l.type]||[],d=E.event.special[l.type]||{};for(o[0]=l,t=1;t<arguments.length;t++)o[t]=arguments[t];if(l.delegateTarget=this,!d.preDispatch||!1!==d.preDispatch.call(this,l)){for(s=E.event.handlers.call(this,l,c),t=0;(a=s[t++])&&!l.isPropagationStopped();)for(l.currentTarget=a.elem,n=0;(r=a.handlers[n++])&&!l.isImmediatePropagationStopped();)l.rnamespace&&!1!==r.namespace&&!l.rnamespace.test(r.namespace)||(l.handleObj=r,l.data=r.data,void 0!==(i=((E.event.special[r.origType]||{}).handle||r.handler).apply(a.elem,o))&&!1===(l.result=i)&&(l.preventDefault(),l.stopPropagation()));return d.postDispatch&&d.postDispatch.call(this,l),l.result}},handlers:function(e,t){var n,i,a,r,s,o=[],l=t.delegateCount,c=e.target;if(l&&c.nodeType&&!("click"===e.type&&1<=e.button))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==e.type||!0!==c.disabled)){for(r=[],s={},n=0;n<l;n++)void 0===s[a=(i=t[n]).selector+" "]&&(s[a]=i.needsContext?-1<E(a,this).index(c):E.find(a,this,null,[c]).length),s[a]&&r.push(i);r.length&&o.push({elem:c,handlers:r})}return c=this,l<t.length&&o.push({elem:c,handlers:t.slice(l)}),o},addProp:function(t,e){Object.defineProperty(E.Event.prototype,t,{enumerable:!0,configurable:!0,get:b(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[E.expando]?e:new E.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&k(t,"input")&&ke(t,"click",Se),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&k(t,"input")&&ke(t,"click"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&k(t,"input")&&U.get(t,"click")||k(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},E.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},E.Event=function(e,t){if(!(this instanceof E.Event))return new E.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Se:Ce,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&E.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[E.expando]=!0},E.Event.prototype={constructor:E.Event,isDefaultPrevented:Ce,isPropagationStopped:Ce,isImmediatePropagationStopped:Ce,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Se,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Se,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Se,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},E.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&xe.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&we.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},E.event.addProp),E.each({focus:"focusin",blur:"focusout"},function(e,t){E.event.special[e]={setup:function(){return ke(this,e,Ee),!1},trigger:function(){return ke(this,e),!0},delegateType:t}}),E.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,a){E.event.special[e]={delegateType:a,bindType:a,handle:function(e){var t,n=e.relatedTarget,i=e.handleObj;return n&&(n===this||E.contains(this,n))||(e.type=i.origType,t=i.handler.apply(this,arguments),e.type=a),t}}}),E.fn.extend({on:function(e,t,n,i){return Pe(this,e,t,n,i)},one:function(e,t,n,i){return Pe(this,e,t,n,i,1)},off:function(e,t,n){var i,a;if(e&&e.preventDefault&&e.handleObj)return i=e.handleObj,E(e.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"!=typeof e)return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=Ce),this.each(function(){E.event.remove(this,e,n,t)});for(a in e)this.off(a,t,e[a]);return this}});var Me=/<script|<style|<link/i,$e=/checked\s*(?:[^=]|=\s*.checked.)/i,Le=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function De(e,t){return k(e,"table")&&k(11!==t.nodeType?t:t.firstChild,"tr")&&E(e).children("tbody")[0]||e}function Ae(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function ze(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Ie(e,t){var n,i,a,r,s,o;if(1===t.nodeType){if(U.hasData(e)&&(o=U.get(e).events))for(a in U.remove(t,"handle events"),o)for(n=0,i=o[a].length;n<i;n++)E.event.add(t,a,o[a][n]);K.hasData(e)&&(r=K.access(e),s=E.extend({},r),K.set(t,s))}}function Oe(n,i,a,r){i=g(i);var e,t,s,o,l,c,d=0,u=n.length,p=u-1,h=i[0],f=b(h);if(f||1<u&&"string"==typeof h&&!y.checkClone&&$e.test(h))return n.each(function(e){var t=n.eq(e);f&&(i[0]=h.call(this,e,t.html())),Oe(t,i,a,r)});if(u&&(t=(e=be(i,n[0].ownerDocument,!1,n,r)).firstChild,1===e.childNodes.length&&(e=t),t||r)){for(o=(s=E.map(ge(e,"script"),Ae)).length;d<u;d++)l=e,d!==p&&(l=E.clone(l,!0,!0),o&&E.merge(s,ge(l,"script"))),a.call(n[d],l,d);if(o)for(c=s[s.length-1].ownerDocument,E.map(s,ze),d=0;d<o;d++)l=s[d],fe.test(l.type||"")&&!U.access(l,"globalEval")&&E.contains(c,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?E._evalUrl&&!l.noModule&&E._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")},c):x(l.textContent.replace(Le,""),l,c))}return n}function Ne(e,t,n){for(var i,a=t?E.filter(t,e):e,r=0;null!=(i=a[r]);r++)n||1!==i.nodeType||E.cleanData(ge(i)),i.parentNode&&(n&&ae(i)&&ve(ge(i,"script")),i.parentNode.removeChild(i));return e}E.extend({htmlPrefilter:function(e){return e},clone:function(e,t,n){var i,a,r,s,o,l,c,d=e.cloneNode(!0),u=ae(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||E.isXMLDoc(e)))for(s=ge(d),i=0,a=(r=ge(e)).length;i<a;i++)o=r[i],l=s[i],"input"===(c=l.nodeName.toLowerCase())&&pe.test(o.type)?l.checked=o.checked:"input"!==c&&"textarea"!==c||(l.defaultValue=o.defaultValue);if(t)if(n)for(r=r||ge(e),s=s||ge(d),i=0,a=r.length;i<a;i++)Ie(r[i],s[i]);else Ie(e,d);return 0<(s=ge(d,"script")).length&&ve(s,!u&&ge(e,"script")),d},cleanData:function(e){for(var t,n,i,a=E.event.special,r=0;void 0!==(n=e[r]);r++)if(V(n)){if(t=n[U.expando]){if(t.events)for(i in t.events)a[i]?E.event.remove(n,i):E.removeEvent(n,i,t.handle);n[U.expando]=void 0}n[K.expando]&&(n[K.expando]=void 0)}}}),E.fn.extend({detach:function(e){return Ne(this,e,!0)},remove:function(e){return Ne(this,e)},text:function(e){return R(this,function(e){return void 0===e?E.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return Oe(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||De(this,e).appendChild(e)})},prepend:function(){return Oe(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=De(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return Oe(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return Oe(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(E.cleanData(ge(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return E.clone(this,e,t)})},html:function(e){return R(this,function(e){var t=this[0]||{},n=0,i=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Me.test(e)&&!me[(he.exec(e)||["",""])[1].toLowerCase()]){e=E.htmlPrefilter(e);try{for(;n<i;n++)1===(t=this[n]||{}).nodeType&&(E.cleanData(ge(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return Oe(this,arguments,function(e){var t=this.parentNode;E.inArray(this,n)<0&&(E.cleanData(ge(this)),t&&t.replaceChild(e,this))},n)}}),E.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,s){E.fn[e]=function(e){for(var t,n=[],i=E(e),a=i.length-1,r=0;r<=a;r++)t=r===a?this:this.clone(!0),E(i[r])[s](t),l.apply(n,t.get());return this.pushStack(n)}});function He(e,t,n){var i,a,r={};for(a in t)r[a]=e.style[a],e.style[a]=t[a];for(a in i=n.call(e),t)e.style[a]=r[a];return i}var je,qe,Fe,Be,Re,Xe,Ye,We,Ge=new RegExp("^("+ee+")(?!px)[a-z%]+$","i"),Ve=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=S),t.getComputedStyle(e)},_e=new RegExp(ne.join("|"),"i");function Ue(){if(We){Ye.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",We.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ie.appendChild(Ye).appendChild(We);var e=S.getComputedStyle(We);je="1%"!==e.top,Xe=12===Ke(e.marginLeft),We.style.right="60%",Be=36===Ke(e.right),qe=36===Ke(e.width),We.style.position="absolute",Fe=12===Ke(We.offsetWidth/3),ie.removeChild(Ye),We=null}}function Ke(e){return Math.round(parseFloat(e))}function Ze(e,t,n){var i,a,r,s,o=e.style;return(n=n||Ve(e))&&(""!==(s=n.getPropertyValue(t)||n[t])||ae(e)||(s=E.style(e,t)),!y.pixelBoxStyles()&&Ge.test(s)&&_e.test(t)&&(i=o.width,a=o.minWidth,r=o.maxWidth,o.minWidth=o.maxWidth=o.width=s,s=n.width,o.width=i,o.minWidth=a,o.maxWidth=r)),void 0!==s?s+"":s}function Qe(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}Ye=C.createElement("div"),(We=C.createElement("div")).style&&(We.style.backgroundClip="content-box",We.cloneNode(!0).style.backgroundClip="",y.clearCloneStyle="content-box"===We.style.backgroundClip,E.extend(y,{boxSizingReliable:function(){return Ue(),qe},pixelBoxStyles:function(){return Ue(),Be},pixelPosition:function(){return Ue(),je},reliableMarginLeft:function(){return Ue(),Xe},scrollboxSize:function(){return Ue(),Fe},reliableTrDimensions:function(){var e,t,n,i;return null==Re&&(e=C.createElement("table"),t=C.createElement("tr"),n=C.createElement("div"),e.style.cssText="position:absolute;left:-11111px",t.style.height="1px",n.style.height="9px",ie.appendChild(e).appendChild(t).appendChild(n),i=S.getComputedStyle(t),Re=3<parseInt(i.height),ie.removeChild(e)),Re}}));var Je=["Webkit","Moz","ms"],et=C.createElement("div").style,tt={};function nt(e){var t=E.cssProps[e]||tt[e];return t||(e in et?e:tt[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),n=Je.length;n--;)if((e=Je[n]+t)in et)return e}(e)||e)}var it=/^(none|table(?!-c[ea]).+)/,at=/^--/,rt={position:"absolute",visibility:"hidden",display:"block"},st={letterSpacing:"0",fontWeight:"400"};function ot(e,t,n){var i=te.exec(t);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):t}function lt(e,t,n,i,a,r){var s="width"===t?1:0,o=0,l=0;if(n===(i?"border":"content"))return 0;for(;s<4;s+=2)"margin"===n&&(l+=E.css(e,n+ne[s],!0,a)),i?("content"===n&&(l-=E.css(e,"padding"+ne[s],!0,a)),"margin"!==n&&(l-=E.css(e,"border"+ne[s]+"Width",!0,a))):(l+=E.css(e,"padding"+ne[s],!0,a),"padding"!==n?l+=E.css(e,"border"+ne[s]+"Width",!0,a):o+=E.css(e,"border"+ne[s]+"Width",!0,a));return!i&&0<=r&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-r-l-o-.5))||0),l}function ct(e,t,n){var i=Ve(e),a=(!y.boxSizingReliable()||n)&&"border-box"===E.css(e,"boxSizing",!1,i),r=a,s=Ze(e,t,i),o="offset"+t[0].toUpperCase()+t.slice(1);if(Ge.test(s)){if(!n)return s;s="auto"}return(!y.boxSizingReliable()&&a||!y.reliableTrDimensions()&&k(e,"tr")||"auto"===s||!parseFloat(s)&&"inline"===E.css(e,"display",!1,i))&&e.getClientRects().length&&(a="border-box"===E.css(e,"boxSizing",!1,i),(r=o in e)&&(s=e[o])),(s=parseFloat(s)||0)+lt(e,t,n||(a?"border":"content"),r,i,s)+"px"}function dt(e,t,n,i,a){return new dt.prototype.init(e,t,n,i,a)}E.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Ze(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,i){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var a,r,s,o=G(t),l=at.test(t),c=e.style;if(l||(t=nt(o)),s=E.cssHooks[t]||E.cssHooks[o],void 0===n)return s&&"get"in s&&void 0!==(a=s.get(e,!1,i))?a:c[t];"string"===(r=typeof n)&&(a=te.exec(n))&&a[1]&&(n=oe(e,t,a),r="number"),null!=n&&n==n&&("number"!==r||l||(n+=a&&a[3]||(E.cssNumber[o]?"":"px")),y.clearCloneStyle||""!==n||0!==t.indexOf("background")||(c[t]="inherit"),s&&"set"in s&&void 0===(n=s.set(e,n,i))||(l?c.setProperty(t,n):c[t]=n))}},css:function(e,t,n,i){var a,r,s,o=G(t);return at.test(t)||(t=nt(o)),(s=E.cssHooks[t]||E.cssHooks[o])&&"get"in s&&(a=s.get(e,!0,n)),void 0===a&&(a=Ze(e,t,i)),"normal"===a&&t in st&&(a=st[t]),""===n||n?(r=parseFloat(a),!0===n||isFinite(r)?r||0:a):a}}),E.each(["height","width"],function(e,l){E.cssHooks[l]={get:function(e,t,n){if(t)return!it.test(E.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?ct(e,l,n):He(e,rt,function(){return ct(e,l,n)})},set:function(e,t,n){var i,a=Ve(e),r=!y.scrollboxSize()&&"absolute"===a.position,s=(r||n)&&"border-box"===E.css(e,"boxSizing",!1,a),o=n?lt(e,l,n,s,a):0;return s&&r&&(o-=Math.ceil(e["offset"+l[0].toUpperCase()+l.slice(1)]-parseFloat(a[l])-lt(e,l,"border",!1,a)-.5)),o&&(i=te.exec(t))&&"px"!==(i[3]||"px")&&(e.style[l]=t,t=E.css(e,l)),ot(0,t,o)}}}),E.cssHooks.marginLeft=Qe(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Ze(e,"marginLeft"))||e.getBoundingClientRect().left-He(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),E.each({margin:"",padding:"",border:"Width"},function(a,r){E.cssHooks[a+r]={expand:function(e){for(var t=0,n={},i="string"==typeof e?e.split(" "):[e];t<4;t++)n[a+ne[t]+r]=i[t]||i[t-2]||i[0];return n}},"margin"!==a&&(E.cssHooks[a+r].set=ot)}),E.fn.extend({css:function(e,t){return R(this,function(e,t,n){var i,a,r={},s=0;if(Array.isArray(t)){for(i=Ve(e),a=t.length;s<a;s++)r[t[s]]=E.css(e,t[s],!1,i);return r}return void 0!==n?E.style(e,t,n):E.css(e,t)},e,t,1<arguments.length)}}),(E.Tween=dt).prototype={constructor:dt,init:function(e,t,n,i,a,r){this.elem=e,this.prop=n,this.easing=a||E.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=i,this.unit=r||(E.cssNumber[n]?"":"px")},cur:function(){var e=dt.propHooks[this.prop];return e&&e.get?e.get(this):dt.propHooks._default.get(this)},run:function(e){var t,n=dt.propHooks[this.prop];return this.options.duration?this.pos=t=E.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):dt.propHooks._default.set(this),this}},dt.prototype.init.prototype=dt.prototype,dt.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=E.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){E.fx.step[e.prop]?E.fx.step[e.prop](e):1!==e.elem.nodeType||!E.cssHooks[e.prop]&&null==e.elem.style[nt(e.prop)]?e.elem[e.prop]=e.now:E.style(e.elem,e.prop,e.now+e.unit)}}},dt.propHooks.scrollTop=dt.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},E.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},E.fx=dt.prototype.init,E.fx.step={};var ut,pt,ht,ft,mt=/^(?:toggle|show|hide)$/,gt=/queueHooks$/;function vt(){pt&&(!1===C.hidden&&S.requestAnimationFrame?S.requestAnimationFrame(vt):S.setTimeout(vt,E.fx.interval),E.fx.tick())}function yt(){return S.setTimeout(function(){ut=void 0}),ut=Date.now()}function bt(e,t){var n,i=0,a={height:e};for(t=t?1:0;i<4;i+=2-t)a["margin"+(n=ne[i])]=a["padding"+n]=e;return t&&(a.opacity=a.width=e),a}function xt(e,t,n){for(var i,a=(wt.tweeners[t]||[]).concat(wt.tweeners["*"]),r=0,s=a.length;r<s;r++)if(i=a[r].call(n,t,e))return i}function wt(r,e,t){var n,s,i=0,a=wt.prefilters.length,o=E.Deferred().always(function(){delete l.elem}),l=function(){if(s)return!1;for(var e=ut||yt(),t=Math.max(0,c.startTime+c.duration-e),n=1-(t/c.duration||0),i=0,a=c.tweens.length;i<a;i++)c.tweens[i].run(n);return o.notifyWith(r,[c,n,t]),n<1&&a?t:(a||o.notifyWith(r,[c,1,0]),o.resolveWith(r,[c]),!1)},c=o.promise({elem:r,props:E.extend({},e),opts:E.extend(!0,{specialEasing:{},easing:E.easing._default},t),originalProperties:e,originalOptions:t,startTime:ut||yt(),duration:t.duration,tweens:[],createTween:function(e,t){var n=E.Tween(r,c.opts,e,t,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(n),n},stop:function(e){var t=0,n=e?c.tweens.length:0;if(s)return this;for(s=!0;t<n;t++)c.tweens[t].run(1);return e?(o.notifyWith(r,[c,1,0]),o.resolveWith(r,[c,e])):o.rejectWith(r,[c,e]),this}}),d=c.props;for(!function(e,t){var n,i,a,r,s;for(n in e)if(a=t[i=G(n)],r=e[n],Array.isArray(r)&&(a=r[1],r=e[n]=r[0]),n!==i&&(e[i]=r,delete e[n]),(s=E.cssHooks[i])&&"expand"in s)for(n in r=s.expand(r),delete e[i],r)n in e||(e[n]=r[n],t[n]=a);else t[i]=a}(d,c.opts.specialEasing);i<a;i++)if(n=wt.prefilters[i].call(c,r,d,c.opts))return b(n.stop)&&(E._queueHooks(c.elem,c.opts.queue).stop=n.stop.bind(n)),n;return E.map(d,xt,c),b(c.opts.start)&&c.opts.start.call(r,c),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always),E.fx.timer(E.extend(l,{elem:r,anim:c,queue:c.opts.queue})),c}E.Animation=E.extend(wt,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return oe(n.elem,e,te.exec(t),n),n}]},tweener:function(e,t){for(var n,i=0,a=(e=b(e)?(t=e,["*"]):e.match(O)).length;i<a;i++)n=e[i],wt.tweeners[n]=wt.tweeners[n]||[],wt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var i,a,r,s,o,l,c,d,u="width"in t||"height"in t,p=this,h={},f=e.style,m=e.nodeType&&se(e),g=U.get(e,"fxshow");for(i in n.queue||(null==(s=E._queueHooks(e,"fx")).unqueued&&(s.unqueued=0,o=s.empty.fire,s.empty.fire=function(){s.unqueued||o()}),s.unqueued++,p.always(function(){p.always(function(){s.unqueued--,E.queue(e,"fx").length||s.empty.fire()})})),t)if(a=t[i],mt.test(a)){if(delete t[i],r=r||"toggle"===a,a===(m?"hide":"show")){if("show"!==a||!g||void 0===g[i])continue;m=!0}h[i]=g&&g[i]||E.style(e,i)}if((l=!E.isEmptyObject(t))||!E.isEmptyObject(h))for(i in u&&1===e.nodeType&&(n.overflow=[f.overflow,f.overflowX,f.overflowY],null==(c=g&&g.display)&&(c=U.get(e,"display")),"none"===(d=E.css(e,"display"))&&(c?d=c:(ce([e],!0),c=e.style.display||c,d=E.css(e,"display"),ce([e]))),("inline"===d||"inline-block"===d&&null!=c)&&"none"===E.css(e,"float")&&(l||(p.done(function(){f.display=c}),null==c&&(d=f.display,c="none"===d?"":d)),f.display="inline-block")),n.overflow&&(f.overflow="hidden",p.always(function(){f.overflow=n.overflow[0],f.overflowX=n.overflow[1],f.overflowY=n.overflow[2]})),l=!1,h)l||(g?"hidden"in g&&(m=g.hidden):g=U.access(e,"fxshow",{display:c}),r&&(g.hidden=!m),m&&ce([e],!0),p.done(function(){for(i in m||ce([e]),U.remove(e,"fxshow"),h)E.style(e,i,h[i])})),l=xt(m?g[i]:0,i,p),i in g||(g[i]=l.start,m&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?wt.prefilters.unshift(e):wt.prefilters.push(e)}}),E.speed=function(e,t,n){var i=e&&"object"==typeof e?E.extend({},e):{complete:n||!n&&t||b(e)&&e,duration:e,easing:n&&t||t&&!b(t)&&t};return E.fx.off?i.duration=0:"number"!=typeof i.duration&&(i.duration in E.fx.speeds?i.duration=E.fx.speeds[i.duration]:i.duration=E.fx.speeds._default),null!=i.queue&&!0!==i.queue||(i.queue="fx"),i.old=i.complete,i.complete=function(){b(i.old)&&i.old.call(this),i.queue&&E.dequeue(this,i.queue)},i},E.fn.extend({fadeTo:function(e,t,n,i){return this.filter(se).css("opacity",0).show().end().animate({opacity:t},e,n,i)},animate:function(t,e,n,i){function a(){var e=wt(this,E.extend({},t),s);(r||U.get(this,"finish"))&&e.stop(!0)}var r=E.isEmptyObject(t),s=E.speed(e,n,i);return a.finish=a,r||!1===s.queue?this.each(a):this.queue(s.queue,a)},stop:function(a,e,r){function s(e){var t=e.stop;delete e.stop,t(r)}return"string"!=typeof a&&(r=e,e=a,a=void 0),e&&this.queue(a||"fx",[]),this.each(function(){var e=!0,t=null!=a&&a+"queueHooks",n=E.timers,i=U.get(this);if(t)i[t]&&i[t].stop&&s(i[t]);else for(t in i)i[t]&&i[t].stop&&gt.test(t)&&s(i[t]);for(t=n.length;t--;)n[t].elem!==this||null!=a&&n[t].queue!==a||(n[t].anim.stop(r),e=!1,n.splice(t,1));!e&&r||E.dequeue(this,a)})},finish:function(s){return!1!==s&&(s=s||"fx"),this.each(function(){var e,t=U.get(this),n=t[s+"queue"],i=t[s+"queueHooks"],a=E.timers,r=n?n.length:0;for(t.finish=!0,E.queue(this,s,[]),i&&i.stop&&i.stop.call(this,!0),e=a.length;e--;)a[e].elem===this&&a[e].queue===s&&(a[e].anim.stop(!0),a.splice(e,1));for(e=0;e<r;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),E.each(["toggle","show","hide"],function(e,i){var a=E.fn[i];E.fn[i]=function(e,t,n){return null==e||"boolean"==typeof e?a.apply(this,arguments):this.animate(bt(i,!0),e,t,n)}}),E.each({slideDown:bt("show"),slideUp:bt("hide"),slideToggle:bt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,i){E.fn[e]=function(e,t,n){return this.animate(i,e,t,n)}}),E.timers=[],E.fx.tick=function(){var e,t=0,n=E.timers;for(ut=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||E.fx.stop(),ut=void 0},E.fx.timer=function(e){E.timers.push(e),E.fx.start()},E.fx.interval=13,E.fx.start=function(){pt||(pt=!0,vt())},E.fx.stop=function(){pt=null},E.fx.speeds={slow:600,fast:200,_default:400},E.fn.delay=function(i,e){return i=E.fx&&E.fx.speeds[i]||i,e=e||"fx",this.queue(e,function(e,t){var n=S.setTimeout(e,i);t.stop=function(){S.clearTimeout(n)}})},ht=C.createElement("input"),ft=C.createElement("select").appendChild(C.createElement("option")),ht.type="checkbox",y.checkOn=""!==ht.value,y.optSelected=ft.selected,(ht=C.createElement("input")).value="t",ht.type="radio",y.radioValue="t"===ht.value;var Tt,St=E.expr.attrHandle;E.fn.extend({attr:function(e,t){return R(this,E.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){E.removeAttr(this,e)})}}),E.extend({attr:function(e,t,n){var i,a,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return void 0===e.getAttribute?E.prop(e,t,n):(1===r&&E.isXMLDoc(e)||(a=E.attrHooks[t.toLowerCase()]||(E.expr.match.bool.test(t)?Tt:void 0)),void 0!==n?null===n?void E.removeAttr(e,t):a&&"set"in a&&void 0!==(i=a.set(e,n,t))?i:(e.setAttribute(t,n+""),n):!(a&&"get"in a&&null!==(i=a.get(e,t)))&&null==(i=E.find.attr(e,t))?void 0:i)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&"radio"===t&&k(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,i=0,a=t&&t.match(O);if(a&&1===e.nodeType)for(;n=a[i++];)e.removeAttribute(n)}}),Tt={set:function(e,t,n){return!1===t?E.removeAttr(e,n):e.setAttribute(n,n),n}},E.each(E.expr.match.bool.source.match(/\w+/g),function(e,t){var s=St[t]||E.find.attr;St[t]=function(e,t,n){var i,a,r=t.toLowerCase();return n||(a=St[r],St[r]=i,i=null!=s(e,t,n)?r:null,St[r]=a),i}});var Ct=/^(?:input|select|textarea|button)$/i,Et=/^(?:a|area)$/i;function Pt(e){return(e.match(O)||[]).join(" ")}function kt(e){return e.getAttribute&&e.getAttribute("class")||""}function Mt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(O)||[]}E.fn.extend({prop:function(e,t){return R(this,E.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[E.propFix[e]||e]})}}),E.extend({prop:function(e,t,n){var i,a,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&E.isXMLDoc(e)||(t=E.propFix[t]||t,a=E.propHooks[t]),void 0!==n?a&&"set"in a&&void 0!==(i=a.set(e,n,t))?i:e[t]=n:a&&"get"in a&&null!==(i=a.get(e,t))?i:e[t]},propHooks:{tabIndex:{get:function(e){var t=E.find.attr(e,"tabindex");return t?parseInt(t,10):Ct.test(e.nodeName)||Et.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),y.optSelected||(E.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),E.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){E.propFix[this.toLowerCase()]=this}),E.fn.extend({addClass:function(t){var e,n,i,a,r,s,o,l=0;if(b(t))return this.each(function(e){E(this).addClass(t.call(this,e,kt(this)))});if((e=Mt(t)).length)for(;n=this[l++];)if(a=kt(n),i=1===n.nodeType&&" "+Pt(a)+" "){for(s=0;r=e[s++];)i.indexOf(" "+r+" ")<0&&(i+=r+" ");a!==(o=Pt(i))&&n.setAttribute("class",o)}return this},removeClass:function(t){var e,n,i,a,r,s,o,l=0;if(b(t))return this.each(function(e){E(this).removeClass(t.call(this,e,kt(this)))});if(!arguments.length)return this.attr("class","");if((e=Mt(t)).length)for(;n=this[l++];)if(a=kt(n),i=1===n.nodeType&&" "+Pt(a)+" "){for(s=0;r=e[s++];)for(;-1<i.indexOf(" "+r+" ");)i=i.replace(" "+r+" "," ");a!==(o=Pt(i))&&n.setAttribute("class",o)}return this},toggleClass:function(a,t){var r=typeof a,s="string"==r||Array.isArray(a);return"boolean"==typeof t&&s?t?this.addClass(a):this.removeClass(a):b(a)?this.each(function(e){E(this).toggleClass(a.call(this,e,kt(this),t),t)}):this.each(function(){var e,t,n,i;if(s)for(t=0,n=E(this),i=Mt(a);e=i[t++];)n.hasClass(e)?n.removeClass(e):n.addClass(e);else void 0!==a&&"boolean"!=r||((e=kt(this))&&U.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",!e&&!1!==a&&U.get(this,"__className__")||""))})},hasClass:function(e){var t,n,i=0;for(t=" "+e+" ";n=this[i++];)if(1===n.nodeType&&-1<(" "+Pt(kt(n))+" ").indexOf(t))return!0;return!1}});var $t=/\r/g;E.fn.extend({val:function(n){var i,e,a,t=this[0];return arguments.length?(a=b(n),this.each(function(e){var t;1===this.nodeType&&(null==(t=a?n.call(this,e,E(this).val()):n)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=E.map(t,function(e){return null==e?"":e+""})),(i=E.valHooks[this.type]||E.valHooks[this.nodeName.toLowerCase()])&&"set"in i&&void 0!==i.set(this,t,"value")||(this.value=t))})):t?(i=E.valHooks[t.type]||E.valHooks[t.nodeName.toLowerCase()])&&"get"in i&&void 0!==(e=i.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace($t,""):null==e?"":e:void 0}}),E.extend({valHooks:{option:{get:function(e){var t=E.find.attr(e,"value");return null!=t?t:Pt(E.text(e))}},select:{get:function(e){var t,n,i,a=e.options,r=e.selectedIndex,s="select-one"===e.type,o=s?null:[],l=s?r+1:a.length;for(i=r<0?l:s?r:0;i<l;i++)if(((n=a[i]).selected||i===r)&&!n.disabled&&(!n.parentNode.disabled||!k(n.parentNode,"optgroup"))){if(t=E(n).val(),s)return t;o.push(t)}return o},set:function(e,t){for(var n,i,a=e.options,r=E.makeArray(t),s=a.length;s--;)((i=a[s]).selected=-1<E.inArray(E.valHooks.option.get(i),r))&&(n=!0);return n||(e.selectedIndex=-1),r}}}}),E.each(["radio","checkbox"],function(){E.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<E.inArray(E(e).val(),t)}},y.checkOn||(E.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),y.focusin="onfocusin"in S;function Lt(e){e.stopPropagation()}var Dt=/^(?:focusinfocus|focusoutblur)$/;E.extend(E.event,{trigger:function(e,t,n,i){var a,r,s,o,l,c,d,u,p=[n||C],h=v.call(e,"type")?e.type:e,f=v.call(e,"namespace")?e.namespace.split("."):[];if(r=u=s=n=n||C,3!==n.nodeType&&8!==n.nodeType&&!Dt.test(h+E.event.triggered)&&(-1<h.indexOf(".")&&(h=(f=h.split(".")).shift(),f.sort()),l=h.indexOf(":")<0&&"on"+h,(e=e[E.expando]?e:new E.Event(h,"object"==typeof e&&e)).isTrigger=i?2:3,e.namespace=f.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:E.makeArray(t,[e]),d=E.event.special[h]||{},i||!d.trigger||!1!==d.trigger.apply(n,t))){if(!i&&!d.noBubble&&!m(n)){for(o=d.delegateType||h,Dt.test(o+h)||(r=r.parentNode);r;r=r.parentNode)p.push(r),s=r;s===(n.ownerDocument||C)&&p.push(s.defaultView||s.parentWindow||S)}for(a=0;(r=p[a++])&&!e.isPropagationStopped();)u=r,e.type=1<a?o:d.bindType||h,(c=(U.get(r,"events")||Object.create(null))[e.type]&&U.get(r,"handle"))&&c.apply(r,t),(c=l&&r[l])&&c.apply&&V(r)&&(e.result=c.apply(r,t),!1===e.result&&e.preventDefault());return e.type=h,i||e.isDefaultPrevented()||d._default&&!1!==d._default.apply(p.pop(),t)||!V(n)||l&&b(n[h])&&!m(n)&&((s=n[l])&&(n[l]=null),E.event.triggered=h,e.isPropagationStopped()&&u.addEventListener(h,Lt),n[h](),e.isPropagationStopped()&&u.removeEventListener(h,Lt),E.event.triggered=void 0,s&&(n[l]=s)),e.result}},simulate:function(e,t,n){var i=E.extend(new E.Event,n,{type:e,isSimulated:!0});E.event.trigger(i,null,t)}}),E.fn.extend({trigger:function(e,t){return this.each(function(){E.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return E.event.trigger(e,t,n,!0)}}),y.focusin||E.each({focus:"focusin",blur:"focusout"},function(n,i){function a(e){E.event.simulate(i,e.target,E.event.fix(e))}E.event.special[i]={setup:function(){var e=this.ownerDocument||this.document||this,t=U.access(e,i);t||e.addEventListener(n,a,!0),U.access(e,i,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=U.access(e,i)-1;t?U.access(e,i,t):(e.removeEventListener(n,a,!0),U.remove(e,i))}}});var At=S.location,zt={guid:Date.now()},It=/\?/;E.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new S.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||E.error("Invalid XML: "+e),t};var Ot=/\[\]$/,Nt=/\r?\n/g,Ht=/^(?:submit|button|image|reset|file)$/i,jt=/^(?:input|select|textarea|keygen)/i;function qt(n,e,i,a){var t;if(Array.isArray(e))E.each(e,function(e,t){i||Ot.test(n)?a(n,t):qt(n+"["+("object"==typeof t&&null!=t?e:"")+"]",t,i,a)});else if(i||"object"!==w(e))a(n,e);else for(t in e)qt(n+"["+t+"]",e[t],i,a)}E.param=function(e,t){function n(e,t){var n=b(t)?t():t;a[a.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)}var i,a=[];if(null==e)return"";if(Array.isArray(e)||e.jquery&&!E.isPlainObject(e))E.each(e,function(){n(this.name,this.value)});else for(i in e)qt(i,e[i],t,n);return a.join("&")},E.fn.extend({serialize:function(){return E.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=E.prop(this,"elements");return e?E.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!E(this).is(":disabled")&&jt.test(this.nodeName)&&!Ht.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var n=E(this).val();return null==n?null:Array.isArray(n)?E.map(n,function(e){return{name:t.name,value:e.replace(Nt,"\r\n")}}):{name:t.name,value:n.replace(Nt,"\r\n")}}).get()}});var Ft=/%20/g,Bt=/#.*$/,Rt=/([?&])_=[^&]*/,Xt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Yt=/^(?:GET|HEAD)$/,Wt=/^\/\//,Gt={},Vt={},_t="*/".concat("*"),Ut=C.createElement("a");function Kt(r){return function(e,t){"string"!=typeof e&&(t=e,e="*");var n,i=0,a=e.toLowerCase().match(O)||[];if(b(t))for(;n=a[i++];)"+"===n[0]?(n=n.slice(1)||"*",(r[n]=r[n]||[]).unshift(t)):(r[n]=r[n]||[]).push(t)}}function Zt(t,a,r,s){var o={},l=t===Vt;function c(e){var i;return o[e]=!0,E.each(t[e]||[],function(e,t){var n=t(a,r,s);return"string"!=typeof n||l||o[n]?l?!(i=n):void 0:(a.dataTypes.unshift(n),c(n),!1)}),i}return c(a.dataTypes[0])||!o["*"]&&c("*")}function Qt(e,t){var n,i,a=E.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((a[n]?e:i=i||{})[n]=t[n]);return i&&E.extend(!0,e,i),e}Ut.href=At.href,E.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:At.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(At.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":_t,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":E.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Qt(Qt(e,E.ajaxSettings),t):Qt(E.ajaxSettings,e)},ajaxPrefilter:Kt(Gt),ajaxTransport:Kt(Vt),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var d,u,p,n,h,i,f,m,a,r,g=E.ajaxSetup({},t),v=g.context||g,y=g.context&&(v.nodeType||v.jquery)?E(v):E.event,b=E.Deferred(),x=E.Callbacks("once memory"),w=g.statusCode||{},s={},o={},l="canceled",T={readyState:0,getResponseHeader:function(e){var t;if(f){if(!n)for(n={};t=Xt.exec(p);)n[t[1].toLowerCase()+" "]=(n[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=n[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return f?p:null},setRequestHeader:function(e,t){return null==f&&(e=o[e.toLowerCase()]=o[e.toLowerCase()]||e,s[e]=t),this},overrideMimeType:function(e){return null==f&&(g.mimeType=e),this},statusCode:function(e){var t;if(e)if(f)T.always(e[T.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||l;return d&&d.abort(t),c(0,t),this}};if(b.promise(T),g.url=((e||g.url||At.href)+"").replace(Wt,At.protocol+"//"),g.type=t.method||t.type||g.method||g.type,g.dataTypes=(g.dataType||"*").toLowerCase().match(O)||[""],null==g.crossDomain){i=C.createElement("a");try{i.href=g.url,i.href=i.href,g.crossDomain=Ut.protocol+"//"+Ut.host!=i.protocol+"//"+i.host}catch(e){g.crossDomain=!0}}if(g.data&&g.processData&&"string"!=typeof g.data&&(g.data=E.param(g.data,g.traditional)),Zt(Gt,g,t,T),f)return T;for(a in(m=E.event&&g.global)&&0==E.active++&&E.event.trigger("ajaxStart"),g.type=g.type.toUpperCase(),g.hasContent=!Yt.test(g.type),u=g.url.replace(Bt,""),g.hasContent?g.data&&g.processData&&0===(g.contentType||"").indexOf("application/x-www-form-urlencoded")&&(g.data=g.data.replace(Ft,"+")):(r=g.url.slice(u.length),g.data&&(g.processData||"string"==typeof g.data)&&(u+=(It.test(u)?"&":"?")+g.data,delete g.data),!1===g.cache&&(u=u.replace(Rt,"$1"),r=(It.test(u)?"&":"?")+"_="+zt.guid+++r),g.url=u+r),g.ifModified&&(E.lastModified[u]&&T.setRequestHeader("If-Modified-Since",E.lastModified[u]),E.etag[u]&&T.setRequestHeader("If-None-Match",E.etag[u])),(g.data&&g.hasContent&&!1!==g.contentType||t.contentType)&&T.setRequestHeader("Content-Type",g.contentType),T.setRequestHeader("Accept",g.dataTypes[0]&&g.accepts[g.dataTypes[0]]?g.accepts[g.dataTypes[0]]+("*"!==g.dataTypes[0]?", "+_t+"; q=0.01":""):g.accepts["*"]),g.headers)T.setRequestHeader(a,g.headers[a]);if(g.beforeSend&&(!1===g.beforeSend.call(v,T,g)||f))return T.abort();if(l="abort",x.add(g.complete),T.done(g.success),T.fail(g.error),d=Zt(Vt,g,t,T)){if(T.readyState=1,m&&y.trigger("ajaxSend",[T,g]),f)return T;g.async&&0<g.timeout&&(h=S.setTimeout(function(){T.abort("timeout")},g.timeout));try{f=!1,d.send(s,c)}catch(e){if(f)throw e;c(-1,e)}}else c(-1,"No Transport");function c(e,t,n,i){var a,r,s,o,l,c=t;f||(f=!0,h&&S.clearTimeout(h),d=void 0,p=i||"",T.readyState=0<e?4:0,a=200<=e&&e<300||304===e,n&&(o=function(e,t,n){for(var i,a,r,s,o=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=e.mimeType||t.getResponseHeader("Content-Type"));if(i)for(a in o)if(o[a]&&o[a].test(i)){l.unshift(a);break}if(l[0]in n)r=l[0];else{for(a in n){if(!l[0]||e.converters[a+" "+l[0]]){r=a;break}s=s||a}r=r||s}if(r)return r!==l[0]&&l.unshift(r),n[r]}(g,T,n)),!a&&-1<E.inArray("script",g.dataTypes)&&(g.converters["text script"]=function(){}),o=function(e,t,n,i){var a,r,s,o,l,c={},d=e.dataTypes.slice();if(d[1])for(s in e.converters)c[s.toLowerCase()]=e.converters[s];for(r=d.shift();r;)if(e.responseFields[r]&&(n[e.responseFields[r]]=t),!l&&i&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=r,r=d.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(!(s=c[l+" "+r]||c["* "+r]))for(a in c)if((o=a.split(" "))[1]===r&&(s=c[l+" "+o[0]]||c["* "+o[0]])){!0===s?s=c[a]:!0!==c[a]&&(r=o[0],d.unshift(o[1]));break}if(!0!==s)if(s&&e.throws)t=s(t);else try{t=s(t)}catch(e){return{state:"parsererror",error:s?e:"No conversion from "+l+" to "+r}}}return{state:"success",data:t}}(g,o,T,a),a?(g.ifModified&&((l=T.getResponseHeader("Last-Modified"))&&(E.lastModified[u]=l),(l=T.getResponseHeader("etag"))&&(E.etag[u]=l)),204===e||"HEAD"===g.type?c="nocontent":304===e?c="notmodified":(c=o.state,r=o.data,a=!(s=o.error))):(s=c,!e&&c||(c="error",e<0&&(e=0))),T.status=e,T.statusText=(t||c)+"",a?b.resolveWith(v,[r,c,T]):b.rejectWith(v,[T,c,s]),T.statusCode(w),w=void 0,m&&y.trigger(a?"ajaxSuccess":"ajaxError",[T,g,a?r:s]),x.fireWith(v,[T,c]),m&&(y.trigger("ajaxComplete",[T,g]),--E.active||E.event.trigger("ajaxStop")))}return T},getJSON:function(e,t,n){return E.get(e,t,n,"json")},getScript:function(e,t){return E.get(e,void 0,t,"script")}}),E.each(["get","post"],function(e,a){E[a]=function(e,t,n,i){return b(t)&&(i=i||n,n=t,t=void 0),E.ajax(E.extend({url:e,type:a,dataType:i,data:t,success:n},E.isPlainObject(e)&&e))}}),E.ajaxPrefilter(function(e){var t;for(t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")}),E._evalUrl=function(e,t,n){return E.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){E.globalEval(e,t,n)}})},E.fn.extend({wrapAll:function(e){var t;return this[0]&&(b(e)&&(e=e.call(this[0])),t=E(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(n){return b(n)?this.each(function(e){E(this).wrapInner(n.call(this,e))}):this.each(function(){var e=E(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=b(t);return this.each(function(e){E(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){E(this).replaceWith(this.childNodes)}),this}}),E.expr.pseudos.hidden=function(e){return!E.expr.pseudos.visible(e)},E.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},E.ajaxSettings.xhr=function(){try{return new S.XMLHttpRequest}catch(e){}};var Jt={0:200,1223:204},en=E.ajaxSettings.xhr();y.cors=!!en&&"withCredentials"in en,y.ajax=en=!!en,E.ajaxTransport(function(a){var r,s;if(y.cors||en&&!a.crossDomain)return{send:function(e,t){var n,i=a.xhr();if(i.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(n in a.xhrFields)i[n]=a.xhrFields[n];for(n in a.mimeType&&i.overrideMimeType&&i.overrideMimeType(a.mimeType),a.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)i.setRequestHeader(n,e[n]);r=function(e){return function(){r&&(r=s=i.onload=i.onerror=i.onabort=i.ontimeout=i.onreadystatechange=null,"abort"===e?i.abort():"error"===e?"number"!=typeof i.status?t(0,"error"):t(i.status,i.statusText):t(Jt[i.status]||i.status,i.statusText,"text"!==(i.responseType||"text")||"string"!=typeof i.responseText?{binary:i.response}:{text:i.responseText},i.getAllResponseHeaders()))}},i.onload=r(),s=i.onerror=i.ontimeout=r("error"),void 0!==i.onabort?i.onabort=s:i.onreadystatechange=function(){4===i.readyState&&S.setTimeout(function(){r&&s()})},r=r("abort");try{i.send(a.hasContent&&a.data||null)}catch(e){if(r)throw e}},abort:function(){r&&r()}}}),E.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),E.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return E.globalEval(e),e}}}),E.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),E.ajaxTransport("script",function(n){var i,a;if(n.crossDomain||n.scriptAttrs)return{send:function(e,t){i=E("<script>").attr(n.scriptAttrs||{}).prop({charset:n.scriptCharset,src:n.url}).on("load error",a=function(e){i.remove(),a=null,e&&t("error"===e.type?404:200,e.type)}),C.head.appendChild(i[0])},abort:function(){a&&a()}}});var tn,nn=[],an=/(=)\?(?=&|$)|\?\?/;E.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=nn.pop()||E.expando+"_"+zt.guid++;return this[e]=!0,e}}),E.ajaxPrefilter("json jsonp",function(e,t,n){var i,a,r,s=!1!==e.jsonp&&(an.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&an.test(e.data)&&"data");if(s||"jsonp"===e.dataTypes[0])return i=e.jsonpCallback=b(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,s?e[s]=e[s].replace(an,"$1"+i):!1!==e.jsonp&&(e.url+=(It.test(e.url)?"&":"?")+e.jsonp+"="+i),e.converters["script json"]=function(){return r||E.error(i+" was not called"),r[0]},e.dataTypes[0]="json",a=S[i],S[i]=function(){r=arguments},n.always(function(){void 0===a?E(S).removeProp(i):S[i]=a,e[i]&&(e.jsonpCallback=t.jsonpCallback,nn.push(i)),r&&b(a)&&a(r[0]),r=a=void 0}),"script"}),y.createHTMLDocument=((tn=C.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===tn.childNodes.length),E.parseHTML=function(e,t,n){return"string"!=typeof e?[]:("boolean"==typeof t&&(n=t,t=!1),t||(y.createHTMLDocument?((i=(t=C.implementation.createHTMLDocument("")).createElement("base")).href=C.location.href,t.head.appendChild(i)):t=C),r=!n&&[],(a=M.exec(e))?[t.createElement(a[1])]:(a=be([e],t,r),r&&r.length&&E(r).remove(),E.merge([],a.childNodes)));var i,a,r},E.fn.load=function(e,t,n){var i,a,r,s=this,o=e.indexOf(" ");return-1<o&&(i=Pt(e.slice(o)),e=e.slice(0,o)),b(t)?(n=t,t=void 0):t&&"object"==typeof t&&(a="POST"),0<s.length&&E.ajax({url:e,type:a||"GET",dataType:"html",data:t}).done(function(e){r=arguments,s.html(i?E("<div>").append(E.parseHTML(e)).find(i):e)}).always(n&&function(e,t){s.each(function(){n.apply(this,r||[e.responseText,t,e])})}),this},E.expr.pseudos.animated=function(t){return E.grep(E.timers,function(e){return t===e.elem}).length},E.offset={setOffset:function(e,t,n){var i,a,r,s,o,l,c=E.css(e,"position"),d=E(e),u={};"static"===c&&(e.style.position="relative"),o=d.offset(),r=E.css(e,"top"),l=E.css(e,"left"),a=("absolute"===c||"fixed"===c)&&-1<(r+l).indexOf("auto")?(s=(i=d.position()).top,i.left):(s=parseFloat(r)||0,parseFloat(l)||0),b(t)&&(t=t.call(e,n,E.extend({},o))),null!=t.top&&(u.top=t.top-o.top+s),null!=t.left&&(u.left=t.left-o.left+a),"using"in t?t.using.call(e,u):("number"==typeof u.top&&(u.top+="px"),"number"==typeof u.left&&(u.left+="px"),d.css(u))}},E.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){E.offset.setOffset(this,t,e)});var e,n,i=this[0];return i?i.getClientRects().length?(e=i.getBoundingClientRect(),n=i.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,i=this[0],a={top:0,left:0};if("fixed"===E.css(i,"position"))t=i.getBoundingClientRect();else{for(t=this.offset(),n=i.ownerDocument,e=i.offsetParent||n.documentElement;e&&(e===n.body||e===n.documentElement)&&"static"===E.css(e,"position");)e=e.parentNode;e&&e!==i&&1===e.nodeType&&((a=E(e).offset()).top+=E.css(e,"borderTopWidth",!0),a.left+=E.css(e,"borderLeftWidth",!0))}return{top:t.top-a.top-E.css(i,"marginTop",!0),left:t.left-a.left-E.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===E.css(e,"position");)e=e.offsetParent;return e||ie})}}),E.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,a){var r="pageYOffset"===a;E.fn[t]=function(e){return R(this,function(e,t,n){var i;if(m(e)?i=e:9===e.nodeType&&(i=e.defaultView),void 0===n)return i?i[a]:e[t];i?i.scrollTo(r?i.pageXOffset:n,r?n:i.pageYOffset):e[t]=n},t,e,arguments.length)}}),E.each(["top","left"],function(e,n){E.cssHooks[n]=Qe(y.pixelPosition,function(e,t){if(t)return t=Ze(e,n),Ge.test(t)?E(e).position()[n]+"px":t})}),E.each({Height:"height",Width:"width"},function(s,o){E.each({padding:"inner"+s,content:o,"":"outer"+s},function(i,r){E.fn[r]=function(e,t){var n=arguments.length&&(i||"boolean"!=typeof e),a=i||(!0===e||!0===t?"margin":"border");return R(this,function(e,t,n){var i;return m(e)?0===r.indexOf("outer")?e["inner"+s]:e.document.documentElement["client"+s]:9===e.nodeType?(i=e.documentElement,Math.max(e.body["scroll"+s],i["scroll"+s],e.body["offset"+s],i["offset"+s],i["client"+s])):void 0===n?E.css(e,t,a):E.style(e,t,n,a)},o,n?e:void 0,n)}})}),E.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){E.fn[t]=function(e){return this.on(t,e)}}),E.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,i){return this.on(t,e,n,i)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),E.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,n){E.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}});var rn=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;E.proxy=function(e,t){var n,i,a;if("string"==typeof t&&(n=e[t],t=e,e=n),b(e))return i=o.call(arguments,2),(a=function(){return e.apply(t||this,i.concat(o.call(arguments)))}).guid=e.guid=e.guid||E.guid++,a},E.holdReady=function(e){e?E.readyWait++:E.ready(!0)},E.isArray=Array.isArray,E.parseJSON=JSON.parse,E.nodeName=k,E.isFunction=b,E.isWindow=m,E.camelCase=G,E.type=w,E.now=Date.now,E.isNumeric=function(e){var t=E.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},E.trim=function(e){return null==e?"":(e+"").replace(rn,"")},"function"==typeof define&&define.amd&&define("jquery",[],function(){return E});var sn=S.jQuery,on=S.$;return E.noConflict=function(e){return S.$===E&&(S.$=on),e&&S.jQuery===E&&(S.jQuery=sn),E},void 0===e&&(S.jQuery=S.$=E),E}),function(e,t){"object"==("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.Swiper=t()}(this,function(){"use strict";var m="undefined"==typeof document?{body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},location:{hash:""}}:document,q="undefined"==typeof window?{document:m,navigator:{userAgent:""},location:{},history:{},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){}}:window,l=function(e){for(var t=0;t<e.length;t+=1)this[t]=e[t];return this.length=e.length,this};function D(e,t){var n=[],i=0;if(e&&!t&&e instanceof l)return e;if(e)if("string"==typeof e){var a,r,s=e.trim();if(0<=s.indexOf("<")&&0<=s.indexOf(">")){var o="div";for(0===s.indexOf("<li")&&(o="ul"),0===s.indexOf("<tr")&&(o="tbody"),0!==s.indexOf("<td")&&0!==s.indexOf("<th")||(o="tr"),0===s.indexOf("<tbody")&&(o="table"),0===s.indexOf("<option")&&(o="select"),(r=m.createElement(o)).innerHTML=s,i=0;i<r.childNodes.length;i+=1)n.push(r.childNodes[i])}else for(a=t||"#"!==e[0]||e.match(/[ .<>:~]/)?(t||m).querySelectorAll(e.trim()):[m.getElementById(e.trim().split("#")[1])],i=0;i<a.length;i+=1)a[i]&&n.push(a[i])}else if(e.nodeType||e===q||e===m)n.push(e);else if(0<e.length&&e[0].nodeType)for(i=0;i<e.length;i+=1)n.push(e[i]);return new l(n)}function r(e){for(var t=[],n=0;n<e.length;n+=1)-1===t.indexOf(e[n])&&t.push(e[n]);return t}D.fn=l.prototype,D.Class=l,D.Dom7=l;var t={addClass:function(e){if(void 0===e)return this;for(var t=e.split(" "),n=0;n<t.length;n+=1)for(var i=0;i<this.length;i+=1)void 0!==this[i]&&void 0!==this[i].classList&&this[i].classList.add(t[n]);return this},removeClass:function(e){for(var t=e.split(" "),n=0;n<t.length;n+=1)for(var i=0;i<this.length;i+=1)void 0!==this[i]&&void 0!==this[i].classList&&this[i].classList.remove(t[n]);return this},hasClass:function(e){return!!this[0]&&this[0].classList.contains(e)},toggleClass:function(e){for(var t=e.split(" "),n=0;n<t.length;n+=1)for(var i=0;i<this.length;i+=1)void 0!==this[i]&&void 0!==this[i].classList&&this[i].classList.toggle(t[n]);return this},attr:function(e,t){var n=arguments;if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var i=0;i<this.length;i+=1)if(2===n.length)this[i].setAttribute(e,t);else for(var a in e)this[i][a]=e[a],this[i].setAttribute(a,e[a]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},data:function(e,t){var n;if(void 0!==t){for(var i=0;i<this.length;i+=1)(n=this[i]).dom7ElementDataStorage||(n.dom7ElementDataStorage={}),n.dom7ElementDataStorage[e]=t;return this}if(n=this[0])return n.dom7ElementDataStorage&&e in n.dom7ElementDataStorage?n.dom7ElementDataStorage[e]:n.getAttribute("data-"+e)||void 0},transform:function(e){for(var t=0;t<this.length;t+=1){var n=this[t].style;n.webkitTransform=e,n.transform=e}return this},transition:function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t+=1){var n=this[t].style;n.webkitTransitionDuration=e,n.transitionDuration=e}return this},on:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var n=e[0],r=e[1],s=e[2],i=e[3];function a(e){var t=e.target;if(t){var n=e.target.dom7EventData||[];if(n.indexOf(e)<0&&n.unshift(e),D(t).is(r))s.apply(t,n);else for(var i=D(t).parents(),a=0;a<i.length;a+=1)D(i[a]).is(r)&&s.apply(i[a],n)}}function o(e){var t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),s.apply(this,t)}"function"==typeof e[1]&&(n=e[0],s=e[1],i=e[2],r=void 0),i=i||!1;for(var l,c=n.split(" "),d=0;d<this.length;d+=1){var u=this[d];if(r)for(l=0;l<c.length;l+=1){var p=c[l];u.dom7LiveListeners||(u.dom7LiveListeners={}),u.dom7LiveListeners[p]||(u.dom7LiveListeners[p]=[]),u.dom7LiveListeners[p].push({listener:s,proxyListener:a}),u.addEventListener(p,a,i)}else for(l=0;l<c.length;l+=1){var h=c[l];u.dom7Listeners||(u.dom7Listeners={}),u.dom7Listeners[h]||(u.dom7Listeners[h]=[]),u.dom7Listeners[h].push({listener:s,proxyListener:o}),u.addEventListener(h,o,i)}}return this},off:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var n=e[0],i=e[1],a=e[2],r=e[3];"function"==typeof e[1]&&(n=e[0],a=e[1],r=e[2],i=void 0),r=r||!1;for(var s=n.split(" "),o=0;o<s.length;o+=1)for(var l=s[o],c=0;c<this.length;c+=1){var d=this[c],u=void 0;if(!i&&d.dom7Listeners?u=d.dom7Listeners[l]:i&&d.dom7LiveListeners&&(u=d.dom7LiveListeners[l]),u&&u.length)for(var p=u.length-1;0<=p;--p){var h=u[p];(!a||h.listener!==a)&&a||(d.removeEventListener(l,h.proxyListener,r),u.splice(p,1))}}return this},trigger:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var n=e[0].split(" "),i=e[1],a=0;a<n.length;a+=1)for(var r=n[a],s=0;s<this.length;s+=1){var o=this[s],l=void 0;try{l=new q.CustomEvent(r,{detail:i,bubbles:!0,cancelable:!0})}catch(e){(l=m.createEvent("Event")).initEvent(r,!0,!0),l.detail=i}o.dom7EventData=e.filter(function(e,t){return 0<t}),o.dispatchEvent(l),o.dom7EventData=[],delete o.dom7EventData}return this},transitionEnd:function(t){var n,i=["webkitTransitionEnd","transitionend"],a=this;function r(e){if(e.target===this)for(t.call(this,e),n=0;n<i.length;n+=1)a.off(i[n],r)}if(t)for(n=0;n<i.length;n+=1)a.on(i[n],r);return this},outerWidth:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetWidth+parseFloat(t.getPropertyValue("margin-right"))+parseFloat(t.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetHeight+parseFloat(t.getPropertyValue("margin-top"))+parseFloat(t.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},offset:function(){if(0<this.length){var e=this[0],t=e.getBoundingClientRect(),n=m.body,i=e.clientTop||n.clientTop||0,a=e.clientLeft||n.clientLeft||0,r=e===q?q.scrollY:e.scrollTop,s=e===q?q.scrollX:e.scrollLeft;return{top:t.top+r-i,left:t.left+s-a}}return null},css:function(e,t){var n;if(1===arguments.length){if("string"!=typeof e){for(n=0;n<this.length;n+=1)for(var i in e)this[n].style[i]=e[i];return this}if(this[0])return q.getComputedStyle(this[0],null).getPropertyValue(e)}if(2!==arguments.length||"string"!=typeof e)return this;for(n=0;n<this.length;n+=1)this[n].style[e]=t;return this},each:function(e){if(!e)return this;for(var t=0;t<this.length;t+=1)if(!1===e.call(this[t],t,this[t]))return this;return this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:void 0;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(e){var t,n,i=this[0];if(!i||void 0===e)return!1;if("string"==typeof e){if(i.matches)return i.matches(e);if(i.webkitMatchesSelector)return i.webkitMatchesSelector(e);if(i.msMatchesSelector)return i.msMatchesSelector(e);for(t=D(e),n=0;n<t.length;n+=1)if(t[n]===i)return!0;return!1}if(e===m)return i===m;if(e===q)return i===q;if(e.nodeType||e instanceof l){for(t=e.nodeType?[e]:e,n=0;n<t.length;n+=1)if(t[n]===i)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;var t,n=this.length;return new l(n-1<e?[]:e<0?(t=n+e)<0?[]:[this[t]]:[this[e]])},append:function(){for(var e,t=[],n=arguments.length;n--;)t[n]=arguments[n];for(var i=0;i<t.length;i+=1){e=t[i];for(var a=0;a<this.length;a+=1)if("string"==typeof e){var r=m.createElement("div");for(r.innerHTML=e;r.firstChild;)this[a].appendChild(r.firstChild)}else if(e instanceof l)for(var s=0;s<e.length;s+=1)this[a].appendChild(e[s]);else this[a].appendChild(e)}return this},prepend:function(e){var t,n,i=this;for(t=0;t<this.length;t+=1)if("string"==typeof e){var a=m.createElement("div");for(a.innerHTML=e,n=a.childNodes.length-1;0<=n;--n)i[t].insertBefore(a.childNodes[n],i[t].childNodes[0])}else if(e instanceof l)for(n=0;n<e.length;n+=1)i[t].insertBefore(e[n],i[t].childNodes[0]);else i[t].insertBefore(e,i[t].childNodes[0]);return this},next:function(e){return 0<this.length?e?this[0].nextElementSibling&&D(this[0].nextElementSibling).is(e)?new l([this[0].nextElementSibling]):new l([]):this[0].nextElementSibling?new l([this[0].nextElementSibling]):new l([]):new l([])},nextAll:function(e){var t=[],n=this[0];if(!n)return new l([]);for(;n.nextElementSibling;){var i=n.nextElementSibling;e&&!D(i).is(e)||t.push(i),n=i}return new l(t)},prev:function(e){if(0<this.length){var t=this[0];return e?t.previousElementSibling&&D(t.previousElementSibling).is(e)?new l([t.previousElementSibling]):new l([]):t.previousElementSibling?new l([t.previousElementSibling]):new l([])}return new l([])},prevAll:function(e){var t=[],n=this[0];if(!n)return new l([]);for(;n.previousElementSibling;){var i=n.previousElementSibling;e&&!D(i).is(e)||t.push(i),n=i}return new l(t)},parent:function(e){for(var t=[],n=0;n<this.length;n+=1)null===this[n].parentNode||e&&!D(this[n].parentNode).is(e)||t.push(this[n].parentNode);return D(r(t))},parents:function(e){for(var t=[],n=0;n<this.length;n+=1)for(var i=this[n].parentNode;i;)e&&!D(i).is(e)||t.push(i),i=i.parentNode;return D(r(t))},closest:function(e){var t=this;return void 0===e?new l([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],n=0;n<this.length;n+=1)for(var i=this[n].querySelectorAll(e),a=0;a<i.length;a+=1)t.push(i[a]);return new l(t)},children:function(e){for(var t=[],n=0;n<this.length;n+=1)for(var i=this[n].childNodes,a=0;a<i.length;a+=1)e?1===i[a].nodeType&&D(i[a]).is(e)&&t.push(i[a]):1===i[a].nodeType&&t.push(i[a]);return new l(r(t))},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this},add:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var n,i;for(n=0;n<e.length;n+=1){var a=D(e[n]);for(i=0;i<a.length;i+=1)this[this.length]=a[i],this.length+=1}return this},styles:function(){return this[0]?q.getComputedStyle(this[0],null):{}}};Object.keys(t).forEach(function(e){D.fn[e]=t[e]});function e(e){void 0===e&&(e={});var t=this;t.params=e,t.eventsListeners={},t.params&&t.params.on&&Object.keys(t.params.on).forEach(function(e){t.on(e,t.params.on[e])})}var n,i,a,F={deleteProps:function(e){var t=e;Object.keys(t).forEach(function(e){try{t[e]=null}catch(e){}try{delete t[e]}catch(e){}})},nextTick:function(e,t){return void 0===t&&(t=0),setTimeout(e,t)},now:function(){return Date.now()},getTranslate:function(e,t){var n,i,a;void 0===t&&(t="x");var r=q.getComputedStyle(e,null);return q.WebKitCSSMatrix?(6<(i=r.transform||r.webkitTransform).split(",").length&&(i=i.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),a=new q.WebKitCSSMatrix("none"===i?"":i)):n=(a=r.MozTransform||r.OTransform||r.MsTransform||r.msTransform||r.transform||r.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===t&&(i=q.WebKitCSSMatrix?a.m41:16===n.length?parseFloat(n[12]):parseFloat(n[4])),"y"===t&&(i=q.WebKitCSSMatrix?a.m42:16===n.length?parseFloat(n[13]):parseFloat(n[5])),i||0},parseUrlQuery:function(e){var t,n,i,a,r={},s=e||q.location.href;if("string"==typeof s&&s.length)for(a=(n=(s=-1<s.indexOf("?")?s.replace(/\S*\?/,""):"").split("&").filter(function(e){return""!==e})).length,t=0;t<a;t+=1)i=n[t].replace(/#\S+/g,"").split("="),r[decodeURIComponent(i[0])]=void 0===i[1]?void 0:decodeURIComponent(i[1])||"";return r},isObject:function(e){return"object"==_typeof(e)&&null!==e&&e.constructor&&e.constructor===Object},extend:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var n=Object(e[0]),i=1;i<e.length;i+=1){var a=e[i];if(null!=a)for(var r=Object.keys(Object(a)),s=0,o=r.length;s<o;s+=1){var l=r[s],c=Object.getOwnPropertyDescriptor(a,l);void 0!==c&&c.enumerable&&(F.isObject(n[l])&&F.isObject(a[l])?F.extend(n[l],a[l]):!F.isObject(n[l])&&F.isObject(a[l])?(n[l]={},F.extend(n[l],a[l])):n[l]=a[l])}}return n}},B=(a=m.createElement("div"),{touch:q.Modernizr&&!0===q.Modernizr.touch||!!("ontouchstart"in q||q.DocumentTouch&&m instanceof q.DocumentTouch),pointerEvents:!(!q.navigator.pointerEnabled&&!q.PointerEvent),prefixedPointerEvents:!!q.navigator.msPointerEnabled,transition:"transition"in(i=a.style)||"webkitTransition"in i||"MozTransition"in i,transforms3d:q.Modernizr&&!0===q.Modernizr.csstransforms3d||("webkitPerspective"in(n=a.style)||"MozPerspective"in n||"OPerspective"in n||"MsPerspective"in n||"perspective"in n),flexbox:function(){for(var e=a.style,t="alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" "),n=0;n<t.length;n+=1)if(t[n]in e)return!0;return!1}(),observer:"MutationObserver"in q||"WebkitMutationObserver"in q,passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});q.addEventListener("testPassiveListener",null,t)}catch(e){}return e}(),gestures:"ongesturestart"in q}),s={components:{configurable:!0}};e.prototype.on=function(e,t,n){var i=this;if("function"!=typeof t)return i;var a=n?"unshift":"push";return e.split(" ").forEach(function(e){i.eventsListeners[e]||(i.eventsListeners[e]=[]),i.eventsListeners[e][a](t)}),i},e.prototype.once=function(i,a,e){var r=this;return"function"!=typeof a?r:r.on(i,function e(){for(var t=[],n=arguments.length;n--;)t[n]=arguments[n];a.apply(r,t),r.off(i,e)},e)},e.prototype.off=function(e,i){var a=this;return a.eventsListeners&&e.split(" ").forEach(function(n){void 0===i?a.eventsListeners[n]=[]:a.eventsListeners[n].forEach(function(e,t){e===i&&a.eventsListeners[n].splice(t,1)})}),a},e.prototype.emit=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var n,i,a,r=this;return r.eventsListeners&&(a="string"==typeof e[0]||Array.isArray(e[0])?(n=e[0],i=e.slice(1,e.length),r):(n=e[0].events,i=e[0].data,e[0].context||r),(Array.isArray(n)?n:n.split(" ")).forEach(function(e){if(r.eventsListeners&&r.eventsListeners[e]){var t=[];r.eventsListeners[e].forEach(function(e){t.push(e)}),t.forEach(function(e){e.apply(a,i)})}})),r},e.prototype.useModulesParams=function(n){var i=this;i.modules&&Object.keys(i.modules).forEach(function(e){var t=i.modules[e];t.params&&F.extend(n,t.params)})},e.prototype.useModules=function(i){void 0===i&&(i={});var a=this;a.modules&&Object.keys(a.modules).forEach(function(e){var n=a.modules[e],t=i[e]||{};n.instance&&Object.keys(n.instance).forEach(function(e){var t=n.instance[e];a[e]="function"==typeof t?t.bind(a):t}),n.on&&a.on&&Object.keys(n.on).forEach(function(e){a.on(e,n.on[e])}),n.create&&n.create.bind(a)(t)})},s.components.set=function(e){this.use&&this.use(e)},e.installModule=function(t){for(var e=[],n=arguments.length-1;0<n--;)e[n]=arguments[n+1];var i=this;i.prototype.modules||(i.prototype.modules={});var a=t.name||Object.keys(i.prototype.modules).length+"_"+F.now();return(i.prototype.modules[a]=t).proto&&Object.keys(t.proto).forEach(function(e){i.prototype[e]=t.proto[e]}),t.static&&Object.keys(t.static).forEach(function(e){i[e]=t.static[e]}),t.install&&t.install.apply(i,e),i},e.use=function(e){for(var t=[],n=arguments.length-1;0<n--;)t[n]=arguments[n+1];var i=this;return Array.isArray(e)?(e.forEach(function(e){return i.installModule(e)}),i):i.installModule.apply(i,[e].concat(t))},Object.defineProperties(e,s);var o={updateSize:function(){var e,t,n=this,i=n.$el;e=void 0!==n.params.width?n.params.width:i[0].clientWidth,t=void 0!==n.params.height?n.params.height:i[0].clientHeight,0===e&&n.isHorizontal()||0===t&&n.isVertical()||(e=e-parseInt(i.css("padding-left"),10)-parseInt(i.css("padding-right"),10),t=t-parseInt(i.css("padding-top"),10)-parseInt(i.css("padding-bottom"),10),F.extend(n,{width:e,height:t,size:n.isHorizontal()?e:t}))},updateSlides:function(){var e=this,t=e.params,n=e.$wrapperEl,i=e.size,a=e.rtlTranslate,r=e.wrongRTL,s=e.virtual&&t.virtual.enabled,o=s?e.virtual.slides.length:e.slides.length,l=n.children("."+e.params.slideClass),c=s?e.virtual.slides.length:l.length,d=[],u=[],p=[],h=t.slidesOffsetBefore;"function"==typeof h&&(h=t.slidesOffsetBefore.call(e));var f=t.slidesOffsetAfter;"function"==typeof f&&(f=t.slidesOffsetAfter.call(e));var m=e.snapGrid.length,g=e.snapGrid.length,v=t.spaceBetween,y=-h,b=0,x=0;if(void 0!==i){var w,T;"string"==typeof v&&0<=v.indexOf("%")&&(v=parseFloat(v.replace("%",""))/100*i),e.virtualSize=-v,a?l.css({marginLeft:"",marginTop:""}):l.css({marginRight:"",marginBottom:""}),1<t.slidesPerColumn&&(w=Math.floor(c/t.slidesPerColumn)===c/e.params.slidesPerColumn?c:Math.ceil(c/t.slidesPerColumn)*t.slidesPerColumn,"auto"!==t.slidesPerView&&"row"===t.slidesPerColumnFill&&(w=Math.max(w,t.slidesPerView*t.slidesPerColumn)));for(var S,C=t.slidesPerColumn,E=w/C,P=E-(t.slidesPerColumn*E-c),k=0;k<c;k+=1){T=0;var M=l.eq(k);if(1<t.slidesPerColumn){var $=void 0,L=void 0,D=void 0;"column"===t.slidesPerColumnFill?(D=k-(L=Math.floor(k/C))*C,(P<L||L===P&&D===C-1)&&C<=(D+=1)&&(D=0,L+=1),$=L+D*w/C,M.css({"-webkit-box-ordinal-group":$,"-moz-box-ordinal-group":$,"-ms-flex-order":$,"-webkit-order":$,order:$})):L=k-(D=Math.floor(k/E))*E,M.css("margin-"+(e.isHorizontal()?"top":"left"),0!==D&&t.spaceBetween&&t.spaceBetween+"px").attr("data-swiper-column",L).attr("data-swiper-row",D)}if("none"!==M.css("display")){if("auto"===t.slidesPerView){var A=q.getComputedStyle(M[0],null),z=M[0].style.transform,I=M[0].style.webkitTransform;z&&(M[0].style.transform="none"),I&&(M[0].style.webkitTransform="none"),T=e.isHorizontal()?M[0].getBoundingClientRect().width+parseFloat(A.getPropertyValue("margin-left"))+parseFloat(A.getPropertyValue("margin-right")):M[0].getBoundingClientRect().height+parseFloat(A.getPropertyValue("margin-top"))+parseFloat(A.getPropertyValue("margin-bottom")),z&&(M[0].style.transform=z),I&&(M[0].style.webkitTransform=I),t.roundLengths&&(T=Math.floor(T))}else T=(i-(t.slidesPerView-1)*v)/t.slidesPerView,t.roundLengths&&(T=Math.floor(T)),l[k]&&(e.isHorizontal()?l[k].style.width=T+"px":l[k].style.height=T+"px");l[k]&&(l[k].swiperSlideSize=T),p.push(T),t.centeredSlides?(y=y+T/2+b/2+v,0===b&&0!==k&&(y=y-i/2-v),0===k&&(y=y-i/2-v),Math.abs(y)<.001&&(y=0),t.roundLengths&&(y=Math.floor(y)),x%t.slidesPerGroup==0&&d.push(y),u.push(y)):(t.roundLengths&&(y=Math.floor(y)),x%t.slidesPerGroup==0&&d.push(y),u.push(y),y=y+T+v),e.virtualSize+=T+v,b=T,x+=1}}if(e.virtualSize=Math.max(e.virtualSize,i)+f,a&&r&&("slide"===t.effect||"coverflow"===t.effect)&&n.css({width:e.virtualSize+t.spaceBetween+"px"}),B.flexbox&&!t.setWrapperSize||(e.isHorizontal()?n.css({width:e.virtualSize+t.spaceBetween+"px"}):n.css({height:e.virtualSize+t.spaceBetween+"px"})),1<t.slidesPerColumn&&(e.virtualSize=(T+t.spaceBetween)*w,e.virtualSize=Math.ceil(e.virtualSize/t.slidesPerColumn)-t.spaceBetween,e.isHorizontal()?n.css({width:e.virtualSize+t.spaceBetween+"px"}):n.css({height:e.virtualSize+t.spaceBetween+"px"}),t.centeredSlides)){S=[];for(var O=0;O<d.length;O+=1){var N=d[O];t.roundLengths&&(N=Math.floor(N)),d[O]<e.virtualSize+d[0]&&S.push(N)}d=S}if(!t.centeredSlides){S=[];for(var H=0;H<d.length;H+=1){var j=d[H];t.roundLengths&&(j=Math.floor(j)),d[H]<=e.virtualSize-i&&S.push(j)}d=S,1<Math.floor(e.virtualSize-i)-Math.floor(d[d.length-1])&&d.push(e.virtualSize-i)}0===d.length&&(d=[0]),0!==t.spaceBetween&&(e.isHorizontal()?a?l.css({marginLeft:v+"px"}):l.css({marginRight:v+"px"}):l.css({marginBottom:v+"px"})),F.extend(e,{slides:l,snapGrid:d,slidesGrid:u,slidesSizesGrid:p}),c!==o&&e.emit("slidesLengthChange"),d.length!==m&&(e.params.watchOverflow&&e.checkOverflow(),e.emit("snapGridLengthChange")),u.length!==g&&e.emit("slidesGridLengthChange"),(t.watchSlidesProgress||t.watchSlidesVisibility)&&e.updateSlidesOffset()}},updateAutoHeight:function(e){var t,n=this,i=[],a=0;if("number"==typeof e?n.setTransition(e):!0===e&&n.setTransition(n.params.speed),"auto"!==n.params.slidesPerView&&1<n.params.slidesPerView)for(t=0;t<Math.ceil(n.params.slidesPerView);t+=1){var r=n.activeIndex+t;if(r>n.slides.length)break;i.push(n.slides.eq(r)[0])}else i.push(n.slides.eq(n.activeIndex)[0]);for(t=0;t<i.length;t+=1)if(void 0!==i[t]){var s=i[t].offsetHeight;a=a<s?s:a}a&&n.$wrapperEl.css("height",a+"px")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this,n=t.params,i=t.slides,a=t.rtlTranslate;if(0!==i.length){void 0===i[0].swiperSlideOffset&&t.updateSlidesOffset();var r=-e;a&&(r=e),i.removeClass(n.slideVisibleClass);for(var s=0;s<i.length;s+=1){var o=i[s],l=(r+(n.centeredSlides?t.minTranslate():0)-o.swiperSlideOffset)/(o.swiperSlideSize+n.spaceBetween);if(n.watchSlidesVisibility){var c=-(r-o.swiperSlideOffset),d=c+t.slidesSizesGrid[s];(0<=c&&c<t.size||0<d&&d<=t.size||c<=0&&d>=t.size)&&i.eq(s).addClass(n.slideVisibleClass)}o.progress=a?-l:l}}},updateProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this,n=t.params,i=t.maxTranslate()-t.minTranslate(),a=t.progress,r=t.isBeginning,s=t.isEnd,o=r,l=s;s=0==i?r=!(a=0):(r=(a=(e-t.minTranslate())/i)<=0,1<=a),F.extend(t,{progress:a,isBeginning:r,isEnd:s}),(n.watchSlidesProgress||n.watchSlidesVisibility)&&t.updateSlidesProgress(e),r&&!o&&t.emit("reachBeginning toEdge"),s&&!l&&t.emit("reachEnd toEdge"),(o&&!r||l&&!s)&&t.emit("fromEdge"),t.emit("progress",a)},updateSlidesClasses:function(){var e,t=this,n=t.slides,i=t.params,a=t.$wrapperEl,r=t.activeIndex,s=t.realIndex,o=t.virtual&&i.virtual.enabled;n.removeClass(i.slideActiveClass+" "+i.slideNextClass+" "+i.slidePrevClass+" "+i.slideDuplicateActiveClass+" "+i.slideDuplicateNextClass+" "+i.slideDuplicatePrevClass),(e=o?t.$wrapperEl.find("."+i.slideClass+'[data-swiper-slide-index="'+r+'"]'):n.eq(r)).addClass(i.slideActiveClass),i.loop&&(e.hasClass(i.slideDuplicateClass)?a.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+s+'"]').addClass(i.slideDuplicateActiveClass):a.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+s+'"]').addClass(i.slideDuplicateActiveClass));var l=e.nextAll("."+i.slideClass).eq(0).addClass(i.slideNextClass);i.loop&&0===l.length&&(l=n.eq(0)).addClass(i.slideNextClass);var c=e.prevAll("."+i.slideClass).eq(0).addClass(i.slidePrevClass);i.loop&&0===c.length&&(c=n.eq(-1)).addClass(i.slidePrevClass),i.loop&&(l.hasClass(i.slideDuplicateClass)?a.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass):a.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicateNextClass),c.hasClass(i.slideDuplicateClass)?a.children("."+i.slideClass+":not(."+i.slideDuplicateClass+')[data-swiper-slide-index="'+c.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass):a.children("."+i.slideClass+"."+i.slideDuplicateClass+'[data-swiper-slide-index="'+c.attr("data-swiper-slide-index")+'"]').addClass(i.slideDuplicatePrevClass))},updateActiveIndex:function(e){var t,n=this,i=n.rtlTranslate?n.translate:-n.translate,a=n.slidesGrid,r=n.snapGrid,s=n.params,o=n.activeIndex,l=n.realIndex,c=n.snapIndex,d=e;if(void 0===d){for(var u=0;u<a.length;u+=1)void 0!==a[u+1]?i>=a[u]&&i<a[u+1]-(a[u+1]-a[u])/2?d=u:i>=a[u]&&i<a[u+1]&&(d=u+1):i>=a[u]&&(d=u);s.normalizeSlideIndex&&(d<0||void 0===d)&&(d=0)}if((t=0<=r.indexOf(i)?r.indexOf(i):Math.floor(d/s.slidesPerGroup))>=r.length&&(t=r.length-1),d!==o){var p=parseInt(n.slides.eq(d).attr("data-swiper-slide-index")||d,10);F.extend(n,{snapIndex:t,realIndex:p,previousIndex:o,activeIndex:d}),n.emit("activeIndexChange"),n.emit("snapIndexChange"),l!==p&&n.emit("realIndexChange"),n.emit("slideChange")}else t!==c&&(n.snapIndex=t,n.emit("snapIndexChange"))},updateClickedSlide:function(e){var t=this,n=t.params,i=D(e.target).closest("."+n.slideClass)[0],a=!1;if(i)for(var r=0;r<t.slides.length;r+=1)t.slides[r]===i&&(a=!0);if(!i||!a)return t.clickedSlide=void 0,void(t.clickedIndex=void 0);t.clickedSlide=i,t.virtual&&t.params.virtual.enabled?t.clickedIndex=parseInt(D(i).attr("data-swiper-slide-index"),10):t.clickedIndex=D(i).index(),n.slideToClickedSlide&&void 0!==t.clickedIndex&&t.clickedIndex!==t.activeIndex&&t.slideToClickedSlide()}},c={getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");var t=this.params,n=this.rtlTranslate,i=this.translate,a=this.$wrapperEl;if(t.virtualTranslate)return n?-i:i;var r=F.getTranslate(a[0],e);return n&&(r=-r),r||0},setTranslate:function(e,t){var n=this,i=n.rtlTranslate,a=n.params,r=n.$wrapperEl,s=n.progress,o=0,l=0;n.isHorizontal()?o=i?-e:e:l=e,a.roundLengths&&(o=Math.floor(o),l=Math.floor(l)),a.virtualTranslate||(B.transforms3d?r.transform("translate3d("+o+"px, "+l+"px, 0px)"):r.transform("translate("+o+"px, "+l+"px)")),n.previousTranslate=n.translate,n.translate=n.isHorizontal()?o:l;var c=n.maxTranslate()-n.minTranslate();(0==c?0:(e-n.minTranslate())/c)!==s&&n.updateProgress(e),n.emit("setTranslate",n.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]}},d={slideTo:function(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===n&&(n=!0);var a=this,r=e;r<0&&(r=0);var s=a.params,o=a.snapGrid,l=a.slidesGrid,c=a.previousIndex,d=a.activeIndex,u=a.rtlTranslate;if(a.animating&&s.preventInteractionOnTransition)return!1;var p=Math.floor(r/s.slidesPerGroup);p>=o.length&&(p=o.length-1),(d||s.initialSlide||0)===(c||0)&&n&&a.emit("beforeSlideChangeStart");var h,f=-o[p];if(a.updateProgress(f),s.normalizeSlideIndex)for(var m=0;m<l.length;m+=1)-Math.floor(100*f)>=Math.floor(100*l[m])&&(r=m);if(a.initialized&&r!==d){if(!a.allowSlideNext&&f<a.translate&&f<a.minTranslate())return!1;if(!a.allowSlidePrev&&f>a.translate&&f>a.maxTranslate()&&(d||0)!==r)return!1}return h=d<r?"next":r<d?"prev":"reset",u&&-f===a.translate||!u&&f===a.translate?(a.updateActiveIndex(r),s.autoHeight&&a.updateAutoHeight(),a.updateSlidesClasses(),"slide"!==s.effect&&a.setTranslate(f),"reset"!=h&&(a.transitionStart(n,h),a.transitionEnd(n,h)),!1):(0!==t&&B.transition?(a.setTransition(t),a.setTranslate(f),a.updateActiveIndex(r),a.updateSlidesClasses(),a.emit("beforeTransitionStart",t,i),a.transitionStart(n,h),a.animating||(a.animating=!0,a.onSlideToWrapperTransitionEnd||(a.onSlideToWrapperTransitionEnd=function(e){a&&!a.destroyed&&e.target===this&&(a.$wrapperEl[0].removeEventListener("transitionend",a.onSlideToWrapperTransitionEnd),a.$wrapperEl[0].removeEventListener("webkitTransitionEnd",a.onSlideToWrapperTransitionEnd),a.onSlideToWrapperTransitionEnd=null,delete a.onSlideToWrapperTransitionEnd,a.transitionEnd(n,h))}),a.$wrapperEl[0].addEventListener("transitionend",a.onSlideToWrapperTransitionEnd),a.$wrapperEl[0].addEventListener("webkitTransitionEnd",a.onSlideToWrapperTransitionEnd))):(a.setTransition(0),a.setTranslate(f),a.updateActiveIndex(r),a.updateSlidesClasses(),a.emit("beforeTransitionStart",t,i),a.transitionStart(n,h),a.transitionEnd(n,h)),!0)},slideToLoop:function(e,t,n,i){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===n&&(n=!0);var a=e;return this.params.loop&&(a+=this.loopedSlides),this.slideTo(a,t,n,i)},slideNext:function(e,t,n){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var i=this,a=i.params,r=i.animating;return a.loop?!r&&(i.loopFix(),i._clientLeft=i.$wrapperEl[0].clientLeft,i.slideTo(i.activeIndex+a.slidesPerGroup,e,t,n)):i.slideTo(i.activeIndex+a.slidesPerGroup,e,t,n)},slidePrev:function(e,t,n){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var i=this,a=i.params,r=i.animating,s=i.snapGrid,o=i.slidesGrid,l=i.rtlTranslate;if(a.loop){if(r)return!1;i.loopFix(),i._clientLeft=i.$wrapperEl[0].clientLeft}function c(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}var d,u=c(l?i.translate:-i.translate),p=s.map(function(e){return c(e)}),h=(o.map(function(e){return c(e)}),s[p.indexOf(u)],s[p.indexOf(u)-1]);return void 0!==h&&(d=o.indexOf(h))<0&&(d=i.activeIndex-1),i.slideTo(d,e,t,n)},slideReset:function(e,t,n){return void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),this.slideTo(this.activeIndex,e,t,n)},slideToClosest:function(e,t,n){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var i=this,a=i.activeIndex,r=Math.floor(a/i.params.slidesPerGroup);if(r<i.snapGrid.length-1){var s=i.rtlTranslate?i.translate:-i.translate,o=i.snapGrid[r];(i.snapGrid[r+1]-o)/2<s-o&&(a=i.params.slidesPerGroup)}return i.slideTo(a,e,t,n)},slideToClickedSlide:function(){var e,t=this,n=t.params,i=t.$wrapperEl,a="auto"===n.slidesPerView?t.slidesPerViewDynamic():n.slidesPerView,r=t.clickedIndex;if(n.loop){if(t.animating)return;e=parseInt(D(t.clickedSlide).attr("data-swiper-slide-index"),10),n.centeredSlides?r<t.loopedSlides-a/2||r>t.slides.length-t.loopedSlides+a/2?(t.loopFix(),r=i.children("."+n.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+n.slideDuplicateClass+")").eq(0).index(),F.nextTick(function(){t.slideTo(r)})):t.slideTo(r):r>t.slides.length-a?(t.loopFix(),r=i.children("."+n.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+n.slideDuplicateClass+")").eq(0).index(),F.nextTick(function(){t.slideTo(r)})):t.slideTo(r)}else t.slideTo(r)}},u={loopCreate:function(){var i=this,e=i.params,t=i.$wrapperEl;t.children("."+e.slideClass+"."+e.slideDuplicateClass).remove();var a=t.children("."+e.slideClass);if(e.loopFillGroupWithBlank){var n=e.slidesPerGroup-a.length%e.slidesPerGroup;if(n!==e.slidesPerGroup){for(var r=0;r<n;r+=1){var s=D(m.createElement("div")).addClass(e.slideClass+" "+e.slideBlankClass);t.append(s)}a=t.children("."+e.slideClass)}}"auto"!==e.slidesPerView||e.loopedSlides||(e.loopedSlides=a.length),i.loopedSlides=parseInt(e.loopedSlides||e.slidesPerView,10),i.loopedSlides+=e.loopAdditionalSlides,i.loopedSlides>a.length&&(i.loopedSlides=a.length);var o=[],l=[];a.each(function(e,t){var n=D(t);e<i.loopedSlides&&l.push(t),e<a.length&&e>=a.length-i.loopedSlides&&o.push(t),n.attr("data-swiper-slide-index",e)});for(var c=0;c<l.length;c+=1)t.append(D(l[c].cloneNode(!0)).addClass(e.slideDuplicateClass));for(var d=o.length-1;0<=d;--d)t.prepend(D(o[d].cloneNode(!0)).addClass(e.slideDuplicateClass))},loopFix:function(){var e,t=this,n=t.params,i=t.activeIndex,a=t.slides,r=t.loopedSlides,s=t.allowSlidePrev,o=t.allowSlideNext,l=t.snapGrid,c=t.rtlTranslate;t.allowSlidePrev=!0,t.allowSlideNext=!0;var d=-l[i]-t.getTranslate();i<r?(e=a.length-3*r+i,e+=r,t.slideTo(e,0,!1,!0)&&0!=d&&t.setTranslate((c?-t.translate:t.translate)-d)):("auto"===n.slidesPerView&&2*r<=i||i>=a.length-r)&&(e=-a.length+i+r,e+=r,t.slideTo(e,0,!1,!0)&&0!=d&&t.setTranslate((c?-t.translate:t.translate)-d)),t.allowSlidePrev=s,t.allowSlideNext=o},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,n=this.slides;e.children("."+t.slideClass+"."+t.slideDuplicateClass).remove(),n.removeAttr("data-swiper-slide-index")}},p={setGrabCursor:function(e){if(!(B.touch||!this.params.simulateTouch||this.params.watchOverflow&&this.isLocked)){var t=this.el;t.style.cursor="move",t.style.cursor=e?"-webkit-grabbing":"-webkit-grab",t.style.cursor=e?"-moz-grabbin":"-moz-grab",t.style.cursor=e?"grabbing":"grab"}},unsetGrabCursor:function(){B.touch||this.params.watchOverflow&&this.isLocked||(this.el.style.cursor="")}},h={appendSlide:function(e){var t=this,n=t.$wrapperEl,i=t.params;if(i.loop&&t.loopDestroy(),"object"==_typeof(e)&&"length"in e)for(var a=0;a<e.length;a+=1)e[a]&&n.append(e[a]);else n.append(e);i.loop&&t.loopCreate(),i.observer&&B.observer||t.update()},prependSlide:function(e){var t=this,n=t.params,i=t.$wrapperEl,a=t.activeIndex;n.loop&&t.loopDestroy();var r=a+1;if("object"==_typeof(e)&&"length"in e){for(var s=0;s<e.length;s+=1)e[s]&&i.prepend(e[s]);r=a+e.length}else i.prepend(e);n.loop&&t.loopCreate(),n.observer&&B.observer||t.update(),t.slideTo(r,0,!1)},addSlide:function(e,t){var n=this,i=n.$wrapperEl,a=n.params,r=n.activeIndex;a.loop&&(r-=n.loopedSlides,n.loopDestroy(),n.slides=i.children("."+a.slideClass));var s=n.slides.length;if(e<=0)n.prependSlide(t);else if(s<=e)n.appendSlide(t);else{for(var o=e<r?r+1:r,l=[],c=s-1;e<=c;--c){var d=n.slides.eq(c);d.remove(),l.unshift(d)}if("object"==_typeof(t)&&"length"in t){for(var u=0;u<t.length;u+=1)t[u]&&i.append(t[u]);o=e<r?r+t.length:r}else i.append(t);for(var p=0;p<l.length;p+=1)i.append(l[p]);a.loop&&n.loopCreate(),a.observer&&B.observer||n.update(),a.loop?n.slideTo(o+n.loopedSlides,0,!1):n.slideTo(o,0,!1)}},removeSlide:function(e){var t=this,n=t.params,i=t.$wrapperEl,a=t.activeIndex;n.loop&&(a-=t.loopedSlides,t.loopDestroy(),t.slides=i.children("."+n.slideClass));var r,s=a;if("object"==_typeof(e)&&"length"in e){for(var o=0;o<e.length;o+=1)r=e[o],t.slides[r]&&t.slides.eq(r).remove(),r<s&&--s;s=Math.max(s,0)}else r=e,t.slides[r]&&t.slides.eq(r).remove(),r<s&&--s,s=Math.max(s,0);n.loop&&t.loopCreate(),n.observer&&B.observer||t.update(),n.loop?t.slideTo(s+t.loopedSlides,0,!1):t.slideTo(s,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},f=function(){var e=q.navigator.userAgent,t={ios:!1,android:!1,androidChrome:!1,desktop:!1,windows:!1,iphone:!1,ipod:!1,ipad:!1,cordova:q.cordova||q.phonegap,phonegap:q.cordova||q.phonegap},n=e.match(/(Windows Phone);?[\s\/]+([\d.]+)?/),i=e.match(/(Android);?[\s\/]+([\d.]+)?/),a=e.match(/(iPad).*OS\s([\d_]+)/),r=e.match(/(iPod)(.*OS\s([\d_]+))?/),s=!a&&e.match(/(iPhone\sOS|iOS)\s([\d_]+)/);if(n&&(t.os="windows",t.osVersion=n[2],t.windows=!0),i&&!n&&(t.os="android",t.osVersion=i[2],t.android=!0,t.androidChrome=0<=e.toLowerCase().indexOf("chrome")),(a||s||r)&&(t.os="ios",t.ios=!0),s&&!r&&(t.osVersion=s[2].replace(/_/g,"."),t.iphone=!0),a&&(t.osVersion=a[2].replace(/_/g,"."),t.ipad=!0),r&&(t.osVersion=r[3]?r[3].replace(/_/g,"."):null,t.iphone=!0),t.ios&&t.osVersion&&0<=e.indexOf("Version/")&&"10"===t.osVersion.split(".")[0]&&(t.osVersion=e.toLowerCase().split("version/")[1].split(" ")[0]),t.desktop=!(t.os||t.android||t.webView),t.webView=(s||a||r)&&e.match(/.*AppleWebKit(?!.*Safari)/i),t.os&&"ios"===t.os){var o=t.osVersion.split("."),l=m.querySelector('meta[name="viewport"]');t.minimalUi=!t.webView&&(r||s)&&(7==+o[0]?1<=+o[1]:7<+o[0])&&l&&0<=l.getAttribute("content").indexOf("minimal-ui")}return t.pixelRatio=q.devicePixelRatio||1,t}();function g(){var e=this,t=e.params,n=e.el;if(!n||0!==n.offsetWidth){t.breakpoints&&e.setBreakpoint();var i=e.allowSlideNext,a=e.allowSlidePrev,r=e.snapGrid;if(e.allowSlideNext=!0,e.allowSlidePrev=!0,e.updateSize(),e.updateSlides(),t.freeMode){var s=Math.min(Math.max(e.translate,e.maxTranslate()),e.minTranslate());e.setTranslate(s),e.updateActiveIndex(),e.updateSlidesClasses(),t.autoHeight&&e.updateAutoHeight()}else e.updateSlidesClasses(),("auto"===t.slidesPerView||1<t.slidesPerView)&&e.isEnd&&!e.params.centeredSlides?e.slideTo(e.slides.length-1,0,!1,!0):e.slideTo(e.activeIndex,0,!1,!0);e.allowSlidePrev=a,e.allowSlideNext=i,e.params.watchOverflow&&r!==e.snapGrid&&e.checkOverflow()}}var v,y={attachEvents:function(){var e=this,t=e.params,n=e.touchEvents,i=e.el,a=e.wrapperEl;e.onTouchStart=function(e){var t=this,n=t.touchEventsData,i=t.params,a=t.touches;if(!t.animating||!i.preventInteractionOnTransition){var r=e;if(r.originalEvent&&(r=r.originalEvent),n.isTouchEvent="touchstart"===r.type,(n.isTouchEvent||!("which"in r)||3!==r.which)&&(!n.isTouched||!n.isMoved))if(i.noSwiping&&D(r.target).closest(i.noSwipingSelector?i.noSwipingSelector:"."+i.noSwipingClass)[0])t.allowClick=!0;else if(!i.swipeHandler||D(r).closest(i.swipeHandler)[0]){a.currentX="touchstart"===r.type?r.targetTouches[0].pageX:r.pageX,a.currentY="touchstart"===r.type?r.targetTouches[0].pageY:r.pageY;var s=a.currentX,o=a.currentY,l=i.edgeSwipeDetection||i.iOSEdgeSwipeDetection,c=i.edgeSwipeThreshold||i.iOSEdgeSwipeThreshold;if(!l||!(s<=c||s>=q.screen.width-c)){if(F.extend(n,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),a.startX=s,a.startY=o,n.touchStartTime=F.now(),t.allowClick=!0,t.updateSize(),t.swipeDirection=void 0,0<i.threshold&&(n.allowThresholdMove=!1),"touchstart"!==r.type){var d=!0;D(r.target).is(n.formElements)&&(d=!1),m.activeElement&&D(m.activeElement).is(n.formElements)&&m.activeElement!==r.target&&m.activeElement.blur(),d&&t.allowTouchMove&&r.preventDefault()}t.emit("touchStart",r)}}}}.bind(e),e.onTouchMove=function(e){var t=this,n=t.touchEventsData,i=t.params,a=t.touches,r=t.rtlTranslate,s=e;if(s.originalEvent&&(s=s.originalEvent),n.isTouched){if(!n.isTouchEvent||"mousemove"!==s.type){var o="touchmove"===s.type?s.targetTouches[0].pageX:s.pageX,l="touchmove"===s.type?s.targetTouches[0].pageY:s.pageY;if(s.preventedByNestedSwiper)return a.startX=o,void(a.startY=l);if(!t.allowTouchMove)return t.allowClick=!1,void(n.isTouched&&(F.extend(a,{startX:o,startY:l,currentX:o,currentY:l}),n.touchStartTime=F.now()));if(n.isTouchEvent&&i.touchReleaseOnEdges&&!i.loop)if(t.isVertical()){if(l<a.startY&&t.translate<=t.maxTranslate()||l>a.startY&&t.translate>=t.minTranslate())return n.isTouched=!1,void(n.isMoved=!1)}else if(o<a.startX&&t.translate<=t.maxTranslate()||o>a.startX&&t.translate>=t.minTranslate())return;if(n.isTouchEvent&&m.activeElement&&s.target===m.activeElement&&D(s.target).is(n.formElements))return n.isMoved=!0,void(t.allowClick=!1);if(n.allowTouchCallbacks&&t.emit("touchMove",s),!(s.targetTouches&&1<s.targetTouches.length)){a.currentX=o,a.currentY=l;var c,d=a.currentX-a.startX,u=a.currentY-a.startY;if(!(t.params.threshold&&Math.sqrt(Math.pow(d,2)+Math.pow(u,2))<t.params.threshold))if(void 0===n.isScrolling&&(t.isHorizontal()&&a.currentY===a.startY||t.isVertical()&&a.currentX===a.startX?n.isScrolling=!1:25<=d*d+u*u&&(c=180*Math.atan2(Math.abs(u),Math.abs(d))/Math.PI,n.isScrolling=t.isHorizontal()?c>i.touchAngle:90-c>i.touchAngle)),n.isScrolling&&t.emit("touchMoveOpposite",s),void 0===n.startMoving&&(a.currentX===a.startX&&a.currentY===a.startY||(n.startMoving=!0)),n.isScrolling)n.isTouched=!1;else if(n.startMoving){t.allowClick=!1,s.preventDefault(),i.touchMoveStopPropagation&&!i.nested&&s.stopPropagation(),n.isMoved||(i.loop&&t.loopFix(),n.startTranslate=t.getTranslate(),t.setTransition(0),t.animating&&t.$wrapperEl.trigger("webkitTransitionEnd transitionend"),n.allowMomentumBounce=!1,!i.grabCursor||!0!==t.allowSlideNext&&!0!==t.allowSlidePrev||t.setGrabCursor(!0),t.emit("sliderFirstMove",s)),t.emit("sliderMove",s),n.isMoved=!0;var p=t.isHorizontal()?d:u;a.diff=p,p*=i.touchRatio,r&&(p=-p),t.swipeDirection=0<p?"prev":"next",n.currentTranslate=p+n.startTranslate;var h=!0,f=i.resistanceRatio;if(i.touchReleaseOnEdges&&(f=0),0<p&&n.currentTranslate>t.minTranslate()?(h=!1,i.resistance&&(n.currentTranslate=t.minTranslate()-1+Math.pow(-t.minTranslate()+n.startTranslate+p,f))):p<0&&n.currentTranslate<t.maxTranslate()&&(h=!1,i.resistance&&(n.currentTranslate=t.maxTranslate()+1-Math.pow(t.maxTranslate()-n.startTranslate-p,f))),h&&(s.preventedByNestedSwiper=!0),!t.allowSlideNext&&"next"===t.swipeDirection&&n.currentTranslate<n.startTranslate&&(n.currentTranslate=n.startTranslate),!t.allowSlidePrev&&"prev"===t.swipeDirection&&n.currentTranslate>n.startTranslate&&(n.currentTranslate=n.startTranslate),0<i.threshold){if(!(Math.abs(p)>i.threshold||n.allowThresholdMove))return void(n.currentTranslate=n.startTranslate);if(!n.allowThresholdMove)return n.allowThresholdMove=!0,a.startX=a.currentX,a.startY=a.currentY,n.currentTranslate=n.startTranslate,void(a.diff=t.isHorizontal()?a.currentX-a.startX:a.currentY-a.startY)}i.followFinger&&((i.freeMode||i.watchSlidesProgress||i.watchSlidesVisibility)&&(t.updateActiveIndex(),t.updateSlidesClasses()),i.freeMode&&(0===n.velocities.length&&n.velocities.push({position:a[t.isHorizontal()?"startX":"startY"],time:n.touchStartTime}),n.velocities.push({position:a[t.isHorizontal()?"currentX":"currentY"],time:F.now()})),t.updateProgress(n.currentTranslate),t.setTranslate(n.currentTranslate))}}}}else n.startMoving&&n.isScrolling&&t.emit("touchMoveOpposite",s)}.bind(e),e.onTouchEnd=function(e){var t=this,n=t.touchEventsData,i=t.params,a=t.touches,r=t.rtlTranslate,s=t.$wrapperEl,o=t.slidesGrid,l=t.snapGrid,c=e;if(c.originalEvent&&(c=c.originalEvent),n.allowTouchCallbacks&&t.emit("touchEnd",c),n.allowTouchCallbacks=!1,!n.isTouched)return n.isMoved&&i.grabCursor&&t.setGrabCursor(!1),n.isMoved=!1,void(n.startMoving=!1);i.grabCursor&&n.isMoved&&n.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var d,u=F.now(),p=u-n.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(c),t.emit("tap",c),p<300&&300<u-n.lastClickTime&&(n.clickTimeout&&clearTimeout(n.clickTimeout),n.clickTimeout=F.nextTick(function(){t&&!t.destroyed&&t.emit("click",c)},300)),p<300&&u-n.lastClickTime<300&&(n.clickTimeout&&clearTimeout(n.clickTimeout),t.emit("doubleTap",c))),n.lastClickTime=F.now(),F.nextTick(function(){t.destroyed||(t.allowClick=!0)}),!n.isTouched||!n.isMoved||!t.swipeDirection||0===a.diff||n.currentTranslate===n.startTranslate)return n.isTouched=!1,n.isMoved=!1,void(n.startMoving=!1);if(n.isTouched=!1,n.isMoved=!1,n.startMoving=!1,d=i.followFinger?r?t.translate:-t.translate:-n.currentTranslate,i.freeMode){if(d<-t.minTranslate())return void t.slideTo(t.activeIndex);if(d>-t.maxTranslate())return void(t.slides.length<l.length?t.slideTo(l.length-1):t.slideTo(t.slides.length-1));if(i.freeModeMomentum){if(1<n.velocities.length){var h=n.velocities.pop(),f=n.velocities.pop(),m=h.position-f.position,g=h.time-f.time;t.velocity=m/g,t.velocity/=2,Math.abs(t.velocity)<i.freeModeMinimumVelocity&&(t.velocity=0),(150<g||300<F.now()-h.time)&&(t.velocity=0)}else t.velocity=0;t.velocity*=i.freeModeMomentumVelocityRatio,n.velocities.length=0;var v=1e3*i.freeModeMomentumRatio,y=t.velocity*v,b=t.translate+y;r&&(b=-b);var x,w,T=!1,S=20*Math.abs(t.velocity)*i.freeModeMomentumBounceRatio;if(b<t.maxTranslate())i.freeModeMomentumBounce?(b+t.maxTranslate()<-S&&(b=t.maxTranslate()-S),x=t.maxTranslate(),T=!0,n.allowMomentumBounce=!0):b=t.maxTranslate(),i.loop&&i.centeredSlides&&(w=!0);else if(b>t.minTranslate())i.freeModeMomentumBounce?(b-t.minTranslate()>S&&(b=t.minTranslate()+S),x=t.minTranslate(),T=!0,n.allowMomentumBounce=!0):b=t.minTranslate(),i.loop&&i.centeredSlides&&(w=!0);else if(i.freeModeSticky){for(var C,E=0;E<l.length;E+=1)if(l[E]>-b){C=E;break}b=-(Math.abs(l[C]-b)<Math.abs(l[C-1]-b)||"next"===t.swipeDirection?l[C]:l[C-1])}if(w&&t.once("transitionEnd",function(){t.loopFix()}),0!==t.velocity)v=r?Math.abs((-b-t.translate)/t.velocity):Math.abs((b-t.translate)/t.velocity);else if(i.freeModeSticky)return void t.slideToClosest();i.freeModeMomentumBounce&&T?(t.updateProgress(x),t.setTransition(v),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating=!0,s.transitionEnd(function(){t&&!t.destroyed&&n.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(i.speed),t.setTranslate(x),s.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))})):t.velocity?(t.updateProgress(b),t.setTransition(v),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,s.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))):t.updateProgress(b),t.updateActiveIndex(),t.updateSlidesClasses()}else if(i.freeModeSticky)return void t.slideToClosest();(!i.freeModeMomentum||p>=i.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var P=0,k=t.slidesSizesGrid[0],M=0;M<o.length;M+=i.slidesPerGroup)void 0!==o[M+i.slidesPerGroup]?d>=o[M]&&d<o[M+i.slidesPerGroup]&&(k=o[(P=M)+i.slidesPerGroup]-o[M]):d>=o[M]&&(P=M,k=o[o.length-1]-o[o.length-2]);var $=(d-o[P])/k;if(p>i.longSwipesMs){if(!i.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&($>=i.longSwipesRatio?t.slideTo(P+i.slidesPerGroup):t.slideTo(P)),"prev"===t.swipeDirection&&($>1-i.longSwipesRatio?t.slideTo(P+i.slidesPerGroup):t.slideTo(P))}else{if(!i.shortSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&t.slideTo(P+i.slidesPerGroup),"prev"===t.swipeDirection&&t.slideTo(P)}}}.bind(e),e.onClick=function(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))}.bind(e);var r="container"===t.touchEventsTarget?i:a,s=!!t.nested;if(B.touch||!B.pointerEvents&&!B.prefixedPointerEvents){if(B.touch){var o=!("touchstart"!==n.start||!B.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1};r.addEventListener(n.start,e.onTouchStart,o),r.addEventListener(n.move,e.onTouchMove,B.passiveListener?{passive:!1,capture:s}:s),r.addEventListener(n.end,e.onTouchEnd,o)}(t.simulateTouch&&!f.ios&&!f.android||t.simulateTouch&&!B.touch&&f.ios)&&(r.addEventListener("mousedown",e.onTouchStart,!1),m.addEventListener("mousemove",e.onTouchMove,s),m.addEventListener("mouseup",e.onTouchEnd,!1))}else r.addEventListener(n.start,e.onTouchStart,!1),m.addEventListener(n.move,e.onTouchMove,s),m.addEventListener(n.end,e.onTouchEnd,!1);(t.preventClicks||t.preventClicksPropagation)&&r.addEventListener("click",e.onClick,!0),e.on(f.ios||f.android?"resize orientationchange observerUpdate":"resize observerUpdate",g,!0)},detachEvents:function(){var e=this,t=e.params,n=e.touchEvents,i=e.el,a=e.wrapperEl,r="container"===t.touchEventsTarget?i:a,s=!!t.nested;if(B.touch||!B.pointerEvents&&!B.prefixedPointerEvents){if(B.touch){var o=!("onTouchStart"!==n.start||!B.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1};r.removeEventListener(n.start,e.onTouchStart,o),r.removeEventListener(n.move,e.onTouchMove,s),r.removeEventListener(n.end,e.onTouchEnd,o)}(t.simulateTouch&&!f.ios&&!f.android||t.simulateTouch&&!B.touch&&f.ios)&&(r.removeEventListener("mousedown",e.onTouchStart,!1),m.removeEventListener("mousemove",e.onTouchMove,s),m.removeEventListener("mouseup",e.onTouchEnd,!1))}else r.removeEventListener(n.start,e.onTouchStart,!1),m.removeEventListener(n.move,e.onTouchMove,s),m.removeEventListener(n.end,e.onTouchEnd,!1);(t.preventClicks||t.preventClicksPropagation)&&r.removeEventListener("click",e.onClick,!0),e.off(f.ios||f.android?"resize orientationchange observerUpdate":"resize observerUpdate",g)}},b={setBreakpoint:function(){var e=this,t=e.activeIndex,n=e.initialized,i=e.loopedSlides;void 0===i&&(i=0);var a=e.params,r=a.breakpoints;if(r&&(!r||0!==Object.keys(r).length)){var s=e.getBreakpoint(r);if(s&&e.currentBreakpoint!==s){var o=s in r?r[s]:e.originalParams,l=a.loop&&o.slidesPerView!==a.slidesPerView;F.extend(e.params,o),F.extend(e,{allowTouchMove:e.params.allowTouchMove,allowSlideNext:e.params.allowSlideNext,allowSlidePrev:e.params.allowSlidePrev}),e.currentBreakpoint=s,l&&n&&(e.loopDestroy(),e.loopCreate(),e.updateSlides(),e.slideTo(t-i+e.loopedSlides,0,!1)),e.emit("breakpoint",o)}}},getBreakpoint:function(e){if(e){var t=!1,n=[];Object.keys(e).forEach(function(e){n.push(e)}),n.sort(function(e,t){return parseInt(e,10)-parseInt(t,10)});for(var i=0;i<n.length;i+=1){var a=n[i];a>=q.innerWidth&&!t&&(t=a)}return t||"max"}}},A={isIE:!!q.navigator.userAgent.match(/Trident/g)||!!q.navigator.userAgent.match(/MSIE/g),isSafari:0<=(v=q.navigator.userAgent.toLowerCase()).indexOf("safari")&&v.indexOf("chrome")<0&&v.indexOf("android")<0,isUiWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(q.navigator.userAgent)},x={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,preventInteractionOnTransition:!1,edgeSwipeDetection:!1,edgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,centeredSlides:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!0,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0},w={update:o,translate:c,transition:{setTransition:function(e,t){this.$wrapperEl.transition(e),this.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);var n=this,i=n.activeIndex,a=n.params,r=n.previousIndex;a.autoHeight&&n.updateAutoHeight();var s=t;if(s=s||(r<i?"next":i<r?"prev":"reset"),n.emit("transitionStart"),e&&i!==r){if("reset"===s)return void n.emit("slideResetTransitionStart");n.emit("slideChangeTransitionStart"),"next"===s?n.emit("slideNextTransitionStart"):n.emit("slidePrevTransitionStart")}},transitionEnd:function(e,t){void 0===e&&(e=!0);var n=this,i=n.activeIndex,a=n.previousIndex;n.animating=!1,n.setTransition(0);var r=t;if(r=r||(a<i?"next":i<a?"prev":"reset"),n.emit("transitionEnd"),e&&i!==a){if("reset"===r)return void n.emit("slideResetTransitionEnd");n.emit("slideChangeTransitionEnd"),"next"===r?n.emit("slideNextTransitionEnd"):n.emit("slidePrevTransitionEnd")}}},slide:d,loop:u,grabCursor:p,manipulation:h,events:y,breakpoints:b,checkOverflow:{checkOverflow:function(){var e=this,t=e.isLocked;e.isLocked=1===e.snapGrid.length,e.allowSlideNext=!e.isLocked,e.allowSlidePrev=!e.isLocked,t!==e.isLocked&&e.emit(e.isLocked?"lock":"unlock"),t&&t!==e.isLocked&&(e.isEnd=!1,e.navigation.update())}},classes:{addClasses:function(){var t=this.classNames,n=this.params,e=this.rtl,i=this.$el,a=[];a.push(n.direction),n.freeMode&&a.push("free-mode"),B.flexbox||a.push("no-flexbox"),n.autoHeight&&a.push("autoheight"),e&&a.push("rtl"),1<n.slidesPerColumn&&a.push("multirow"),f.android&&a.push("android"),f.ios&&a.push("ios"),A.isIE&&(B.pointerEvents||B.prefixedPointerEvents)&&a.push("wp8-"+n.direction),a.forEach(function(e){t.push(n.containerModifierClass+e)}),i.addClass(t.join(" "))},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" "))}},images:{loadImage:function(e,t,n,i,a,r){var s;function o(){r&&r()}(!e.complete||!a)&&t?((s=new q.Image).onload=o,s.onerror=o,i&&(s.sizes=i),n&&(s.srcset=n),t&&(s.src=t)):o()},preloadImages:function(){var e=this;function t(){null!=e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var n=0;n<e.imagesToLoad.length;n+=1){var i=e.imagesToLoad[n];e.loadImage(i,i.currentSrc||i.getAttribute("src"),i.srcset||i.getAttribute("srcset"),i.sizes||i.getAttribute("sizes"),!0,t)}}}},T={},S=function(u){function p(){for(var e,a,t=[],n=arguments.length;n--;)t[n]=arguments[n];a=(a=1===t.length&&t[0].constructor&&t[0].constructor===Object?t[0]:(e=t[0],t[1]))||{},a=F.extend({},a),e&&!a.el&&(a.el=e),u.call(this,a),Object.keys(w).forEach(function(t){Object.keys(w[t]).forEach(function(e){p.prototype[e]||(p.prototype[e]=w[t][e])})});var r=this;void 0===r.modules&&(r.modules={}),Object.keys(r.modules).forEach(function(e){var t=r.modules[e];if(t.params){var n=Object.keys(t.params)[0],i=t.params[n];if("object"!=_typeof(i))return;if(!(n in a&&"enabled"in i))return;!0===a[n]&&(a[n]={enabled:!0}),"object"!=_typeof(a[n])||"enabled"in a[n]||(a[n].enabled=!0),a[n]||(a[n]={enabled:!1})}});var i=F.extend({},x);r.useModulesParams(i),r.params=F.extend({},i,T,a),r.originalParams=F.extend({},r.params),r.passedParams=F.extend({},a);var s=(r.$=D)(r.params.el);if(e=s[0]){if(1<s.length){var o=[];return s.each(function(e,t){var n=F.extend({},a,{el:t});o.push(new p(n))}),o}e.swiper=r,s.data("swiper",r);var l,c,d=s.children("."+r.params.wrapperClass);return F.extend(r,{$el:s,el:e,$wrapperEl:d,wrapperEl:d[0],classNames:[],slides:D(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===r.params.direction},isVertical:function(){return"vertical"===r.params.direction},rtl:"rtl"===e.dir.toLowerCase()||"rtl"===s.css("direction"),rtlTranslate:"horizontal"===r.params.direction&&("rtl"===e.dir.toLowerCase()||"rtl"===s.css("direction")),wrongRTL:"-webkit-box"===d.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,allowSlideNext:r.params.allowSlideNext,allowSlidePrev:r.params.allowSlidePrev,touchEvents:(l=["touchstart","touchmove","touchend"],c=["mousedown","mousemove","mouseup"],B.pointerEvents?c=["pointerdown","pointermove","pointerup"]:B.prefixedPointerEvents&&(c=["MSPointerDown","MSPointerMove","MSPointerUp"]),r.touchEventsTouch={start:l[0],move:l[1],end:l[2]},r.touchEventsDesktop={start:c[0],move:c[1],end:c[2]},B.touch||!r.params.simulateTouch?r.touchEventsTouch:r.touchEventsDesktop),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video",lastClickTime:F.now(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:r.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),r.useModules(),r.params.init&&r.init(),r}}u&&(p.__proto__=u);var e={extendedDefaults:{configurable:!0},defaults:{configurable:!0},Class:{configurable:!0},$:{configurable:!0}};return((p.prototype=Object.create(u&&u.prototype)).constructor=p).prototype.slidesPerViewDynamic=function(){var e=this,t=e.params,n=e.slides,i=e.slidesGrid,a=e.size,r=e.activeIndex,s=1;if(t.centeredSlides){for(var o,l=n[r].swiperSlideSize,c=r+1;c<n.length;c+=1)n[c]&&!o&&(s+=1,a<(l+=n[c].swiperSlideSize)&&(o=!0));for(var d=r-1;0<=d;--d)n[d]&&!o&&(s+=1,a<(l+=n[d].swiperSlideSize)&&(o=!0))}else for(var u=r+1;u<n.length;u+=1)i[u]-i[r]<a&&(s+=1);return s},p.prototype.update=function(){var n=this;if(n&&!n.destroyed){var e=n.snapGrid,t=n.params;t.breakpoints&&n.setBreakpoint(),n.updateSize(),n.updateSlides(),n.updateProgress(),n.updateSlidesClasses(),n.params.freeMode?(i(),n.params.autoHeight&&n.updateAutoHeight()):(("auto"===n.params.slidesPerView||1<n.params.slidesPerView)&&n.isEnd&&!n.params.centeredSlides?n.slideTo(n.slides.length-1,0,!1,!0):n.slideTo(n.activeIndex,0,!1,!0))||i(),t.watchOverflow&&e!==n.snapGrid&&n.checkOverflow(),n.emit("update")}function i(){var e=n.rtlTranslate?-1*n.translate:n.translate,t=Math.min(Math.max(e,n.maxTranslate()),n.minTranslate());n.setTranslate(t),n.updateActiveIndex(),n.updateSlidesClasses()}},p.prototype.init=function(){var e=this;e.initialized||(e.emit("beforeInit"),e.params.breakpoints&&e.setBreakpoint(),e.addClasses(),e.params.loop&&e.loopCreate(),e.updateSize(),e.updateSlides(),e.params.watchOverflow&&e.checkOverflow(),e.params.grabCursor&&e.setGrabCursor(),e.params.preloadImages&&e.preloadImages(),e.params.loop?e.slideTo(e.params.initialSlide+e.loopedSlides,0,e.params.runCallbacksOnInit):e.slideTo(e.params.initialSlide,0,e.params.runCallbacksOnInit),e.attachEvents(),e.initialized=!0,e.emit("init"))},p.prototype.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var n=this,i=n.params,a=n.$el,r=n.$wrapperEl,s=n.slides;return void 0===n.params||n.destroyed||(n.emit("beforeDestroy"),n.initialized=!1,n.detachEvents(),i.loop&&n.loopDestroy(),t&&(n.removeClasses(),a.removeAttr("style"),r.removeAttr("style"),s&&s.length&&s.removeClass([i.slideVisibleClass,i.slideActiveClass,i.slideNextClass,i.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index").removeAttr("data-swiper-column").removeAttr("data-swiper-row")),n.emit("destroy"),Object.keys(n.eventsListeners).forEach(function(e){n.off(e)}),!1!==e&&(n.$el[0].swiper=null,n.$el.data("swiper",null),F.deleteProps(n)),n.destroyed=!0),null},p.extendDefaults=function(e){F.extend(T,e)},e.extendedDefaults.get=function(){return T},e.defaults.get=function(){return x},e.Class.get=function(){return u},e.$.get=function(){return D},Object.defineProperties(p,e),p}(e),C={name:"device",proto:{device:f},static:{device:f}},E={name:"support",proto:{support:B},static:{support:B}},P={name:"browser",proto:{browser:A},static:{browser:A}},k={name:"resize",create:function(){var e=this;F.extend(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(){q.addEventListener("resize",this.resize.resizeHandler),q.addEventListener("orientationchange",this.resize.orientationChangeHandler)},destroy:function(){q.removeEventListener("resize",this.resize.resizeHandler),q.removeEventListener("orientationchange",this.resize.orientationChangeHandler)}}},M={func:q.MutationObserver||q.WebkitMutationObserver,attach:function(e,t){void 0===t&&(t={});var n=this,i=new M.func(function(e){if(1!==e.length){var t=function(){n.emit("observerUpdate",e[0])};q.requestAnimationFrame?q.requestAnimationFrame(t):q.setTimeout(t,0)}else n.emit("observerUpdate",e[0])});i.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),n.observer.observers.push(i)},init:function(){var e=this;if(B.observer&&e.params.observer){if(e.params.observeParents)for(var t=e.$el.parents(),n=0;n<t.length;n+=1)e.observer.attach(t[n]);e.observer.attach(e.$el[0],{childList:!1}),e.observer.attach(e.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach(function(e){e.disconnect()}),this.observer.observers=[]}},$={name:"observer",params:{observer:!1,observeParents:!1},create:function(){F.extend(this,{observer:{init:M.init.bind(this),attach:M.attach.bind(this),destroy:M.destroy.bind(this),observers:[]}})},on:{init:function(){this.observer.init()},destroy:function(){this.observer.destroy()}}},L={update:function(e){var t=this,n=t.params,i=n.slidesPerView,a=n.slidesPerGroup,r=n.centeredSlides,s=t.virtual,o=s.from,l=s.to,c=s.slides,d=s.slidesGrid,u=s.renderSlide,p=s.offset;t.updateActiveIndex();var h,f,m,g=t.activeIndex||0;h=t.rtlTranslate?"right":t.isHorizontal()?"left":"top",m=r?(f=Math.floor(i/2)+a,Math.floor(i/2)+a):(f=i+(a-1),a);var v=Math.max((g||0)-m,0),y=Math.min((g||0)+f,c.length-1),b=(t.slidesGrid[v]||0)-(t.slidesGrid[0]||0);function x(){t.updateSlides(),t.updateProgress(),t.updateSlidesClasses(),t.lazy&&t.params.lazy.enabled&&t.lazy.load()}if(F.extend(t.virtual,{from:v,to:y,offset:b,slidesGrid:t.slidesGrid}),o===v&&l===y&&!e)return t.slidesGrid!==d&&b!==p&&t.slides.css(h,b+"px"),void t.updateProgress();if(t.params.virtual.renderExternal)return t.params.virtual.renderExternal.call(t,{offset:b,from:v,to:y,slides:function(){for(var e=[],t=v;t<=y;t+=1)e.push(c[t]);return e}()}),void x();var w=[],T=[];if(e)t.$wrapperEl.find("."+t.params.slideClass).remove();else for(var S=o;S<=l;S+=1)(S<v||y<S)&&t.$wrapperEl.find("."+t.params.slideClass+'[data-swiper-slide-index="'+S+'"]').remove();for(var C=0;C<c.length;C+=1)v<=C&&C<=y&&(void 0===l||e?T.push(C):(l<C&&T.push(C),C<o&&w.push(C)));T.forEach(function(e){t.$wrapperEl.append(u(c[e],e))}),w.sort(function(e,t){return e<t}).forEach(function(e){t.$wrapperEl.prepend(u(c[e],e))}),t.$wrapperEl.children(".swiper-slide").css(h,b+"px"),x()},renderSlide:function(e,t){var n=this,i=n.params.virtual;if(i.cache&&n.virtual.cache[t])return n.virtual.cache[t];var a=i.renderSlide?D(i.renderSlide.call(n,e,t)):D('<div class="'+n.params.slideClass+'" data-swiper-slide-index="'+t+'">'+e+"</div>");return a.attr("data-swiper-slide-index")||a.attr("data-swiper-slide-index",t),i.cache&&(n.virtual.cache[t]=a),a},appendSlide:function(e){this.virtual.slides.push(e),this.virtual.update(!0)},prependSlide:function(e){var t=this;if(t.virtual.slides.unshift(e),t.params.virtual.cache){var n=t.virtual.cache,i={};Object.keys(n).forEach(function(e){i[e+1]=n[e]}),t.virtual.cache=i}t.virtual.update(!0),t.slideNext(0)}},z={name:"virtual",params:{virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null}},create:function(){var e=this;F.extend(e,{virtual:{update:L.update.bind(e),appendSlide:L.appendSlide.bind(e),prependSlide:L.prependSlide.bind(e),renderSlide:L.renderSlide.bind(e),slides:e.params.virtual.slides,cache:{}}})},on:{beforeInit:function(){var e=this;if(e.params.virtual.enabled){e.classNames.push(e.params.containerModifierClass+"virtual");var t={watchSlidesProgress:!0};F.extend(e.params,t),F.extend(e.originalParams,t),e.virtual.update()}},setTranslate:function(){this.params.virtual.enabled&&this.virtual.update()}}},I={handle:function(e){var t=this,n=t.rtlTranslate,i=e;i.originalEvent&&(i=i.originalEvent);var a=i.keyCode||i.charCode;if(!t.allowSlideNext&&(t.isHorizontal()&&39===a||t.isVertical()&&40===a))return!1;if(!t.allowSlidePrev&&(t.isHorizontal()&&37===a||t.isVertical()&&38===a))return!1;if(!(i.shiftKey||i.altKey||i.ctrlKey||i.metaKey||m.activeElement&&m.activeElement.nodeName&&("input"===m.activeElement.nodeName.toLowerCase()||"textarea"===m.activeElement.nodeName.toLowerCase()))){if(t.params.keyboard.onlyInViewport&&(37===a||39===a||38===a||40===a)){var r=!1;if(0<t.$el.parents("."+t.params.slideClass).length&&0===t.$el.parents("."+t.params.slideActiveClass).length)return;var s=q.innerWidth,o=q.innerHeight,l=t.$el.offset();n&&(l.left-=t.$el[0].scrollLeft);for(var c=[[l.left,l.top],[l.left+t.width,l.top],[l.left,l.top+t.height],[l.left+t.width,l.top+t.height]],d=0;d<c.length;d+=1){var u=c[d];0<=u[0]&&u[0]<=s&&0<=u[1]&&u[1]<=o&&(r=!0)}if(!r)return}t.isHorizontal()?(37!==a&&39!==a||(i.preventDefault?i.preventDefault():i.returnValue=!1),(39===a&&!n||37===a&&n)&&t.slideNext(),(37===a&&!n||39===a&&n)&&t.slidePrev()):(38!==a&&40!==a||(i.preventDefault?i.preventDefault():i.returnValue=!1),40===a&&t.slideNext(),38===a&&t.slidePrev()),t.emit("keyPress",a)}},enable:function(){this.keyboard.enabled||(D(m).on("keydown",this.keyboard.handle),this.keyboard.enabled=!0)},disable:function(){this.keyboard.enabled&&(D(m).off("keydown",this.keyboard.handle),this.keyboard.enabled=!1)}},O={name:"keyboard",params:{keyboard:{enabled:!1,onlyInViewport:!0}},create:function(){F.extend(this,{keyboard:{enabled:!1,enable:I.enable.bind(this),disable:I.disable.bind(this),handle:I.handle.bind(this)}})},on:{init:function(){this.params.keyboard.enabled&&this.keyboard.enable()},destroy:function(){this.keyboard.enabled&&this.keyboard.disable()}}},N={lastScrollTime:F.now(),event:-1<q.navigator.userAgent.indexOf("firefox")?"DOMMouseScroll":function(){var e="onwheel",t=e in m;if(!t){var n=m.createElement("div");n.setAttribute(e,"return;"),t="function"==typeof n[e]}return!t&&m.implementation&&m.implementation.hasFeature&&!0!==m.implementation.hasFeature("","")&&(t=m.implementation.hasFeature("Events.wheel","3.0")),t}()?"wheel":"mousewheel",normalize:function(e){var t=0,n=0,i=0,a=0;return"detail"in e&&(n=e.detail),"wheelDelta"in e&&(n=-e.wheelDelta/120),"wheelDeltaY"in e&&(n=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=n,n=0),i=10*t,a=10*n,"deltaY"in e&&(a=e.deltaY),"deltaX"in e&&(i=e.deltaX),(i||a)&&e.deltaMode&&(1===e.deltaMode?(i*=40,a*=40):(i*=800,a*=800)),i&&!t&&(t=i<1?-1:1),a&&!n&&(n=a<1?-1:1),{spinX:t,spinY:n,pixelX:i,pixelY:a}},handleMouseEnter:function(){this.mouseEntered=!0},handleMouseLeave:function(){this.mouseEntered=!1},handle:function(e){var t=e,n=this,i=n.params.mousewheel;if(!n.mouseEntered&&!i.releaseOnEdges)return!0;t.originalEvent&&(t=t.originalEvent);var a=0,r=n.rtlTranslate?-1:1,s=N.normalize(t);if(i.forceToAxis)if(n.isHorizontal()){if(!(Math.abs(s.pixelX)>Math.abs(s.pixelY)))return!0;a=s.pixelX*r}else{if(!(Math.abs(s.pixelY)>Math.abs(s.pixelX)))return!0;a=s.pixelY}else a=Math.abs(s.pixelX)>Math.abs(s.pixelY)?-s.pixelX*r:-s.pixelY;if(0===a)return!0;if(i.invert&&(a=-a),n.params.freeMode){n.params.loop&&n.loopFix();var o=n.getTranslate()+a*i.sensitivity,l=n.isBeginning,c=n.isEnd;if(o>=n.minTranslate()&&(o=n.minTranslate()),o<=n.maxTranslate()&&(o=n.maxTranslate()),n.setTransition(0),n.setTranslate(o),n.updateProgress(),n.updateActiveIndex(),n.updateSlidesClasses(),(!l&&n.isBeginning||!c&&n.isEnd)&&n.updateSlidesClasses(),n.params.freeModeSticky&&(clearTimeout(n.mousewheel.timeout),n.mousewheel.timeout=F.nextTick(function(){n.slideToClosest()},300)),n.emit("scroll",t),n.params.autoplay&&n.params.autoplayDisableOnInteraction&&n.autoplay.stop(),o===n.minTranslate()||o===n.maxTranslate())return!0}else{if(60<F.now()-n.mousewheel.lastScrollTime)if(a<0)if(n.isEnd&&!n.params.loop||n.animating){if(i.releaseOnEdges)return!0}else n.slideNext(),n.emit("scroll",t);else if(n.isBeginning&&!n.params.loop||n.animating){if(i.releaseOnEdges)return!0}else n.slidePrev(),n.emit("scroll",t);n.mousewheel.lastScrollTime=(new q.Date).getTime()}return t.preventDefault?t.preventDefault():t.returnValue=!1,!1},enable:function(){var e=this;if(!N.event)return!1;if(e.mousewheel.enabled)return!1;var t=e.$el;return"container"!==e.params.mousewheel.eventsTarged&&(t=D(e.params.mousewheel.eventsTarged)),t.on("mouseenter",e.mousewheel.handleMouseEnter),t.on("mouseleave",e.mousewheel.handleMouseLeave),t.on(N.event,e.mousewheel.handle),e.mousewheel.enabled=!0},disable:function(){var e=this;if(!N.event)return!1;if(!e.mousewheel.enabled)return!1;var t=e.$el;return"container"!==e.params.mousewheel.eventsTarged&&(t=D(e.params.mousewheel.eventsTarged)),t.off(N.event,e.mousewheel.handle),!(e.mousewheel.enabled=!1)}},H={update:function(){var e=this,t=e.params.navigation;if(!e.params.loop){var n=e.navigation,i=n.$nextEl,a=n.$prevEl;a&&0<a.length&&(e.isBeginning?a.addClass(t.disabledClass):a.removeClass(t.disabledClass),a[e.params.watchOverflow&&e.isLocked?"addClass":"removeClass"](t.lockClass)),i&&0<i.length&&(e.isEnd?i.addClass(t.disabledClass):i.removeClass(t.disabledClass),i[e.params.watchOverflow&&e.isLocked?"addClass":"removeClass"](t.lockClass))}},init:function(){var e,t,n=this,i=n.params.navigation;(i.nextEl||i.prevEl)&&(i.nextEl&&(e=D(i.nextEl),n.params.uniqueNavElements&&"string"==typeof i.nextEl&&1<e.length&&1===n.$el.find(i.nextEl).length&&(e=n.$el.find(i.nextEl))),i.prevEl&&(t=D(i.prevEl),n.params.uniqueNavElements&&"string"==typeof i.prevEl&&1<t.length&&1===n.$el.find(i.prevEl).length&&(t=n.$el.find(i.prevEl))),e&&0<e.length&&e.on("click",function(e){e.preventDefault(),n.isEnd&&!n.params.loop||n.slideNext()}),t&&0<t.length&&t.on("click",function(e){e.preventDefault(),n.isBeginning&&!n.params.loop||n.slidePrev()}),F.extend(n.navigation,{$nextEl:e,nextEl:e&&e[0],$prevEl:t,prevEl:t&&t[0]}))},destroy:function(){var e=this.navigation,t=e.$nextEl,n=e.$prevEl;t&&t.length&&(t.off("click"),t.removeClass(this.params.navigation.disabledClass)),n&&n.length&&(n.off("click"),n.removeClass(this.params.navigation.disabledClass))}},j={update:function(){var e=this,t=e.rtl,a=e.params.pagination;if(a.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var r,n=e.virtual&&e.params.virtual.enabled?e.virtual.slides.length:e.slides.length,i=e.pagination.$el,s=e.params.loop?Math.ceil((n-2*e.loopedSlides)/e.params.slidesPerGroup):e.snapGrid.length;if(e.params.loop?((r=Math.ceil((e.activeIndex-e.loopedSlides)/e.params.slidesPerGroup))>n-1-2*e.loopedSlides&&(r-=n-2*e.loopedSlides),s-1<r&&(r-=s),r<0&&"bullets"!==e.params.paginationType&&(r=s+r)):r=void 0!==e.snapIndex?e.snapIndex:e.activeIndex||0,"bullets"===a.type&&e.pagination.bullets&&0<e.pagination.bullets.length){var o,l,c,d=e.pagination.bullets;if(a.dynamicBullets&&(e.pagination.bulletSize=d.eq(0)[e.isHorizontal()?"outerWidth":"outerHeight"](!0),i.css(e.isHorizontal()?"width":"height",e.pagination.bulletSize*(a.dynamicMainBullets+4)+"px"),1<a.dynamicMainBullets&&void 0!==e.previousIndex&&(e.pagination.dynamicBulletIndex+=r-e.previousIndex,e.pagination.dynamicBulletIndex>a.dynamicMainBullets-1?e.pagination.dynamicBulletIndex=a.dynamicMainBullets-1:e.pagination.dynamicBulletIndex<0&&(e.pagination.dynamicBulletIndex=0)),o=r-e.pagination.dynamicBulletIndex,c=((l=o+(Math.min(d.length,a.dynamicMainBullets)-1))+o)/2),d.removeClass(a.bulletActiveClass+" "+a.bulletActiveClass+"-next "+a.bulletActiveClass+"-next-next "+a.bulletActiveClass+"-prev "+a.bulletActiveClass+"-prev-prev "+a.bulletActiveClass+"-main"),1<i.length)d.each(function(e,t){var n=D(t),i=n.index();i===r&&n.addClass(a.bulletActiveClass),a.dynamicBullets&&(o<=i&&i<=l&&n.addClass(a.bulletActiveClass+"-main"),i===o&&n.prev().addClass(a.bulletActiveClass+"-prev").prev().addClass(a.bulletActiveClass+"-prev-prev"),i===l&&n.next().addClass(a.bulletActiveClass+"-next").next().addClass(a.bulletActiveClass+"-next-next"))});else if(d.eq(r).addClass(a.bulletActiveClass),a.dynamicBullets){for(var u=d.eq(o),p=d.eq(l),h=o;h<=l;h+=1)d.eq(h).addClass(a.bulletActiveClass+"-main");u.prev().addClass(a.bulletActiveClass+"-prev").prev().addClass(a.bulletActiveClass+"-prev-prev"),p.next().addClass(a.bulletActiveClass+"-next").next().addClass(a.bulletActiveClass+"-next-next")}if(a.dynamicBullets){var f=Math.min(d.length,a.dynamicMainBullets+4),m=(e.pagination.bulletSize*f-e.pagination.bulletSize)/2-c*e.pagination.bulletSize,g=t?"right":"left";d.css(e.isHorizontal()?g:"top",m+"px")}}if("fraction"===a.type&&(i.find("."+a.currentClass).text(a.formatFractionCurrent(r+1)),i.find("."+a.totalClass).text(a.formatFractionTotal(s))),"progressbar"===a.type){var v;v=a.progressbarOpposite?e.isHorizontal()?"vertical":"horizontal":e.isHorizontal()?"horizontal":"vertical";var y=(r+1)/s,b=1,x=1;"horizontal"==v?b=y:x=y,i.find("."+a.progressbarFillClass).transform("translate3d(0,0,0) scaleX("+b+") scaleY("+x+")").transition(e.params.speed)}"custom"===a.type&&a.renderCustom?(i.html(a.renderCustom(e,r+1,s)),e.emit("paginationRender",e,i[0])):e.emit("paginationUpdate",e,i[0]),i[e.params.watchOverflow&&e.isLocked?"addClass":"removeClass"](a.lockClass)}},render:function(){var e=this,t=e.params.pagination;if(t.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var n=e.virtual&&e.params.virtual.enabled?e.virtual.slides.length:e.slides.length,i=e.pagination.$el,a="";if("bullets"===t.type){for(var r=e.params.loop?Math.ceil((n-2*e.loopedSlides)/e.params.slidesPerGroup):e.snapGrid.length,s=0;s<r;s+=1)t.renderBullet?a+=t.renderBullet.call(e,s,t.bulletClass):a+="<"+t.bulletElement+' class="'+t.bulletClass+'"></'+t.bulletElement+">";i.html(a),e.pagination.bullets=i.find("."+t.bulletClass)}"fraction"===t.type&&(a=t.renderFraction?t.renderFraction.call(e,t.currentClass,t.totalClass):'<span class="'+t.currentClass+'"></span> / <span class="'+t.totalClass+'"></span>',i.html(a)),"progressbar"===t.type&&(a=t.renderProgressbar?t.renderProgressbar.call(e,t.progressbarFillClass):'<span class="'+t.progressbarFillClass+'"></span>',i.html(a)),"custom"!==t.type&&e.emit("paginationRender",e.pagination.$el[0])}},init:function(){var n=this,e=n.params.pagination;if(e.el){var t=D(e.el);0!==t.length&&(n.params.uniqueNavElements&&"string"==typeof e.el&&1<t.length&&1===n.$el.find(e.el).length&&(t=n.$el.find(e.el)),"bullets"===e.type&&e.clickable&&t.addClass(e.clickableClass),t.addClass(e.modifierClass+e.type),"bullets"===e.type&&e.dynamicBullets&&(t.addClass(""+e.modifierClass+e.type+"-dynamic"),n.pagination.dynamicBulletIndex=0,e.dynamicMainBullets<1&&(e.dynamicMainBullets=1)),"progressbar"===e.type&&e.progressbarOpposite&&t.addClass(e.progressbarOppositeClass),e.clickable&&t.on("click","."+e.bulletClass,function(e){e.preventDefault();var t=D(this).index()*n.params.slidesPerGroup;n.params.loop&&(t+=n.loopedSlides),n.slideTo(t)}),F.extend(n.pagination,{$el:t,el:t[0]}))}},destroy:function(){var e=this,t=e.params.pagination;if(t.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var n=e.pagination.$el;n.removeClass(t.hiddenClass),n.removeClass(t.modifierClass+t.type),e.pagination.bullets&&e.pagination.bullets.removeClass(t.bulletActiveClass),t.clickable&&n.off("click","."+t.bulletClass)}}},R={setTranslate:function(){var e=this;if(e.params.scrollbar.el&&e.scrollbar.el){var t=e.scrollbar,n=e.rtlTranslate,i=e.progress,a=t.dragSize,r=t.trackSize,s=t.$dragEl,o=t.$el,l=e.params.scrollbar,c=a,d=(r-a)*i;n?0<(d=-d)?(c=a-d,d=0):r<-d+a&&(c=r+d):d<0?(c=a+d,d=0):r<d+a&&(c=r-d),e.isHorizontal()?(B.transforms3d?s.transform("translate3d("+d+"px, 0, 0)"):s.transform("translateX("+d+"px)"),s[0].style.width=c+"px"):(B.transforms3d?s.transform("translate3d(0px, "+d+"px, 0)"):s.transform("translateY("+d+"px)"),s[0].style.height=c+"px"),l.hide&&(clearTimeout(e.scrollbar.timeout),o[0].style.opacity=1,e.scrollbar.timeout=setTimeout(function(){o[0].style.opacity=0,o.transition(400)},1e3))}},setTransition:function(e){this.params.scrollbar.el&&this.scrollbar.el&&this.scrollbar.$dragEl.transition(e)},updateSize:function(){var e=this;if(e.params.scrollbar.el&&e.scrollbar.el){var t=e.scrollbar,n=t.$dragEl,i=t.$el;n[0].style.width="",n[0].style.height="";var a,r=e.isHorizontal()?i[0].offsetWidth:i[0].offsetHeight,s=e.size/e.virtualSize,o=s*(r/e.size);a="auto"===e.params.scrollbar.dragSize?r*s:parseInt(e.params.scrollbar.dragSize,10),e.isHorizontal()?n[0].style.width=a+"px":n[0].style.height=a+"px",i[0].style.display=1<=s?"none":"",e.params.scrollbarHide&&(i[0].style.opacity=0),F.extend(t,{trackSize:r,divider:s,moveDivider:o,dragSize:a}),t.$el[e.params.watchOverflow&&e.isLocked?"addClass":"removeClass"](e.params.scrollbar.lockClass)}},setDragPosition:function(e){var t,n=this,i=n.scrollbar,a=n.rtlTranslate,r=i.$el,s=i.dragSize,o=i.trackSize;t=((n.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageX:e.pageX||e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageY:e.pageY||e.clientY)-r.offset()[n.isHorizontal()?"left":"top"]-s/2)/(o-s),t=Math.max(Math.min(t,1),0),a&&(t=1-t);var l=n.minTranslate()+(n.maxTranslate()-n.minTranslate())*t;n.updateProgress(l),n.setTranslate(l),n.updateActiveIndex(),n.updateSlidesClasses()},onDragStart:function(e){var t=this,n=t.params.scrollbar,i=t.scrollbar,a=t.$wrapperEl,r=i.$el,s=i.$dragEl;t.scrollbar.isTouched=!0,e.preventDefault(),e.stopPropagation(),a.transition(100),s.transition(100),i.setDragPosition(e),clearTimeout(t.scrollbar.dragTimeout),r.transition(0),n.hide&&r.css("opacity",1),t.emit("scrollbarDragStart",e)},onDragMove:function(e){var t=this.scrollbar,n=this.$wrapperEl,i=t.$el,a=t.$dragEl;this.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),n.transition(0),i.transition(0),a.transition(0),this.emit("scrollbarDragMove",e))},onDragEnd:function(e){var t=this,n=t.params.scrollbar,i=t.scrollbar.$el;t.scrollbar.isTouched&&(t.scrollbar.isTouched=!1,n.hide&&(clearTimeout(t.scrollbar.dragTimeout),t.scrollbar.dragTimeout=F.nextTick(function(){i.css("opacity",0),i.transition(400)},1e3)),t.emit("scrollbarDragEnd",e),n.snapOnRelease&&t.slideToClosest())},enableDraggable:function(){var e=this;if(e.params.scrollbar.el){var t=e.scrollbar,n=e.touchEvents,i=e.touchEventsDesktop,a=e.params,r=t.$el[0],s=!(!B.passiveListener||!a.passiveListeners)&&{passive:!1,capture:!1},o=!(!B.passiveListener||!a.passiveListeners)&&{passive:!0,capture:!1};B.touch||!B.pointerEvents&&!B.prefixedPointerEvents?(B.touch&&(r.addEventListener(n.start,e.scrollbar.onDragStart,s),r.addEventListener(n.move,e.scrollbar.onDragMove,s),r.addEventListener(n.end,e.scrollbar.onDragEnd,o)),(a.simulateTouch&&!f.ios&&!f.android||a.simulateTouch&&!B.touch&&f.ios)&&(r.addEventListener("mousedown",e.scrollbar.onDragStart,s),m.addEventListener("mousemove",e.scrollbar.onDragMove,s),m.addEventListener("mouseup",e.scrollbar.onDragEnd,o))):(r.addEventListener(i.start,e.scrollbar.onDragStart,s),m.addEventListener(i.move,e.scrollbar.onDragMove,s),m.addEventListener(i.end,e.scrollbar.onDragEnd,o))}},disableDraggable:function(){var e=this;if(e.params.scrollbar.el){var t=e.scrollbar,n=e.touchEvents,i=e.touchEventsDesktop,a=e.params,r=t.$el[0],s=!(!B.passiveListener||!a.passiveListeners)&&{passive:!1,capture:!1},o=!(!B.passiveListener||!a.passiveListeners)&&{passive:!0,capture:!1};B.touch||!B.pointerEvents&&!B.prefixedPointerEvents?(B.touch&&(r.removeEventListener(n.start,e.scrollbar.onDragStart,s),r.removeEventListener(n.move,e.scrollbar.onDragMove,s),r.removeEventListener(n.end,e.scrollbar.onDragEnd,o)),(a.simulateTouch&&!f.ios&&!f.android||a.simulateTouch&&!B.touch&&f.ios)&&(r.removeEventListener("mousedown",e.scrollbar.onDragStart,s),m.removeEventListener("mousemove",e.scrollbar.onDragMove,s),m.removeEventListener("mouseup",e.scrollbar.onDragEnd,o))):(r.removeEventListener(i.start,e.scrollbar.onDragStart,s),m.removeEventListener(i.move,e.scrollbar.onDragMove,s),m.removeEventListener(i.end,e.scrollbar.onDragEnd,o))}},init:function(){var e=this;if(e.params.scrollbar.el){var t=e.scrollbar,n=e.$el,i=e.params.scrollbar,a=D(i.el);e.params.uniqueNavElements&&"string"==typeof i.el&&1<a.length&&1===n.find(i.el).length&&(a=n.find(i.el));var r=a.find("."+e.params.scrollbar.dragClass);0===r.length&&(r=D('<div class="'+e.params.scrollbar.dragClass+'"></div>'),a.append(r)),F.extend(t,{$el:a,el:a[0],$dragEl:r,dragEl:r[0]}),i.draggable&&t.enableDraggable()}},destroy:function(){this.scrollbar.disableDraggable()}},X={setTransform:function(e,t){var n=this.rtl,i=D(e),a=n?-1:1,r=i.attr("data-swiper-parallax")||"0",s=i.attr("data-swiper-parallax-x"),o=i.attr("data-swiper-parallax-y"),l=i.attr("data-swiper-parallax-scale"),c=i.attr("data-swiper-parallax-opacity");if(s||o?(s=s||"0",o=o||"0"):this.isHorizontal()?(s=r,o="0"):(o=r,s="0"),s=0<=s.indexOf("%")?parseInt(s,10)*t*a+"%":s*t*a+"px",o=0<=o.indexOf("%")?parseInt(o,10)*t+"%":o*t+"px",null!=c){var d=c-(c-1)*(1-Math.abs(t));i[0].style.opacity=d}if(null==l)i.transform("translate3d("+s+", "+o+", 0px)");else{var u=l-(l-1)*(1-Math.abs(t));i.transform("translate3d("+s+", "+o+", 0px) scale("+u+")")}},setTranslate:function(){var i=this,e=i.$el,t=i.slides,a=i.progress,r=i.snapGrid;e.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(e,t){i.parallax.setTransform(t,a)}),t.each(function(e,t){var n=t.progress;1<i.params.slidesPerGroup&&"auto"!==i.params.slidesPerView&&(n+=Math.ceil(e/2)-a*(r.length-1)),n=Math.min(Math.max(n,-1),1),D(t).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(e,t){i.parallax.setTransform(t,n)})})},setTransition:function(a){void 0===a&&(a=this.params.speed),this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(e,t){var n=D(t),i=parseInt(n.attr("data-swiper-parallax-duration"),10)||a;0===a&&(i=0),n.transition(i)})}},Y={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,n=e.targetTouches[0].pageY,i=e.targetTouches[1].pageX,a=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(i-t,2)+Math.pow(a-n,2))},onGestureStart:function(e){var t=this,n=t.params.zoom,i=t.zoom,a=i.gesture;if(i.fakeGestureTouched=!1,i.fakeGestureMoved=!1,!B.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;i.fakeGestureTouched=!0,a.scaleStart=Y.getDistanceBetweenTouches(e)}a.$slideEl&&a.$slideEl.length||(a.$slideEl=D(e.target).closest(".swiper-slide"),0===a.$slideEl.length&&(a.$slideEl=t.slides.eq(t.activeIndex)),a.$imageEl=a.$slideEl.find("img, svg, canvas"),a.$imageWrapEl=a.$imageEl.parent("."+n.containerClass),a.maxRatio=a.$imageWrapEl.attr("data-swiper-zoom")||n.maxRatio,0!==a.$imageWrapEl.length)?(a.$imageEl.transition(0),t.zoom.isScaling=!0):a.$imageEl=void 0},onGestureChange:function(e){var t=this.params.zoom,n=this.zoom,i=n.gesture;if(!B.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;n.fakeGestureMoved=!0,i.scaleMove=Y.getDistanceBetweenTouches(e)}i.$imageEl&&0!==i.$imageEl.length&&(B.gestures?this.zoom.scale=e.scale*n.currentScale:n.scale=i.scaleMove/i.scaleStart*n.currentScale,n.scale>i.maxRatio&&(n.scale=i.maxRatio-1+Math.pow(n.scale-i.maxRatio+1,.5)),n.scale<t.minRatio&&(n.scale=t.minRatio+1-Math.pow(t.minRatio-n.scale+1,.5)),i.$imageEl.transform("translate3d(0,0,0) scale("+n.scale+")"))},onGestureEnd:function(e){var t=this.params.zoom,n=this.zoom,i=n.gesture;if(!B.gestures){if(!n.fakeGestureTouched||!n.fakeGestureMoved)return;if("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2&&!f.android)return;n.fakeGestureTouched=!1,n.fakeGestureMoved=!1}i.$imageEl&&0!==i.$imageEl.length&&(n.scale=Math.max(Math.min(n.scale,i.maxRatio),t.minRatio),i.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale("+n.scale+")"),n.currentScale=n.scale,n.isScaling=!1,1===n.scale&&(i.$slideEl=void 0))},onTouchStart:function(e){var t=this.zoom,n=t.gesture,i=t.image;n.$imageEl&&0!==n.$imageEl.length&&(i.isTouched||(f.android&&e.preventDefault(),i.isTouched=!0,i.touchesStart.x="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,i.touchesStart.y="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY))},onTouchMove:function(e){var t=this,n=t.zoom,i=n.gesture,a=n.image,r=n.velocity;if(i.$imageEl&&0!==i.$imageEl.length&&(t.allowClick=!1,a.isTouched&&i.$slideEl)){a.isMoved||(a.width=i.$imageEl[0].offsetWidth,a.height=i.$imageEl[0].offsetHeight,a.startX=F.getTranslate(i.$imageWrapEl[0],"x")||0,a.startY=F.getTranslate(i.$imageWrapEl[0],"y")||0,i.slideWidth=i.$slideEl[0].offsetWidth,i.slideHeight=i.$slideEl[0].offsetHeight,i.$imageWrapEl.transition(0),t.rtl&&(a.startX=-a.startX,a.startY=-a.startY));var s=a.width*n.scale,o=a.height*n.scale;if(!(s<i.slideWidth&&o<i.slideHeight)){if(a.minX=Math.min(i.slideWidth/2-s/2,0),a.maxX=-a.minX,a.minY=Math.min(i.slideHeight/2-o/2,0),a.maxY=-a.minY,a.touchesCurrent.x="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,a.touchesCurrent.y="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,!a.isMoved&&!n.isScaling){if(t.isHorizontal()&&(Math.floor(a.minX)===Math.floor(a.startX)&&a.touchesCurrent.x<a.touchesStart.x||Math.floor(a.maxX)===Math.floor(a.startX)&&a.touchesCurrent.x>a.touchesStart.x))return void(a.isTouched=!1);if(!t.isHorizontal()&&(Math.floor(a.minY)===Math.floor(a.startY)&&a.touchesCurrent.y<a.touchesStart.y||Math.floor(a.maxY)===Math.floor(a.startY)&&a.touchesCurrent.y>a.touchesStart.y))return void(a.isTouched=!1)}e.preventDefault(),e.stopPropagation(),a.isMoved=!0,a.currentX=a.touchesCurrent.x-a.touchesStart.x+a.startX,a.currentY=a.touchesCurrent.y-a.touchesStart.y+a.startY,a.currentX<a.minX&&(a.currentX=a.minX+1-Math.pow(a.minX-a.currentX+1,.8)),a.currentX>a.maxX&&(a.currentX=a.maxX-1+Math.pow(a.currentX-a.maxX+1,.8)),a.currentY<a.minY&&(a.currentY=a.minY+1-Math.pow(a.minY-a.currentY+1,.8)),a.currentY>a.maxY&&(a.currentY=a.maxY-1+Math.pow(a.currentY-a.maxY+1,.8)),r.prevPositionX||(r.prevPositionX=a.touchesCurrent.x),r.prevPositionY||(r.prevPositionY=a.touchesCurrent.y),r.prevTime||(r.prevTime=Date.now()),r.x=(a.touchesCurrent.x-r.prevPositionX)/(Date.now()-r.prevTime)/2,r.y=(a.touchesCurrent.y-r.prevPositionY)/(Date.now()-r.prevTime)/2,Math.abs(a.touchesCurrent.x-r.prevPositionX)<2&&(r.x=0),Math.abs(a.touchesCurrent.y-r.prevPositionY)<2&&(r.y=0),r.prevPositionX=a.touchesCurrent.x,r.prevPositionY=a.touchesCurrent.y,r.prevTime=Date.now(),i.$imageWrapEl.transform("translate3d("+a.currentX+"px, "+a.currentY+"px,0)")}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,n=e.image,i=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!n.isTouched||!n.isMoved)return n.isTouched=!1,void(n.isMoved=!1);n.isTouched=!1,n.isMoved=!1;var a=300,r=300,s=i.x*a,o=n.currentX+s,l=i.y*r,c=n.currentY+l;0!==i.x&&(a=Math.abs((o-n.currentX)/i.x)),0!==i.y&&(r=Math.abs((c-n.currentY)/i.y));var d=Math.max(a,r);n.currentX=o,n.currentY=c;var u=n.width*e.scale,p=n.height*e.scale;n.minX=Math.min(t.slideWidth/2-u/2,0),n.maxX=-n.minX,n.minY=Math.min(t.slideHeight/2-p/2,0),n.maxY=-n.minY,n.currentX=Math.max(Math.min(n.currentX,n.maxX),n.minX),n.currentY=Math.max(Math.min(n.currentY,n.maxY),n.minY),t.$imageWrapEl.transition(d).transform("translate3d("+n.currentX+"px, "+n.currentY+"px,0)")}},onTransitionEnd:function(){var e=this.zoom,t=e.gesture;t.$slideEl&&this.previousIndex!==this.activeIndex&&(t.$imageEl.transform("translate3d(0,0,0) scale(1)"),t.$imageWrapEl.transform("translate3d(0,0,0)"),t.$slideEl=void 0,t.$imageEl=void 0,t.$imageWrapEl=void 0,e.scale=1,e.currentScale=1)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var t,n,i,a,r,s,o,l,c,d,u,p,h,f,m,g,v=this,y=v.zoom,b=v.params.zoom,x=y.gesture,w=y.image;x.$slideEl||(x.$slideEl=v.clickedSlide?D(v.clickedSlide):v.slides.eq(v.activeIndex),x.$imageEl=x.$slideEl.find("img, svg, canvas"),x.$imageWrapEl=x.$imageEl.parent("."+b.containerClass)),x.$imageEl&&0!==x.$imageEl.length&&(x.$slideEl.addClass(""+b.zoomedSlideClass),n=void 0===w.touchesStart.x&&e?(t="touchend"===e.type?e.changedTouches[0].pageX:e.pageX,"touchend"===e.type?e.changedTouches[0].pageY:e.pageY):(t=w.touchesStart.x,w.touchesStart.y),y.scale=x.$imageWrapEl.attr("data-swiper-zoom")||b.maxRatio,y.currentScale=x.$imageWrapEl.attr("data-swiper-zoom")||b.maxRatio,e?(m=x.$slideEl[0].offsetWidth,g=x.$slideEl[0].offsetHeight,i=x.$slideEl.offset().left+m/2-t,a=x.$slideEl.offset().top+g/2-n,o=x.$imageEl[0].offsetWidth,l=x.$imageEl[0].offsetHeight,c=o*y.scale,d=l*y.scale,h=-(u=Math.min(m/2-c/2,0)),f=-(p=Math.min(g/2-d/2,0)),(r=i*y.scale)<u&&(r=u),h<r&&(r=h),(s=a*y.scale)<p&&(s=p),f<s&&(s=f)):s=r=0,x.$imageWrapEl.transition(300).transform("translate3d("+r+"px, "+s+"px,0)"),x.$imageEl.transition(300).transform("translate3d(0,0,0) scale("+y.scale+")"))},out:function(){var e=this,t=e.zoom,n=e.params.zoom,i=t.gesture;i.$slideEl||(i.$slideEl=e.clickedSlide?D(e.clickedSlide):e.slides.eq(e.activeIndex),i.$imageEl=i.$slideEl.find("img, svg, canvas"),i.$imageWrapEl=i.$imageEl.parent("."+n.containerClass)),i.$imageEl&&0!==i.$imageEl.length&&(t.scale=1,t.currentScale=1,i.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),i.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),i.$slideEl.removeClass(""+n.zoomedSlideClass),i.$slideEl=void 0)},enable:function(){var e=this,t=e.zoom;if(!t.enabled){t.enabled=!0;var n=!("touchstart"!==e.touchEvents.start||!B.passiveListener||!e.params.passiveListeners)&&{passive:!0,capture:!1};B.gestures?(e.$wrapperEl.on("gesturestart",".swiper-slide",t.onGestureStart,n),e.$wrapperEl.on("gesturechange",".swiper-slide",t.onGestureChange,n),e.$wrapperEl.on("gestureend",".swiper-slide",t.onGestureEnd,n)):"touchstart"===e.touchEvents.start&&(e.$wrapperEl.on(e.touchEvents.start,".swiper-slide",t.onGestureStart,n),e.$wrapperEl.on(e.touchEvents.move,".swiper-slide",t.onGestureChange,n),e.$wrapperEl.on(e.touchEvents.end,".swiper-slide",t.onGestureEnd,n)),e.$wrapperEl.on(e.touchEvents.move,"."+e.params.zoom.containerClass,t.onTouchMove)}},disable:function(){var e=this,t=e.zoom;if(t.enabled){e.zoom.enabled=!1;var n=!("touchstart"!==e.touchEvents.start||!B.passiveListener||!e.params.passiveListeners)&&{passive:!0,capture:!1};B.gestures?(e.$wrapperEl.off("gesturestart",".swiper-slide",t.onGestureStart,n),e.$wrapperEl.off("gesturechange",".swiper-slide",t.onGestureChange,n),e.$wrapperEl.off("gestureend",".swiper-slide",t.onGestureEnd,n)):"touchstart"===e.touchEvents.start&&(e.$wrapperEl.off(e.touchEvents.start,".swiper-slide",t.onGestureStart,n),e.$wrapperEl.off(e.touchEvents.move,".swiper-slide",t.onGestureChange,n),e.$wrapperEl.off(e.touchEvents.end,".swiper-slide",t.onGestureEnd,n)),e.$wrapperEl.off(e.touchEvents.move,"."+e.params.zoom.containerClass,t.onTouchMove)}}},W={loadInSlide:function(e,l){void 0===l&&(l=!0);var c=this,d=c.params.lazy;if(void 0!==e&&0!==c.slides.length){var u=c.virtual&&c.params.virtual.enabled?c.$wrapperEl.children("."+c.params.slideClass+'[data-swiper-slide-index="'+e+'"]'):c.slides.eq(e),t=u.find("."+d.elementClass+":not(."+d.loadedClass+"):not(."+d.loadingClass+")");!u.hasClass(d.elementClass)||u.hasClass(d.loadedClass)||u.hasClass(d.loadingClass)||(t=t.add(u[0])),0!==t.length&&t.each(function(e,t){var i=D(t);i.addClass(d.loadingClass);var a=i.attr("data-background"),r=i.attr("data-src"),s=i.attr("data-srcset"),o=i.attr("data-sizes");c.loadImage(i[0],r||a,s,o,!1,function(){if(null!=c&&c&&(!c||c.params)&&!c.destroyed){if(a?(i.css("background-image",'url("'+a+'")'),i.removeAttr("data-background")):(s&&(i.attr("srcset",s),i.removeAttr("data-srcset")),o&&(i.attr("sizes",o),i.removeAttr("data-sizes")),r&&(i.attr("src",r),i.removeAttr("data-src"))),i.addClass(d.loadedClass).removeClass(d.loadingClass),u.find("."+d.preloaderClass).remove(),c.params.loop&&l){var e=u.attr("data-swiper-slide-index");if(u.hasClass(c.params.slideDuplicateClass)){var t=c.$wrapperEl.children('[data-swiper-slide-index="'+e+'"]:not(.'+c.params.slideDuplicateClass+")");c.lazy.loadInSlide(t.index(),!1)}else{var n=c.$wrapperEl.children("."+c.params.slideDuplicateClass+'[data-swiper-slide-index="'+e+'"]');c.lazy.loadInSlide(n.index(),!1)}}c.emit("lazyImageReady",u[0],i[0])}}),c.emit("lazyImageLoad",u[0],i[0])})}},load:function(){var i=this,t=i.$wrapperEl,n=i.params,a=i.slides,e=i.activeIndex,r=i.virtual&&n.virtual.enabled,s=n.lazy,o=n.slidesPerView;function l(e){if(r){if(t.children("."+n.slideClass+'[data-swiper-slide-index="'+e+'"]').length)return 1}else if(a[e])return 1}function c(e){return r?D(e).attr("data-swiper-slide-index"):D(e).index()}if("auto"===o&&(o=0),i.lazy.initialImageLoaded||(i.lazy.initialImageLoaded=!0),i.params.watchSlidesVisibility)t.children("."+n.slideVisibleClass).each(function(e,t){var n=r?D(t).attr("data-swiper-slide-index"):D(t).index();i.lazy.loadInSlide(n)});else if(1<o)for(var d=e;d<e+o;d+=1)l(d)&&i.lazy.loadInSlide(d);else i.lazy.loadInSlide(e);if(s.loadPrevNext)if(1<o||s.loadPrevNextAmount&&1<s.loadPrevNextAmount){for(var u=s.loadPrevNextAmount,p=o,h=Math.min(e+p+Math.max(u,p),a.length),f=Math.max(e-Math.max(p,u),0),m=e+o;m<h;m+=1)l(m)&&i.lazy.loadInSlide(m);for(var g=f;g<e;g+=1)l(g)&&i.lazy.loadInSlide(g)}else{var v=t.children("."+n.slideNextClass);0<v.length&&i.lazy.loadInSlide(c(v));var y=t.children("."+n.slidePrevClass);0<y.length&&i.lazy.loadInSlide(c(y))}}},G={LinearSpline:function(e,t){var n,i,a,r,s;return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(s=function(e,t){for(i=-1,n=e.length;1<n-i;)e[a=n+i>>1]<=t?i=a:n=a;return n}(this.x,e),r=s-1,(e-this.x[r])*(this.y[s]-this.y[r])/(this.x[s]-this.x[r])+this.y[r]):0},this},getInterpolateFunction:function(e){var t=this;t.controller.spline||(t.controller.spline=t.params.loop?new G.LinearSpline(t.slidesGrid,e.slidesGrid):new G.LinearSpline(t.snapGrid,e.snapGrid))},setTranslate:function(e,t){var n,i,a=this,r=a.controller.control;function s(e){var t=a.rtlTranslate?-a.translate:a.translate;"slide"===a.params.controller.by&&(a.controller.getInterpolateFunction(e),i=-a.controller.spline.interpolate(-t)),i&&"container"!==a.params.controller.by||(n=(e.maxTranslate()-e.minTranslate())/(a.maxTranslate()-a.minTranslate()),i=(t-a.minTranslate())*n+e.minTranslate()),a.params.controller.inverse&&(i=e.maxTranslate()-i),e.updateProgress(i),e.setTranslate(i,a),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(r))for(var o=0;o<r.length;o+=1)r[o]!==t&&r[o]instanceof S&&s(r[o]);else r instanceof S&&t!==r&&s(r)},setTransition:function(t,e){var n,i=this,a=i.controller.control;function r(e){e.setTransition(t,i),0!==t&&(e.transitionStart(),e.params.autoHeight&&F.nextTick(function(){e.updateAutoHeight()}),e.$wrapperEl.transitionEnd(function(){a&&(e.params.loop&&"slide"===i.params.controller.by&&e.loopFix(),e.transitionEnd())}))}if(Array.isArray(a))for(n=0;n<a.length;n+=1)a[n]!==e&&a[n]instanceof S&&r(a[n]);else a instanceof S&&e!==a&&r(a)}},V={makeElFocusable:function(e){return e.attr("tabIndex","0"),e},addElRole:function(e,t){return e.attr("role",t),e},addElLabel:function(e,t){return e.attr("aria-label",t),e},disableEl:function(e){return e.attr("aria-disabled",!0),e},enableEl:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){var t=this,n=t.params.a11y;if(13===e.keyCode){var i=D(e.target);t.navigation&&t.navigation.$nextEl&&i.is(t.navigation.$nextEl)&&(t.isEnd&&!t.params.loop||t.slideNext(),t.isEnd?t.a11y.notify(n.lastSlideMessage):t.a11y.notify(n.nextSlideMessage)),t.navigation&&t.navigation.$prevEl&&i.is(t.navigation.$prevEl)&&(t.isBeginning&&!t.params.loop||t.slidePrev(),t.isBeginning?t.a11y.notify(n.firstSlideMessage):t.a11y.notify(n.prevSlideMessage)),t.pagination&&i.is("."+t.params.pagination.bulletClass)&&i[0].click()}},notify:function(e){var t=this.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},updateNavigation:function(){var e=this;if(!e.params.loop){var t=e.navigation,n=t.$nextEl,i=t.$prevEl;i&&0<i.length&&(e.isBeginning?e.a11y.disableEl(i):e.a11y.enableEl(i)),n&&0<n.length&&(e.isEnd?e.a11y.disableEl(n):e.a11y.enableEl(n))}},updatePagination:function(){var i=this,a=i.params.a11y;i.pagination&&i.params.pagination.clickable&&i.pagination.bullets&&i.pagination.bullets.length&&i.pagination.bullets.each(function(e,t){var n=D(t);i.a11y.makeElFocusable(n),i.a11y.addElRole(n,"button"),i.a11y.addElLabel(n,a.paginationBulletMessage.replace(/{{index}}/,n.index()+1))})},init:function(){var e=this;e.$el.append(e.a11y.liveRegion);var t,n,i=e.params.a11y;e.navigation&&e.navigation.$nextEl&&(t=e.navigation.$nextEl),e.navigation&&e.navigation.$prevEl&&(n=e.navigation.$prevEl),t&&(e.a11y.makeElFocusable(t),e.a11y.addElRole(t,"button"),e.a11y.addElLabel(t,i.nextSlideMessage),t.on("keydown",e.a11y.onEnterKey)),n&&(e.a11y.makeElFocusable(n),e.a11y.addElRole(n,"button"),e.a11y.addElLabel(n,i.prevSlideMessage),n.on("keydown",e.a11y.onEnterKey)),e.pagination&&e.params.pagination.clickable&&e.pagination.bullets&&e.pagination.bullets.length&&e.pagination.$el.on("keydown","."+e.params.pagination.bulletClass,e.a11y.onEnterKey)},destroy:function(){var e,t,n=this;n.a11y.liveRegion&&0<n.a11y.liveRegion.length&&n.a11y.liveRegion.remove(),n.navigation&&n.navigation.$nextEl&&(e=n.navigation.$nextEl),n.navigation&&n.navigation.$prevEl&&(t=n.navigation.$prevEl),e&&e.off("keydown",n.a11y.onEnterKey),t&&t.off("keydown",n.a11y.onEnterKey),n.pagination&&n.params.pagination.clickable&&n.pagination.bullets&&n.pagination.bullets.length&&n.pagination.$el.off("keydown","."+n.params.pagination.bulletClass,n.a11y.onEnterKey)}},_={init:function(){var e=this;if(e.params.history){if(!q.history||!q.history.pushState)return e.params.history.enabled=!1,void(e.params.hashNavigation.enabled=!0);var t=e.history;t.initialized=!0,t.paths=_.getPathValues(),(t.paths.key||t.paths.value)&&(t.scrollToSlide(0,t.paths.value,e.params.runCallbacksOnInit),e.params.history.replaceState||q.addEventListener("popstate",e.history.setHistoryPopState))}},destroy:function(){this.params.history.replaceState||q.removeEventListener("popstate",this.history.setHistoryPopState)},setHistoryPopState:function(){this.history.paths=_.getPathValues(),this.history.scrollToSlide(this.params.speed,this.history.paths.value,!1)},getPathValues:function(){var e=q.location.pathname.slice(1).split("/").filter(function(e){return""!==e}),t=e.length;return{key:e[t-2],value:e[t-1]}},setHistory:function(e,t){if(this.history.initialized&&this.params.history.enabled){var n=this.slides.eq(t),i=_.slugify(n.attr("data-history"));q.location.pathname.includes(e)||(i=e+"/"+i);var a=q.history.state;a&&a.value===i||(this.params.history.replaceState?q.history.replaceState({value:i},null,i):q.history.pushState({value:i},null,i))}},slugify:function(e){return e.toString().toLowerCase().replace(/\s+/g,"-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,n){var i=this;if(t)for(var a=0,r=i.slides.length;a<r;a+=1){var s=i.slides.eq(a);if(_.slugify(s.attr("data-history"))===t&&!s.hasClass(i.params.slideDuplicateClass)){var o=s.index();i.slideTo(o,e,n)}}else i.slideTo(0,e,n)}},U={onHashCange:function(){var e=this,t=m.location.hash.replace("#","");t!==e.slides.eq(e.activeIndex).attr("data-hash")&&e.slideTo(e.$wrapperEl.children("."+e.params.slideClass+'[data-hash="'+t+'"]').index())},setHash:function(){var e=this;if(e.hashNavigation.initialized&&e.params.hashNavigation.enabled)if(e.params.hashNavigation.replaceState&&q.history&&q.history.replaceState)q.history.replaceState(null,null,"#"+e.slides.eq(e.activeIndex).attr("data-hash")||"");else{var t=e.slides.eq(e.activeIndex),n=t.attr("data-hash")||t.attr("data-history");m.location.hash=n||""}},init:function(){var e=this;if(!(!e.params.hashNavigation.enabled||e.params.history&&e.params.history.enabled)){e.hashNavigation.initialized=!0;var t=m.location.hash.replace("#","");if(t)for(var n=0,i=e.slides.length;n<i;n+=1){var a=e.slides.eq(n);if((a.attr("data-hash")||a.attr("data-history"))===t&&!a.hasClass(e.params.slideDuplicateClass)){var r=a.index();e.slideTo(r,0,e.params.runCallbacksOnInit,!0)}}e.params.hashNavigation.watchState&&D(q).on("hashchange",e.hashNavigation.onHashCange)}},destroy:function(){this.params.hashNavigation.watchState&&D(q).off("hashchange",this.hashNavigation.onHashCange)}},K={run:function(){var e=this,t=e.slides.eq(e.activeIndex),n=e.params.autoplay.delay;t.attr("data-swiper-autoplay")&&(n=t.attr("data-swiper-autoplay")||e.params.autoplay.delay),e.autoplay.timeout=F.nextTick(function(){e.params.autoplay.reverseDirection?e.params.loop?(e.loopFix(),e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.isBeginning?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(e.slides.length-1,e.params.speed,!0,!0),e.emit("autoplay")):(e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.params.loop?(e.loopFix(),e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")):e.isEnd?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(0,e.params.speed,!0,!0),e.emit("autoplay")):(e.slideNext(e.params.speed,!0,!0),e.emit("autoplay"))},n)},start:function(){var e=this;return void 0===e.autoplay.timeout&&!e.autoplay.running&&(e.autoplay.running=!0,e.emit("autoplayStart"),e.autoplay.run(),!0)},stop:function(){var e=this;return!!e.autoplay.running&&void 0!==e.autoplay.timeout&&(e.autoplay.timeout&&(clearTimeout(e.autoplay.timeout),e.autoplay.timeout=void 0),e.autoplay.running=!1,e.emit("autoplayStop"),!0)},pause:function(e){var t=this;t.autoplay.running&&(t.autoplay.paused||(t.autoplay.timeout&&clearTimeout(t.autoplay.timeout),t.autoplay.paused=!0,0!==e&&t.params.autoplay.waitForTransition?(t.$wrapperEl[0].addEventListener("transitionend",t.autoplay.onTransitionEnd),t.$wrapperEl[0].addEventListener("webkitTransitionEnd",t.autoplay.onTransitionEnd)):(t.autoplay.paused=!1,t.autoplay.run())))}},Z={setTranslate:function(){for(var e=this,t=e.slides,n=0;n<t.length;n+=1){var i=e.slides.eq(n),a=-i[0].swiperSlideOffset;e.params.virtualTranslate||(a-=e.translate);var r=0;e.isHorizontal()||(r=a,a=0);var s=e.params.fadeEffect.crossFade?Math.max(1-Math.abs(i[0].progress),0):1+Math.min(Math.max(i[0].progress,-1),0);i.css({opacity:s}).transform("translate3d("+a+"px, "+r+"px, 0px)")}},setTransition:function(e){var n=this,t=n.slides,i=n.$wrapperEl;if(t.transition(e),n.params.virtualTranslate&&0!==e){var a=!1;t.transitionEnd(function(){if(!a&&n&&!n.destroyed){a=!0,n.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)i.trigger(e[t])}})}}},Q={setTranslate:function(){var e,t=this,n=t.$el,i=t.$wrapperEl,a=t.slides,r=t.width,s=t.height,o=t.rtlTranslate,l=t.size,c=t.params.cubeEffect,d=t.isHorizontal(),u=t.virtual&&t.params.virtual.enabled,p=0;c.shadow&&(d?(0===(e=i.find(".swiper-cube-shadow")).length&&(e=D('<div class="swiper-cube-shadow"></div>'),i.append(e)),e.css({height:r+"px"})):0===(e=n.find(".swiper-cube-shadow")).length&&(e=D('<div class="swiper-cube-shadow"></div>'),n.append(e)));for(var h=0;h<a.length;h+=1){var f=a.eq(h),m=h;u&&(m=parseInt(f.attr("data-swiper-slide-index"),10));var g=90*m,v=Math.floor(g/360);o&&(g=-g,v=Math.floor(-g/360));var y=Math.max(Math.min(f[0].progress,1),-1),b=0,x=0,w=0;m%4==0?(b=4*-v*l,w=0):(m-1)%4==0?(b=0,w=4*-v*l):(m-2)%4==0?(b=l+4*v*l,w=l):(m-3)%4==0&&(b=-l,w=3*l+4*l*v),o&&(b=-b),d||(x=b,b=0);var T="rotateX("+(d?0:-g)+"deg) rotateY("+(d?g:0)+"deg) translate3d("+b+"px, "+x+"px, "+w+"px)";if(y<=1&&-1<y&&(p=90*m+90*y,o&&(p=90*-m-90*y)),f.transform(T),c.slideShadows){var S=d?f.find(".swiper-slide-shadow-left"):f.find(".swiper-slide-shadow-top"),C=d?f.find(".swiper-slide-shadow-right"):f.find(".swiper-slide-shadow-bottom");0===S.length&&(S=D('<div class="swiper-slide-shadow-'+(d?"left":"top")+'"></div>'),f.append(S)),0===C.length&&(C=D('<div class="swiper-slide-shadow-'+(d?"right":"bottom")+'"></div>'),f.append(C)),S.length&&(S[0].style.opacity=Math.max(-y,0)),C.length&&(C[0].style.opacity=Math.max(y,0))}}if(i.css({"-webkit-transform-origin":"50% 50% -"+l/2+"px","-moz-transform-origin":"50% 50% -"+l/2+"px","-ms-transform-origin":"50% 50% -"+l/2+"px","transform-origin":"50% 50% -"+l/2+"px"}),c.shadow)if(d)e.transform("translate3d(0px, "+(r/2+c.shadowOffset)+"px, "+-r/2+"px) rotateX(90deg) rotateZ(0deg) scale("+c.shadowScale+")");else{var E=Math.abs(p)-90*Math.floor(Math.abs(p)/90),P=1.5-(Math.sin(2*E*Math.PI/360)/2+Math.cos(2*E*Math.PI/360)/2),k=c.shadowScale,M=c.shadowScale/P,$=c.shadowOffset;e.transform("scale3d("+k+", 1, "+M+") translate3d(0px, "+(s/2+$)+"px, "+-s/2/M+"px) rotateX(-90deg)")}var L=A.isSafari||A.isUiWebView?-l/2:0;i.transform("translate3d(0px,0,"+L+"px) rotateX("+(t.isHorizontal()?0:p)+"deg) rotateY("+(t.isHorizontal()?-p:0)+"deg)")},setTransition:function(e){var t=this.$el;this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),this.params.cubeEffect.shadow&&!this.isHorizontal()&&t.find(".swiper-cube-shadow").transition(e)}},J={setTranslate:function(){for(var e=this,t=e.slides,n=e.rtlTranslate,i=0;i<t.length;i+=1){var a=t.eq(i),r=a[0].progress;e.params.flipEffect.limitRotation&&(r=Math.max(Math.min(a[0].progress,1),-1));var s=-180*r,o=0,l=-a[0].swiperSlideOffset,c=0;if(e.isHorizontal()?n&&(s=-s):(c=l,o=-s,s=l=0),a[0].style.zIndex=-Math.abs(Math.round(r))+t.length,e.params.flipEffect.slideShadows){var d=e.isHorizontal()?a.find(".swiper-slide-shadow-left"):a.find(".swiper-slide-shadow-top"),u=e.isHorizontal()?a.find(".swiper-slide-shadow-right"):a.find(".swiper-slide-shadow-bottom");0===d.length&&(d=D('<div class="swiper-slide-shadow-'+(e.isHorizontal()?"left":"top")+'"></div>'),a.append(d)),0===u.length&&(u=D('<div class="swiper-slide-shadow-'+(e.isHorizontal()?"right":"bottom")+'"></div>'),a.append(u)),d.length&&(d[0].style.opacity=Math.max(-r,0)),u.length&&(u[0].style.opacity=Math.max(r,0))}a.transform("translate3d("+l+"px, "+c+"px, 0px) rotateX("+o+"deg) rotateY("+s+"deg)")}},setTransition:function(e){var n=this,t=n.slides,i=n.activeIndex,a=n.$wrapperEl;if(t.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),n.params.virtualTranslate&&0!==e){var r=!1;t.eq(i).transitionEnd(function(){if(!r&&n&&!n.destroyed){r=!0,n.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)a.trigger(e[t])}})}}},ee={setTranslate:function(){for(var e=this,t=e.width,n=e.height,i=e.slides,a=e.$wrapperEl,r=e.slidesSizesGrid,s=e.params.coverflowEffect,o=e.isHorizontal(),l=e.translate,c=o?t/2-l:n/2-l,d=o?s.rotate:-s.rotate,u=s.depth,p=0,h=i.length;p<h;p+=1){var f=i.eq(p),m=r[p],g=(c-f[0].swiperSlideOffset-m/2)/m*s.modifier,v=o?d*g:0,y=o?0:d*g,b=-u*Math.abs(g),x=o?0:s.stretch*g,w=o?s.stretch*g:0;Math.abs(w)<.001&&(w=0),Math.abs(x)<.001&&(x=0),Math.abs(b)<.001&&(b=0),Math.abs(v)<.001&&(v=0),Math.abs(y)<.001&&(y=0);var T="translate3d("+w+"px,"+x+"px,"+b+"px)  rotateX("+y+"deg) rotateY("+v+"deg)";if(f.transform(T),f[0].style.zIndex=1-Math.abs(Math.round(g)),s.slideShadows){var S=o?f.find(".swiper-slide-shadow-left"):f.find(".swiper-slide-shadow-top"),C=o?f.find(".swiper-slide-shadow-right"):f.find(".swiper-slide-shadow-bottom");0===S.length&&(S=D('<div class="swiper-slide-shadow-'+(o?"left":"top")+'"></div>'),f.append(S)),0===C.length&&(C=D('<div class="swiper-slide-shadow-'+(o?"right":"bottom")+'"></div>'),f.append(C)),S.length&&(S[0].style.opacity=0<g?g:0),C.length&&(C[0].style.opacity=0<-g?-g:0)}}(B.pointerEvents||B.prefixedPointerEvents)&&(a[0].style.perspectiveOrigin=c+"px 50%")},setTransition:function(e){this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}},te=[C,E,P,k,$,z,O,{name:"mousewheel",params:{mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarged:"container"}},create:function(){var e=this;F.extend(e,{mousewheel:{enabled:!1,enable:N.enable.bind(e),disable:N.disable.bind(e),handle:N.handle.bind(e),handleMouseEnter:N.handleMouseEnter.bind(e),handleMouseLeave:N.handleMouseLeave.bind(e),lastScrollTime:F.now()}})},on:{init:function(){this.params.mousewheel.enabled&&this.mousewheel.enable()},destroy:function(){this.mousewheel.enabled&&this.mousewheel.disable()}}},{name:"navigation",params:{navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock"}},create:function(){F.extend(this,{navigation:{init:H.init.bind(this),update:H.update.bind(this),destroy:H.destroy.bind(this)}})},on:{init:function(){this.navigation.init(),this.navigation.update()},toEdge:function(){this.navigation.update()},fromEdge:function(){this.navigation.update()},destroy:function(){this.navigation.destroy()},click:function(e){var t=this.navigation,n=t.$nextEl,i=t.$prevEl;!this.params.navigation.hideOnClick||D(e.target).is(i)||D(e.target).is(n)||(n&&n.toggleClass(this.params.navigation.hiddenClass),i&&i.toggleClass(this.params.navigation.hiddenClass))}}},{name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:function(e){return e},formatFractionTotal:function(e){return e},bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",progressbarOppositeClass:"swiper-pagination-progressbar-opposite",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){var e=this;F.extend(e,{pagination:{init:j.init.bind(e),render:j.render.bind(e),update:j.update.bind(e),destroy:j.destroy.bind(e),dynamicBulletIndex:0}})},on:{init:function(){this.pagination.init(),this.pagination.render(),this.pagination.update()},activeIndexChange:function(){!this.params.loop&&void 0!==this.snapIndex||this.pagination.update()},snapIndexChange:function(){this.params.loop||this.pagination.update()},slidesLengthChange:function(){this.params.loop&&(this.pagination.render(),this.pagination.update())},snapGridLengthChange:function(){this.params.loop||(this.pagination.render(),this.pagination.update())},destroy:function(){this.pagination.destroy()},click:function(e){var t=this;t.params.pagination.el&&t.params.pagination.hideOnClick&&0<t.pagination.$el.length&&!D(e.target).hasClass(t.params.pagination.bulletClass)&&t.pagination.$el.toggleClass(t.params.pagination.hiddenClass)}}},{name:"scrollbar",params:{scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock",dragClass:"swiper-scrollbar-drag"}},create:function(){var e=this;F.extend(e,{scrollbar:{init:R.init.bind(e),destroy:R.destroy.bind(e),updateSize:R.updateSize.bind(e),setTranslate:R.setTranslate.bind(e),setTransition:R.setTransition.bind(e),enableDraggable:R.enableDraggable.bind(e),disableDraggable:R.disableDraggable.bind(e),setDragPosition:R.setDragPosition.bind(e),onDragStart:R.onDragStart.bind(e),onDragMove:R.onDragMove.bind(e),onDragEnd:R.onDragEnd.bind(e),isTouched:!1,timeout:null,dragTimeout:null}})},on:{init:function(){this.scrollbar.init(),this.scrollbar.updateSize(),this.scrollbar.setTranslate()},update:function(){this.scrollbar.updateSize()},resize:function(){this.scrollbar.updateSize()},observerUpdate:function(){this.scrollbar.updateSize()},setTranslate:function(){this.scrollbar.setTranslate()},setTransition:function(e){this.scrollbar.setTransition(e)},destroy:function(){this.scrollbar.destroy()}}},{name:"parallax",params:{parallax:{enabled:!1}},create:function(){F.extend(this,{parallax:{setTransform:X.setTransform.bind(this),setTranslate:X.setTranslate.bind(this),setTransition:X.setTransition.bind(this)}})},on:{beforeInit:function(){this.params.parallax.enabled&&(this.params.watchSlidesProgress=!0)},init:function(){this.params.parallax&&this.parallax.setTranslate()},setTranslate:function(){this.params.parallax&&this.parallax.setTranslate()},setTransition:function(e){this.params.parallax&&this.parallax.setTransition(e)}}},{name:"zoom",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}},create:function(){var t=this,n={enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}};"onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach(function(e){n[e]=Y[e].bind(t)}),F.extend(t,{zoom:n})},on:{init:function(){this.params.zoom.enabled&&this.zoom.enable()},destroy:function(){this.zoom.disable()},touchStart:function(e){this.zoom.enabled&&this.zoom.onTouchStart(e)},touchEnd:function(e){this.zoom.enabled&&this.zoom.onTouchEnd(e)},doubleTap:function(e){this.params.zoom.enabled&&this.zoom.enabled&&this.params.zoom.toggle&&this.zoom.toggle(e)},transitionEnd:function(){this.zoom.enabled&&this.params.zoom.enabled&&this.zoom.onTransitionEnd()}}},{name:"lazy",params:{lazy:{enabled:!1,loadPrevNext:!1,loadPrevNextAmount:1,loadOnTransitionStart:!1,elementClass:"swiper-lazy",loadingClass:"swiper-lazy-loading",loadedClass:"swiper-lazy-loaded",preloaderClass:"swiper-lazy-preloader"}},create:function(){F.extend(this,{lazy:{initialImageLoaded:!1,load:W.load.bind(this),loadInSlide:W.loadInSlide.bind(this)}})},on:{beforeInit:function(){this.params.lazy.enabled&&this.params.preloadImages&&(this.params.preloadImages=!1)},init:function(){this.params.lazy.enabled&&!this.params.loop&&0===this.params.initialSlide&&this.lazy.load()},scroll:function(){this.params.freeMode&&!this.params.freeModeSticky&&this.lazy.load()},resize:function(){this.params.lazy.enabled&&this.lazy.load()},scrollbarDragMove:function(){this.params.lazy.enabled&&this.lazy.load()},transitionStart:function(){var e=this;e.params.lazy.enabled&&(e.params.lazy.loadOnTransitionStart||!e.params.lazy.loadOnTransitionStart&&!e.lazy.initialImageLoaded)&&e.lazy.load()},transitionEnd:function(){this.params.lazy.enabled&&!this.params.lazy.loadOnTransitionStart&&this.lazy.load()}}},{name:"controller",params:{controller:{control:void 0,inverse:!1,by:"slide"}},create:function(){F.extend(this,{controller:{control:this.params.controller.control,getInterpolateFunction:G.getInterpolateFunction.bind(this),setTranslate:G.setTranslate.bind(this),setTransition:G.setTransition.bind(this)}})},on:{update:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},resize:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},observerUpdate:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},setTranslate:function(e,t){this.controller.control&&this.controller.setTranslate(e,t)},setTransition:function(e,t){this.controller.control&&this.controller.setTransition(e,t)}}},{name:"a11y",params:{a11y:{enabled:!0,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}"}},create:function(){var t=this;F.extend(t,{a11y:{liveRegion:D('<span class="'+t.params.a11y.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>')}}),Object.keys(V).forEach(function(e){t.a11y[e]=V[e].bind(t)})},on:{init:function(){this.params.a11y.enabled&&(this.a11y.init(),this.a11y.updateNavigation())},toEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},fromEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},paginationUpdate:function(){this.params.a11y.enabled&&this.a11y.updatePagination()},destroy:function(){this.params.a11y.enabled&&this.a11y.destroy()}}},{name:"history",params:{history:{enabled:!1,replaceState:!1,key:"slides"}},create:function(){F.extend(this,{history:{init:_.init.bind(this),setHistory:_.setHistory.bind(this),setHistoryPopState:_.setHistoryPopState.bind(this),scrollToSlide:_.scrollToSlide.bind(this),destroy:_.destroy.bind(this)}})},on:{init:function(){this.params.history.enabled&&this.history.init()},destroy:function(){this.params.history.enabled&&this.history.destroy()},transitionEnd:function(){this.history.initialized&&this.history.setHistory(this.params.history.key,this.activeIndex)}}},{name:"hash-navigation",params:{hashNavigation:{enabled:!1,replaceState:!1,watchState:!1}},create:function(){F.extend(this,{hashNavigation:{initialized:!1,init:U.init.bind(this),destroy:U.destroy.bind(this),setHash:U.setHash.bind(this),onHashCange:U.onHashCange.bind(this)}})},on:{init:function(){this.params.hashNavigation.enabled&&this.hashNavigation.init()},destroy:function(){this.params.hashNavigation.enabled&&this.hashNavigation.destroy()},transitionEnd:function(){this.hashNavigation.initialized&&this.hashNavigation.setHash()}}},{name:"autoplay",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){var t=this;F.extend(t,{autoplay:{running:!1,paused:!1,run:K.run.bind(t),start:K.start.bind(t),stop:K.stop.bind(t),pause:K.pause.bind(t),onTransitionEnd:function(e){t&&!t.destroyed&&t.$wrapperEl&&e.target===this&&(t.$wrapperEl[0].removeEventListener("transitionend",t.autoplay.onTransitionEnd),t.$wrapperEl[0].removeEventListener("webkitTransitionEnd",t.autoplay.onTransitionEnd),t.autoplay.paused=!1,t.autoplay.running?t.autoplay.run():t.autoplay.stop())}}})},on:{init:function(){this.params.autoplay.enabled&&this.autoplay.start()},beforeTransitionStart:function(e,t){this.autoplay.running&&(t||!this.params.autoplay.disableOnInteraction?this.autoplay.pause(e):this.autoplay.stop())},sliderFirstMove:function(){this.autoplay.running&&(this.params.autoplay.disableOnInteraction?this.autoplay.stop():this.autoplay.pause())},destroy:function(){this.autoplay.running&&this.autoplay.stop()}}},{name:"effect-fade",params:{fadeEffect:{crossFade:!1}},create:function(){F.extend(this,{fadeEffect:{setTranslate:Z.setTranslate.bind(this),setTransition:Z.setTransition.bind(this)}})},on:{beforeInit:function(){if("fade"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"fade");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};F.extend(this.params,e),F.extend(this.originalParams,e)}},setTranslate:function(){"fade"===this.params.effect&&this.fadeEffect.setTranslate()},setTransition:function(e){"fade"===this.params.effect&&this.fadeEffect.setTransition(e)}}},{name:"effect-cube",params:{cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}},create:function(){F.extend(this,{cubeEffect:{setTranslate:Q.setTranslate.bind(this),setTransition:Q.setTransition.bind(this)}})},on:{beforeInit:function(){if("cube"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"cube"),this.classNames.push(this.params.containerModifierClass+"3d");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0};F.extend(this.params,e),F.extend(this.originalParams,e)}},setTranslate:function(){"cube"===this.params.effect&&this.cubeEffect.setTranslate()},setTransition:function(e){"cube"===this.params.effect&&this.cubeEffect.setTransition(e)}}},{name:"effect-flip",params:{flipEffect:{slideShadows:!0,limitRotation:!0}},create:function(){F.extend(this,{flipEffect:{setTranslate:J.setTranslate.bind(this),setTransition:J.setTransition.bind(this)}})},on:{beforeInit:function(){if("flip"===this.params.effect){this.classNames.push(this.params.containerModifierClass+"flip"),this.classNames.push(this.params.containerModifierClass+"3d");var e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0};F.extend(this.params,e),F.extend(this.originalParams,e)}},setTranslate:function(){"flip"===this.params.effect&&this.flipEffect.setTranslate()},setTransition:function(e){"flip"===this.params.effect&&this.flipEffect.setTransition(e)}}},{name:"effect-coverflow",params:{coverflowEffect:{rotate:50,stretch:0,depth:100,modifier:1,slideShadows:!0}},create:function(){F.extend(this,{coverflowEffect:{setTranslate:ee.setTranslate.bind(this),setTransition:ee.setTransition.bind(this)}})},on:{beforeInit:function(){"coverflow"===this.params.effect&&(this.classNames.push(this.params.containerModifierClass+"coverflow"),this.classNames.push(this.params.containerModifierClass+"3d"),this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},setTranslate:function(){"coverflow"===this.params.effect&&this.coverflowEffect.setTranslate()},setTransition:function(e){"coverflow"===this.params.effect&&this.coverflowEffect.setTransition(e)}}}];return void 0===S.use&&(S.use=S.Class.use,S.installModule=S.Class.installModule),S.use(te),S}),function(c,r,m,g){"use strict";function n(e){var t=e.currentTarget,n=e.data?e.data.options:{},i=e.data?e.data.items:[],a=m(t).attr("data-fancybox")||"",r=0;e.preventDefault(),e.stopPropagation(),a?(r=(i=i.length?i.filter('[data-fancybox="'+a+'"]'):m('[data-fancybox="'+a+'"]')).index(t))<0&&(r=0):i=[t],m.fancybox.open(i,n,r)}if(m){if(m.fn.fancybox)return m.error("fancyBox already initialized");var a={loop:!1,margin:[44,0],gutter:50,keyboard:!0,arrows:!0,infobar:!1,toolbar:!0,buttons:["slideShow","fullScreen","thumbs","close"],idleTime:4,smallBtn:"auto",protect:!1,modal:!1,image:{preload:"auto"},ajax:{settings:{data:{fancybox:!0}}},iframe:{tpl:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen allowtransparency="true" src=""></iframe>',preload:!0,css:{},attr:{scrolling:"auto"}},animationEffect:"zoom",animationDuration:366,zoomOpacity:"auto",transitionEffect:"fade",transitionDuration:366,slideClass:"",baseClass:"",baseTpl:'<div class="fancybox-container" role="dialog" tabindex="-1"><div class="fancybox-bg"></div><div class="fancybox-inner"><div class="fancybox-infobar"><button data-fancybox-prev title="{{PREV}}" class="fancybox-button fancybox-button--left"></button><div class="fancybox-infobar__body"><span data-fancybox-index></span>&nbsp;/&nbsp;<span data-fancybox-count></span></div><button data-fancybox-next title="{{NEXT}}" class="fancybox-button fancybox-button--right"></button></div><div class="fancybox-toolbar">{{BUTTONS}}</div><div class="fancybox-navigation"><button data-fancybox-prev title="{{PREV}}" class="fancybox-arrow fancybox-arrow--left" /><button data-fancybox-next title="{{NEXT}}" class="fancybox-arrow fancybox-arrow--right" /></div><div class="fancybox-stage"></div><div class="fancybox-caption-wrap"><div class="fancybox-caption"></div></div></div></div>',spinnerTpl:'<div class="fancybox-loading"></div>',errorTpl:'<div class="fancybox-error"><p>{{ERROR}}<p></div>',btnTpl:{slideShow:'<button data-fancybox-play class="fancybox-button fancybox-button--play" title="{{PLAY_START}}"></button>',fullScreen:'<button data-fancybox-fullscreen class="fancybox-button fancybox-button--fullscreen" title="{{FULL_SCREEN}}"></button>',thumbs:'<button data-fancybox-thumbs class="fancybox-button fancybox-button--thumbs" title="{{THUMBS}}"></button>',close:'<button data-fancybox-close class="fancybox-button fancybox-button--close" title="{{CLOSE}}"></button>',smallBtn:'<button data-fancybox-close class="fancybox-close-small" title="{{CLOSE}}"></button>'},parentEl:"body",autoFocus:!0,backFocus:!0,trapFocus:!0,fullScreen:{autoStart:!1},touch:{vertical:!0,momentum:!0},hash:null,media:{},slideShow:{autoStart:!1,speed:4e3},thumbs:{autoStart:!1,hideOnClose:!0},onInit:m.noop,beforeLoad:m.noop,afterLoad:m.noop,beforeShow:m.noop,afterShow:m.noop,beforeClose:m.noop,afterClose:m.noop,onActivate:m.noop,onDeactivate:m.noop,clickContent:function(e){return"image"===e.type&&"zoom"},clickSlide:"close",clickOutside:"close",dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1,mobile:{clickContent:function(e){return"image"===e.type&&"toggleControls"},clickSlide:function(e){return"image"===e.type?"toggleControls":"close"},dblclickContent:function(e){return"image"===e.type&&"zoom"},dblclickSlide:function(e){return"image"===e.type&&"zoom"}},lang:"en",i18n:{en:{CLOSE:"Close",NEXT:"Next",PREV:"Previous",ERROR:"The requested content cannot be loaded. <br/> Please try again later.",PLAY_START:"Start slideshow",PLAY_STOP:"Pause slideshow",FULL_SCREEN:"Full screen",THUMBS:"Thumbnails"},de:{CLOSE:"Schliessen",NEXT:"Weiter",PREV:"ZurÃ¼ck",ERROR:"Die angeforderten Daten konnten nicht geladen werden. <br/> Bitte versuchen Sie es spÃ¤ter nochmal.",PLAY_START:"Diaschau starten",PLAY_STOP:"Diaschau beenden",FULL_SCREEN:"Vollbild",THUMBS:"Vorschaubilder"}}},d=m(c),s=m(r),o=0,u=c.requestAnimationFrame||c.webkitRequestAnimationFrame||c.mozRequestAnimationFrame||c.oRequestAnimationFrame||function(e){return c.setTimeout(e,1e3/60)},p=function(){var e,t=r.createElement("fakeelement"),n={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(e in n)if(t.style[e]!==g)return n[e]}(),h=function(e){return e&&e.length&&e[0].offsetHeight},i=function(e,t,n){var i=this;i.opts=m.extend(!0,{index:n},a,t||{}),t&&m.isArray(t.buttons)&&(i.opts.buttons=t.buttons),i.id=i.opts.id||++o,i.group=[],i.currIndex=parseInt(i.opts.index,10)||0,i.prevIndex=null,i.prevPos=null,i.currPos=0,i.firstRun=null,i.createGroup(e),i.group.length&&(i.$lastFocus=m(r.activeElement).blur(),i.slides={},i.init(e))};m.extend(i.prototype,{init:function(){var e,t,n,i=this,a=i.group[i.currIndex].opts;i.scrollTop=s.scrollTop(),i.scrollLeft=s.scrollLeft(),m.fancybox.getInstance()||m.fancybox.isMobile||"hidden"===m("body").css("overflow")||(e=m("body").width(),m("html").addClass("fancybox-enabled"),1<(e=m("body").width()-e)&&m("head").append('<style id="fancybox-style-noscroll" type="text/css">.compensate-for-scrollbar, .fancybox-enabled body { margin-right: '+e+"px; }</style>")),n="",m.each(a.buttons,function(e,t){n+=a.btnTpl[t]||""}),t=m(i.translate(i,a.baseTpl.replace("{{BUTTONS}}",n))).addClass("fancybox-is-hidden").attr("id","fancybox-container-"+i.id).addClass(a.baseClass).data("FancyBox",i).prependTo(a.parentEl),i.$refs={container:t},["bg","inner","infobar","toolbar","stage","caption"].forEach(function(e){i.$refs[e]=t.find(".fancybox-"+e)}),(!a.arrows||i.group.length<2)&&t.find(".fancybox-navigation").remove(),a.infobar||i.$refs.infobar.remove(),a.toolbar||i.$refs.toolbar.remove(),i.trigger("onInit"),i.activate(),i.jumpTo(i.currIndex)},translate:function(e,t){var i=e.opts.i18n[e.opts.lang];return t.replace(/\{\{(\w+)\}\}/g,function(e,t){var n=i[t];return n===g?e:n})},createGroup:function(e){var c=this,t=m.makeArray(e);m.each(t,function(e,t){var n,i,a,r,s={},o={},l=[];m.isPlainObject(t)?o=(s=t).opts||t:"object"===m.type(t)&&m(t).length?(n=m(t),l=n.data(),o="options"in l?l.options:{},o="object"===m.type(o)?o:{},s.src="src"in l?l.src:o.src||n.attr("href"),["width","height","thumb","type","filter"].forEach(function(e){e in l&&(o[e]=l[e])}),"srcset"in l&&(o.image={srcset:l.srcset}),o.$orig=n,s.type||s.src||(s.type="inline",s.src=t)):s={type:"html",src:t+""},s.opts=m.extend(!0,{},c.opts,o),m.fancybox.isMobile&&(s.opts=m.extend(!0,{},s.opts,s.opts.mobile)),i=s.type||s.opts.type,a=s.src||"",!i&&a&&(a.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i)?i="image":a.match(/\.(pdf)((\?|#).*)?$/i)?i="pdf":"#"===a.charAt(0)&&(i="inline")),s.type=i,s.index=c.group.length,s.opts.$orig&&!s.opts.$orig.length&&delete s.opts.$orig,!s.opts.$thumb&&s.opts.$orig&&(s.opts.$thumb=s.opts.$orig.find("img:first")),s.opts.$thumb&&!s.opts.$thumb.length&&delete s.opts.$thumb,"function"===m.type(s.opts.caption)?s.opts.caption=s.opts.caption.apply(t,[c,s]):"caption"in l&&(s.opts.caption=l.caption),s.opts.caption=s.opts.caption===g?"":s.opts.caption+"","ajax"!==i||1<(r=a.split(/\s+/,2)).length&&(s.src=r.shift(),s.opts.filter=r.shift()),"auto"==s.opts.smallBtn&&(-1<m.inArray(i,["html","inline","ajax"])?(s.opts.toolbar=!1,s.opts.smallBtn=!0):s.opts.smallBtn=!1),"pdf"===i&&(s.type="iframe",s.opts.iframe.preload=!1),s.opts.modal&&(s.opts=m.extend(!0,s.opts,{infobar:0,toolbar:0,smallBtn:0,keyboard:0,slideShow:0,fullScreen:0,thumbs:0,touch:0,clickContent:!1,clickSlide:!1,clickOutside:!1,dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1})),c.group.push(s)})},addEvents:function(){var i=this;i.removeEvents(),i.$refs.container.on("click.fb-close","[data-fancybox-close]",function(e){e.stopPropagation(),e.preventDefault(),i.close(e)}).on("click.fb-prev touchend.fb-prev","[data-fancybox-prev]",function(e){e.stopPropagation(),e.preventDefault(),i.previous()}).on("click.fb-next touchend.fb-next","[data-fancybox-next]",function(e){e.stopPropagation(),e.preventDefault(),i.next()}),d.on("orientationchange.fb resize.fb",function(e){e&&e.originalEvent&&"resize"===e.originalEvent.type?u(function(){i.update()}):(i.$refs.stage.hide(),setTimeout(function(){i.$refs.stage.show(),i.update()},500))}),s.on("focusin.fb",function(e){var t=m.fancybox?m.fancybox.getInstance():null;t.isClosing||!t.current||!t.current.opts.trapFocus||m(e.target).hasClass("fancybox-container")||m(e.target).is(r)||t&&"fixed"!==m(e.target).css("position")&&!t.$refs.container.has(e.target).length&&(e.stopPropagation(),t.focus(),d.scrollTop(i.scrollTop).scrollLeft(i.scrollLeft))}),s.on("keydown.fb",function(e){var t=i.current,n=e.keyCode||e.which;if(t&&t.opts.keyboard&&!m(e.target).is("input")&&!m(e.target).is("textarea"))return 8===n||27===n?(e.preventDefault(),void i.close(e)):37===n||38===n?(e.preventDefault(),void i.previous()):39===n||40===n?(e.preventDefault(),void i.next()):void i.trigger("afterKeydown",e,n)}),i.group[i.currIndex].opts.idleTime&&(i.idleSecondsCounter=0,s.on("mousemove.fb-idle mouseenter.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle",function(){i.idleSecondsCounter=0,i.isIdle&&i.showControls(),i.isIdle=!1}),i.idleInterval=c.setInterval(function(){i.idleSecondsCounter++,i.idleSecondsCounter>=i.group[i.currIndex].opts.idleTime&&(i.isIdle=!0,i.idleSecondsCounter=0,i.hideControls())},1e3))},removeEvents:function(){d.off("orientationchange.fb resize.fb"),s.off("focusin.fb keydown.fb .fb-idle"),this.$refs.container.off(".fb-close .fb-prev .fb-next"),this.idleInterval&&(c.clearInterval(this.idleInterval),this.idleInterval=null)},previous:function(e){return this.jumpTo(this.currPos-1,e)},next:function(e){return this.jumpTo(this.currPos+1,e)},jumpTo:function(e,i){var t,n,a,r,s,o,l,c=this,d=c.group.length;if(!(c.isSliding||c.isClosing||c.isAnimating&&c.firstRun)){if(e=parseInt(e,10),!(n=c.current?c.current.opts.loop:c.opts.loop)&&(e<0||d<=e))return!1;if(t=c.firstRun=null===c.firstRun,!(d<2&&!t&&c.isSliding)){if(r=c.current,c.prevIndex=c.currIndex,c.prevPos=c.currPos,a=c.createSlide(e),1<d&&((n||0<a.index)&&c.createSlide(e-1),(n||a.index<d-1)&&c.createSlide(e+1)),c.current=a,c.currIndex=a.index,c.currPos=a.pos,c.trigger("beforeShow",t),c.updateControls(),o=m.fancybox.getTranslate(a.$slide),a.isMoved=(0!==o.left||0!==o.top)&&!a.$slide.hasClass("fancybox-animated"),a.forcedDuration=g,m.isNumeric(i)?a.forcedDuration=i:i=a.opts[t?"animationDuration":"transitionDuration"],i=parseInt(i,10),t)return a.opts.animationEffect&&i&&c.$refs.container.css("transition-duration",i+"ms"),c.$refs.container.removeClass("fancybox-is-hidden"),h(c.$refs.container),c.$refs.container.addClass("fancybox-is-open"),a.$slide.addClass("fancybox-slide--current"),c.loadSlide(a),void c.preload();m.each(c.slides,function(e,t){m.fancybox.stop(t.$slide)}),a.$slide.removeClass("fancybox-slide--next fancybox-slide--previous").addClass("fancybox-slide--current"),a.isMoved?(s=Math.round(a.$slide.width()),m.each(c.slides,function(e,t){var n=t.pos-a.pos;m.fancybox.animate(t.$slide,{top:0,left:n*s+n*t.opts.gutter},i,function(){t.$slide.removeAttr("style").removeClass("fancybox-slide--next fancybox-slide--previous"),t.pos===c.currPos&&(a.isMoved=!1,c.complete())})})):c.$refs.stage.children().removeAttr("style"),a.isLoaded?c.revealContent(a):c.loadSlide(a),c.preload(),r.pos!==a.pos&&(l="fancybox-slide--"+(r.pos>a.pos?"next":"previous"),r.$slide.removeClass("fancybox-slide--complete fancybox-slide--current fancybox-slide--next fancybox-slide--previous"),r.isComplete=!1,i&&(a.isMoved||a.opts.transitionEffect)&&(a.isMoved?r.$slide.addClass(l):(l="fancybox-animated "+l+" fancybox-fx-"+a.opts.transitionEffect,m.fancybox.animate(r.$slide,l,i,function(){r.$slide.removeClass(l).removeAttr("style")}))))}}},createSlide:function(e){var t,n,i=this;return n=(n=e%i.group.length)<0?i.group.length+n:n,!i.slides[e]&&i.group[n]&&(t=m('<div class="fancybox-slide"></div>').appendTo(i.$refs.stage),i.slides[e]=m.extend(!0,{},i.group[n],{pos:e,$slide:t,isLoaded:!1}),i.updateSlide(i.slides[e])),i.slides[e]},scaleToActual:function(e,t,n){var i,a,r,s,o,l=this,c=l.current,d=c.$content,u=parseInt(c.$slide.width(),10),p=parseInt(c.$slide.height(),10),h=c.width,f=c.height;"image"!=c.type||c.hasError||!d||l.isAnimating||(m.fancybox.stop(d),l.isAnimating=!0,e=e===g?.5*u:e,t=t===g?.5*p:t,s=h/(i=m.fancybox.getTranslate(d)).width,o=f/i.height,a=.5*u-.5*h,r=.5*p-.5*f,u<h&&(0<(a=i.left*s-(e*s-e))&&(a=0),a<u-h&&(a=u-h)),p<f&&(0<(r=i.top*o-(t*o-t))&&(r=0),r<p-f&&(r=p-f)),l.updateCursor(h,f),m.fancybox.animate(d,{top:r,left:a,scaleX:s,scaleY:o},n||330,function(){l.isAnimating=!1}),l.SlideShow&&l.SlideShow.isActive&&l.SlideShow.stop())},scaleToFit:function(e){var t,n=this,i=n.current,a=i.$content;"image"!=i.type||i.hasError||!a||n.isAnimating||(m.fancybox.stop(a),n.isAnimating=!0,t=n.getFitPos(i),n.updateCursor(t.width,t.height),m.fancybox.animate(a,{top:t.top,left:t.left,scaleX:t.width/a.width(),scaleY:t.height/a.height()},e||330,function(){n.isAnimating=!1}))},getFitPos:function(e){var t,n,i,a,r,s=e.$content,o=e.width,l=e.height,c=e.opts.margin;return!(!s||!s.length||!o&&!l)&&("number"===m.type(c)&&(c=[c,c]),2==c.length&&(c=[c[0],c[1],c[0],c[1]]),d.width()<800&&(c=[0,0,0,0]),t=parseInt(this.$refs.stage.width(),10)-(c[1]+c[3]),n=parseInt(this.$refs.stage.height(),10)-(c[0]+c[2]),i=Math.min(1,t/o,n/l),a=Math.floor(i*o),r=Math.floor(i*l),{top:Math.floor(.5*(n-r))+c[0],left:Math.floor(.5*(t-a))+c[3],width:a,height:r})},update:function(){var n=this;m.each(n.slides,function(e,t){n.updateSlide(t)})},updateSlide:function(e){var t=e.$content;t&&(e.width||e.height)&&(m.fancybox.stop(t),m.fancybox.setTranslate(t,this.getFitPos(e)),e.pos===this.currPos&&this.updateCursor()),e.$slide.trigger("refresh"),this.trigger("onUpdate",e)},updateCursor:function(e,t){var n=this.$refs.container.removeClass("fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-drag fancybox-can-zoomOut");this.current&&!this.isClosing&&(this.isZoomable()?(n.addClass("fancybox-is-zoomable"),(e!==g&&t!==g?e<this.current.width&&t<this.current.height:this.isScaledDown())?n.addClass("fancybox-can-zoomIn"):this.current.opts.touch?n.addClass("fancybox-can-drag"):n.addClass("fancybox-can-zoomOut")):this.current.opts.touch&&n.addClass("fancybox-can-drag"))},isZoomable:function(){var e,t=this.current;if(t&&!this.isClosing)return!!("image"===t.type&&t.isLoaded&&!t.hasError&&("zoom"===t.opts.clickContent||m.isFunction(t.opts.clickContent)&&"zoom"===t.opts.clickContent(t))&&(e=this.getFitPos(t),t.width>e.width||t.height>e.height))},isScaledDown:function(){var e=this.current,t=e.$content,n=!1;return t&&(n=(n=m.fancybox.getTranslate(t)).width<e.width||n.height<e.height),n},canPan:function(){var e=this.current,t=e.$content,n=!1;return t&&(n=this.getFitPos(e),n=1<Math.abs(t.width()-n.width)||1<Math.abs(t.height()-n.height)),n},loadSlide:function(n){var e,t,i,a=this;if(!n.isLoading&&!n.isLoaded){switch(n.isLoading=!0,a.trigger("beforeLoad",n),e=n.type,(t=n.$slide).off("refresh").trigger("onReset").addClass("fancybox-slide--"+(e||"unknown")).addClass(n.opts.slideClass),e){case"image":a.setImage(n);break;case"iframe":a.setIframe(n);break;case"html":a.setContent(n,n.src||n.content);break;case"inline":m(n.src).length?a.setContent(n,m(n.src)):a.setError(n);break;case"ajax":a.showLoading(n),i=m.ajax(m.extend({},n.opts.ajax.settings,{url:n.src,success:function(e,t){"success"===t&&a.setContent(n,e)},error:function(e,t){e&&"abort"!==t&&a.setError(n)}})),t.one("onReset",function(){i.abort()});break;default:a.setError(n)}return!0}},setImage:function(e){var t,n,i,a,r=this,s=e.opts.image.srcset;if(s){i=c.devicePixelRatio||1,a=c.innerWidth*i,(n=s.split(",").map(function(e){var i={};return e.trim().split(/\s+/).forEach(function(e,t){var n=parseInt(e.substring(0,e.length-1),10);return 0===t?i.url=e:void(n&&(i.value=n,i.postfix=e[e.length-1]))}),i})).sort(function(e,t){return e.value-t.value});for(var o=0;o<n.length;o++){var l=n[o];if("w"===l.postfix&&l.value>=a||"x"===l.postfix&&l.value>=i){t=l;break}}!t&&n.length&&(t=n[n.length-1]),t&&(e.src=t.url,e.width&&e.height&&"w"==t.postfix&&(e.height=e.width/e.height*t.value,e.width=t.value))}e.$content=m('<div class="fancybox-image-wrap"></div>').addClass("fancybox-is-hidden").appendTo(e.$slide),!1!==e.opts.preload&&e.opts.width&&e.opts.height&&(e.opts.thumb||e.opts.$thumb)?(e.width=e.opts.width,e.height=e.opts.height,e.$ghost=m("<img />").one("error",function(){m(this).remove(),e.$ghost=null,r.setBigImage(e)}).one("load",function(){r.afterLoad(e),r.setBigImage(e)}).addClass("fancybox-image").appendTo(e.$content).attr("src",e.opts.thumb||e.opts.$thumb.attr("src"))):r.setBigImage(e)},setBigImage:function(e){var t=this,n=m("<img />");e.$image=n.one("error",function(){t.setError(e)}).one("load",function(){clearTimeout(e.timouts),e.timouts=null,t.isClosing||(e.width=this.naturalWidth,e.height=this.naturalHeight,e.opts.image.srcset&&n.attr("sizes","100vw").attr("srcset",e.opts.image.srcset),t.hideLoading(e),e.$ghost?e.timouts=setTimeout(function(){e.timouts=null,e.$ghost.hide()},Math.min(300,Math.max(1e3,e.height/1600))):t.afterLoad(e))}).addClass("fancybox-image").attr("src",e.src).appendTo(e.$content),n[0].complete?n.trigger("load"):n[0].error?n.trigger("error"):e.timouts=setTimeout(function(){n[0].complete||e.hasError||t.showLoading(e)},100)},setIframe:function(r){var s,t=this,o=r.opts.iframe,e=r.$slide;r.$content=m('<div class="fancybox-content'+(o.preload?" fancybox-is-hidden":"")+'"></div>').css(o.css).appendTo(e),s=m(o.tpl.replace(/\{rnd\}/g,(new Date).getTime())).attr(o.attr).appendTo(r.$content),o.preload?(t.showLoading(r),s.on("load.fb error.fb",function(e){this.isReady=1,r.$slide.trigger("refresh"),t.afterLoad(r)}),e.on("refresh.fb",function(){var e,t,n,i,a=r.$content;if(1===s[0].isReady){try{e=s.contents().find("body")}catch(e){}e&&e.length&&(o.css.width===g||o.css.height===g)&&(t=s[0].contentWindow.document.documentElement.scrollWidth,n=Math.ceil(e.outerWidth(!0)+(a.width()-t)),i=Math.ceil(e.outerHeight(!0)),a.css({width:o.css.width===g?n+(a.outerWidth()-a.innerWidth()):o.css.width,height:o.css.height===g?i+(a.outerHeight()-a.innerHeight()):o.css.height})),a.removeClass("fancybox-is-hidden")}})):this.afterLoad(r),s.attr("src",r.src),!0===r.opts.smallBtn&&r.$content.prepend(t.translate(r,r.opts.btnTpl.smallBtn)),e.one("onReset",function(){try{m(this).find("iframe").hide().attr("src","//about:blank")}catch(e){}m(this).empty(),r.isLoaded=!1})},setContent:function(e,t){var n;this.isClosing||(this.hideLoading(e),e.$slide.empty(),(n=t)&&n.hasOwnProperty&&n instanceof m&&t.parent().length?(t.parent(".fancybox-slide--inline").trigger("onReset"),e.$placeholder=m("<div></div>").hide().insertAfter(t),t.css("display","inline-block")):e.hasError||("string"!==m.type(t)||3===(t=m("<div>").append(m.trim(t)).contents())[0].nodeType&&(t=m("<div>").html(t)),e.opts.filter&&(t=m("<div>").html(t).find(e.opts.filter))),e.$slide.one("onReset",function(){e.$placeholder&&(e.$placeholder.after(t.hide()).remove(),e.$placeholder=null),e.$smallBtn&&(e.$smallBtn.remove(),e.$smallBtn=null),e.hasError||(m(this).empty(),e.isLoaded=!1)}),e.$content=m(t).appendTo(e.$slide),e.opts.smallBtn&&!e.$smallBtn&&(e.$smallBtn=m(this.translate(e,e.opts.btnTpl.smallBtn)).appendTo(e.$content)),this.afterLoad(e))},setError:function(e){e.hasError=!0,e.$slide.removeClass("fancybox-slide--"+e.type),this.setContent(e,this.translate(e,e.opts.errorTpl))},showLoading:function(e){(e=e||this.current)&&!e.$spinner&&(e.$spinner=m(this.opts.spinnerTpl).appendTo(e.$slide))},hideLoading:function(e){(e=e||this.current)&&e.$spinner&&(e.$spinner.remove(),delete e.$spinner)},afterLoad:function(e){this.isClosing||(e.isLoading=!1,e.isLoaded=!0,this.trigger("afterLoad",e),this.hideLoading(e),e.opts.protect&&e.$content&&!e.hasError&&(e.$content.on("contextmenu.fb",function(e){return 2==e.button&&e.preventDefault(),!0}),"image"===e.type&&m('<div class="fancybox-spaceball"></div>').appendTo(e.$content)),this.revealContent(e))},revealContent:function(t){var e,n,i,a,r,s=this,o=t.$slide,l=!1;return e=t.opts[s.firstRun?"animationEffect":"transitionEffect"],i=t.opts[s.firstRun?"animationDuration":"transitionDuration"],i=parseInt(t.forcedDuration===g?i:t.forcedDuration,10),!t.isMoved&&t.pos===s.currPos&&i||(e=!1),"zoom"!==e||t.pos===s.currPos&&i&&"image"===t.type&&!t.hasError&&(l=s.getThumbPos(t))||(e="fade"),"zoom"===e?((r=s.getFitPos(t)).scaleX=Math.round(r.width/l.width*100)/100,r.scaleY=Math.round(r.height/l.height*100)/100,delete r.width,delete r.height,"auto"==(a=t.opts.zoomOpacity)&&(a=.1<Math.abs(t.width/t.height-l.width/l.height)),a&&(l.opacity=.1,r.opacity=1),m.fancybox.setTranslate(t.$content.removeClass("fancybox-is-hidden"),l),h(t.$content),void m.fancybox.animate(t.$content,r,i,function(){s.complete()})):(s.updateSlide(t),e?(m.fancybox.stop(o),n="fancybox-animated fancybox-slide--"+(t.pos>s.prevPos?"next":"previous")+" fancybox-fx-"+e,o.removeAttr("style").removeClass("fancybox-slide--current fancybox-slide--next fancybox-slide--previous").addClass(n),t.$content.removeClass("fancybox-is-hidden"),h(o),void m.fancybox.animate(o,"fancybox-slide--current",i,function(e){o.removeClass(n).removeAttr("style"),t.pos===s.currPos&&s.complete()},!0)):(h(o),t.$content.removeClass("fancybox-is-hidden"),void(t.pos===s.currPos&&s.complete())))},getThumbPos:function(e){var t,n=!1,i=e.opts.$thumb,a=i?i.offset():0;return a&&i[0].ownerDocument===r&&function(e){for(var t=e[0],i=t.getBoundingClientRect(),n=[];null!==t.parentElement;)"hidden"!==m(t.parentElement).css("overflow")&&"auto"!==m(t.parentElement).css("overflow")||n.push(t.parentElement.getBoundingClientRect()),t=t.parentElement;return n.every(function(e){var t=Math.min(i.right,e.right)-Math.max(i.left,e.left),n=Math.min(i.bottom,e.bottom)-Math.max(i.top,e.top);return 0<t&&0<n})&&0<i.bottom&&0<i.right&&i.left<m(c).width()&&i.top<m(c).height()}(i)&&(t=this.$refs.stage.offset(),n={top:a.top-t.top+parseFloat(i.css("border-top-width")||0),left:a.left-t.left+parseFloat(i.css("border-left-width")||0),width:i.width(),height:i.height(),scaleX:1,scaleY:1}),n},complete:function(){var n=this,e=n.current,i={};e.isMoved||!e.isLoaded||e.isComplete||(e.isComplete=!0,e.$slide.siblings().trigger("onReset"),h(e.$slide),e.$slide.addClass("fancybox-slide--complete"),m.each(n.slides,function(e,t){t.pos>=n.currPos-1&&t.pos<=n.currPos+1?i[t.pos]=t:t&&(m.fancybox.stop(t.$slide),t.$slide.unbind().remove())}),n.slides=i,n.updateCursor(),n.trigger("afterShow"),(m(r.activeElement).is("[disabled]")||e.opts.autoFocus&&"image"!=e.type&&"iframe"!==e.type)&&n.focus())},preload:function(){var e,t;this.group.length<2||(e=this.slides[this.currPos+1],t=this.slides[this.currPos-1],e&&"image"===e.type&&this.loadSlide(e),t&&"image"===t.type&&this.loadSlide(t))},focus:function(){var e,t=this.current;this.isClosing||(e=(e=t&&t.isComplete?t.$slide.find("button,:input,[tabindex],a").filter(":not([disabled]):visible:first"):null)&&e.length?e:this.$refs.container).focus()},activate:function(){var t=this;m(".fancybox-container").each(function(){var e=m(this).data("FancyBox");e&&e.uid!==t.uid&&!e.isClosing&&e.trigger("onDeactivate")}),t.current&&(0<t.$refs.container.index()&&t.$refs.container.prependTo(r.body),t.updateControls()),t.trigger("onActivate"),t.addEvents()},close:function(e,t){function n(){c.cleanUp(e)}var i,a,r,s,o,l,c=this,d=c.current;return!c.isClosing&&(!(c.isClosing=!0)===c.trigger("beforeClose",e)?(c.isClosing=!1,u(function(){c.update()}),!1):(c.removeEvents(),d.timouts&&clearTimeout(d.timouts),r=d.$content,i=d.opts.animationEffect,a=m.isNumeric(t)?t:i?d.opts.animationDuration:0,d.$slide.off(p).removeClass("fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated"),d.$slide.siblings().trigger("onReset").remove(),a&&c.$refs.container.removeClass("fancybox-is-open").addClass("fancybox-is-closing"),c.hideLoading(d),c.hideControls(),c.updateCursor(),"zoom"!==i||!0!==e&&r&&a&&"image"===d.type&&!d.hasError&&(l=c.getThumbPos(d))||(i="fade"),"zoom"===i?(m.fancybox.stop(r),(o=m.fancybox.getTranslate(r)).width=o.width*o.scaleX,o.height=o.height*o.scaleY,"auto"==(s=d.opts.zoomOpacity)&&(s=.1<Math.abs(d.width/d.height-l.width/l.height)),s&&(l.opacity=0),o.scaleX=o.width/l.width,o.scaleY=o.height/l.height,o.width=l.width,o.height=l.height,m.fancybox.setTranslate(d.$content,o),m.fancybox.animate(d.$content,l,a,n)):i&&a?!0===e?setTimeout(n,a):m.fancybox.animate(d.$slide.removeClass("fancybox-slide--current"),"fancybox-animated fancybox-slide--previous fancybox-fx-"+i,a,n):n(),!0))},cleanUp:function(e){var t;this.current.$slide.trigger("onReset"),this.$refs.container.empty().remove(),this.trigger("afterClose",e),this.$lastFocus&&!this.current.focusBack&&this.$lastFocus.focus(),this.current=null,(t=m.fancybox.getInstance())?t.activate():(d.scrollTop(this.scrollTop).scrollLeft(this.scrollLeft),m("html").removeClass("fancybox-enabled"),m("#fancybox-style-noscroll").remove())},trigger:function(e,t){var n,i=Array.prototype.slice.call(arguments,1),a=t&&t.opts?t:this.current;return a?i.unshift(a):a=this,i.unshift(this),m.isFunction(a.opts[e])&&(n=a.opts[e].apply(a,i)),!1===n?n:void("afterClose"===e?s.trigger(e+".fb",i):this.$refs.container.trigger(e+".fb",i))},updateControls:function(){var e=this.current,t=e.index,n=e.opts,i=n.caption,a=this.$refs.caption;e.$slide.trigger("refresh"),this.$caption=i&&i.length?a.html(i):null,this.isHiddenControls||this.showControls(),m("[data-fancybox-count]").html(this.group.length),m("[data-fancybox-index]").html(t+1),m("[data-fancybox-prev]").prop("disabled",!n.loop&&t<=0),m("[data-fancybox-next]").prop("disabled",!n.loop&&t>=this.group.length-1)},hideControls:function(){this.isHiddenControls=!0,this.$refs.container.removeClass("fancybox-show-infobar fancybox-show-toolbar fancybox-show-caption fancybox-show-nav")},showControls:function(){var e=this.current?this.current.opts:this.opts,t=this.$refs.container;this.isHiddenControls=!1,this.idleSecondsCounter=0,t.toggleClass("fancybox-show-toolbar",!(!e.toolbar||!e.buttons)).toggleClass("fancybox-show-infobar",!!(e.infobar&&1<this.group.length)).toggleClass("fancybox-show-nav",!!(e.arrows&&1<this.group.length)).toggleClass("fancybox-is-modal",!!e.modal),this.$caption?t.addClass("fancybox-show-caption "):t.removeClass("fancybox-show-caption")},toggleControls:function(){this.isHiddenControls?this.showControls():this.hideControls()}}),m.fancybox={version:"3.1.20",defaults:a,getInstance:function(e){var t=m('.fancybox-container:not(".fancybox-is-closing"):first').data("FancyBox"),n=Array.prototype.slice.call(arguments,1);return t instanceof i&&("string"===m.type(e)?t[e].apply(t,n):"function"===m.type(e)&&e.apply(t,n),t)},open:function(e,t,n){return new i(e,t,n)},close:function(e){var t=this.getInstance();t&&(t.close(),!0===e&&this.close())},destroy:function(){this.close(!0),s.off("click.fb-start")},isMobile:r.createTouch!==g&&/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent),use3d:(e=r.createElement("div"),c.getComputedStyle&&c.getComputedStyle(e).getPropertyValue("transform")&&!(r.documentMode&&r.documentMode<11)),getTranslate:function(e){var t;if(!e||!e.length)return!1;if((t=(t=e.eq(0).css("transform"))&&-1!==t.indexOf("matrix")?(t=(t=t.split("(")[1]).split(")")[0]).split(","):[]).length)t=(t=10<t.length?[t[13],t[12],t[0],t[5]]:[t[5],t[4],t[0],t[3]]).map(parseFloat);else{t=[0,0,1,1];var n=/\.*translate\((.*)px,(.*)px\)/i.exec(e.eq(0).attr("style"));n&&(t[0]=parseFloat(n[2]),t[1]=parseFloat(n[1]))}return{top:t[0],left:t[1],scaleX:t[2],scaleY:t[3],opacity:parseFloat(e.css("opacity")),width:e.width(),height:e.height()}},setTranslate:function(e,t){var n="",i={};if(e&&t)return t.left===g&&t.top===g||(n=(t.left===g?e.position().left:t.left)+"px, "+(t.top===g?e.position().top:t.top)+"px",n=this.use3d?"translate3d("+n+", 0px)":"translate("+n+")"),t.scaleX!==g&&t.scaleY!==g&&(n=(n.length?n+" ":"")+"scale("+t.scaleX+", "+t.scaleY+")"),n.length&&(i.transform=n),t.opacity!==g&&(i.opacity=t.opacity),t.width!==g&&(i.width=t.width),t.height!==g&&(i.height=t.height),e.css(i)},animate:function(t,n,e,i,a){var r=p||"transitionend";m.isFunction(e)&&(i=e,e=null),m.isPlainObject(n)||t.removeAttr("style"),t.on(r,function(e){e&&e.originalEvent&&(!t.is(e.originalEvent.target)||"z-index"==e.originalEvent.propertyName)||(t.off(r),m.isPlainObject(n)?n.scaleX!==g&&n.scaleY!==g&&(t.css("transition-duration","0ms"),n.width=t.width()*n.scaleX,n.height=t.height()*n.scaleY,n.scaleX=1,n.scaleY=1,m.fancybox.setTranslate(t,n)):!0!==a&&t.removeClass(n),m.isFunction(i)&&i(e))}),m.isNumeric(e)&&t.css("transition-duration",e+"ms"),m.isPlainObject(n)?m.fancybox.setTranslate(t,n):t.addClass(n),t.data("timer",setTimeout(function(){t.trigger("transitionend")},e+16))},stop:function(e){clearTimeout(e.data("timer")),e.off(p)}},m.fn.fancybox=function(e){var t;return(t=(e=e||{}).selector||!1)?m("body").off("click.fb-start",t).on("click.fb-start",t,{items:m(t),options:e},n):this.off("click.fb-start").on("click.fb-start",{items:this,options:e},n),this},s.on("click.fb-start","[data-fancybox]",n)}var e}(window,document,window.jQuery),function(h){"use strict";function f(n,e,t){if(n)return t=t||"","object"===h.type(t)&&(t=h.param(t,!0)),h.each(e,function(e,t){n=n.replace("$"+e,t||"")}),t.length&&(n+=(0<n.indexOf("?")?"&":"?")+t),n}var n={youtube:{matcher:/(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*))(.*)/i,params:{autoplay:1,autohide:1,fs:1,rel:0,hd:1,wmode:"transparent",enablejsapi:1,html5:1},paramPlace:8,type:"iframe",url:"//www.youtube.com/embed/$4",thumb:"//img.youtube.com/vi/$4/hqdefault.jpg"},vimeo:{matcher:/^.+vimeo.com\/(.*\/)?([\d]+)(.*)?/,params:{autoplay:1,hd:1,show_title:1,show_byline:1,show_portrait:0,fullscreen:1,api:1},paramPlace:3,type:"iframe",url:"//player.vimeo.com/video/$2"},metacafe:{matcher:/metacafe.com\/watch\/(\d+)\/(.*)?/,type:"iframe",url:"//www.metacafe.com/embed/$1/?ap=1"},dailymotion:{matcher:/dailymotion.com\/video\/(.*)\/?(.*)/,params:{additionalInfos:0,autoStart:1},type:"iframe",url:"//www.dailymotion.com/embed/video/$1"},vine:{matcher:/vine.co\/v\/([a-zA-Z0-9\?\=\-]+)/,type:"iframe",url:"//vine.co/v/$1/embed/simple"},instagram:{matcher:/(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,type:"image",url:"//$1/p/$2/media/?size=l"},google_maps:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(((maps\/(place\/(.*)\/)?\@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?/i,type:"iframe",url:function(e){return"//maps.google."+e[2]+"/?ll="+(e[9]?e[9]+"&z="+Math.floor(e[10])+(e[12]?e[12].replace(/^\//,"&"):""):e[12])+"&output="+(e[12]&&0<e[12].indexOf("layer=c")?"svembed":"embed")}}};h(document).on("onInit.fb",function(e,t){h.each(t.group,function(e,a){var t,r,s,o,l,c,d,u=a.src||"",p=!1;a.type||(t=h.extend(!0,{},n,a.opts.media),h.each(t,function(e,t){if(s=u.match(t.matcher),c={},d=e,s){if(p=t.type,t.paramPlace&&s[t.paramPlace]){"?"==(l=s[t.paramPlace])[0]&&(l=l.substring(1)),l=l.split("&");for(var n=0;n<l.length;++n){var i=l[n].split("=",2);2==i.length&&(c[i[0]]=decodeURIComponent(i[1].replace(/\+/g," ")))}}return o=h.extend(!0,{},t.params,a.opts[e],c),u="function"===h.type(t.url)?t.url.call(this,s,o,a):f(t.url,s,o),r="function"===h.type(t.thumb)?t.thumb.call(this,s,o,a):f(t.thumb,s),"vimeo"===d&&(u=u.replace("&%23","#")),!1}}),p?(a.src=u,a.type=p,a.opts.thumb||a.opts.$thumb&&a.opts.$thumb.length||(a.opts.thumb=r),"iframe"===p&&(h.extend(!0,a.opts,{iframe:{preload:!1,attr:{scrolling:"no"}}}),a.contentProvider=d,a.opts.slideClass+=" fancybox-slide--"+("google_maps"==d?"map":"video"))):a.type="image")})})}(window.jQuery),function(f,o,m){"use strict";function d(e){var t=[];for(var n in e=(e=e.originalEvent||e||f.e).touches&&e.touches.length?e.touches:e.changedTouches&&e.changedTouches.length?e.changedTouches:[e])e[n].pageX?t.push({x:e[n].pageX,y:e[n].pageY}):e[n].clientX&&t.push({x:e[n].clientX,y:e[n].clientY});return t}function g(e,t,n){return t&&e?"x"===n?e.x-t.x:"y"===n?e.y-t.y:Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)):0}function l(e){if(e.is("a,button,input,select,textarea")||m.isFunction(e.get(0).onclick))return 1;for(var t=0,n=e[0].attributes,i=n.length;t<i;t++)if("data-fancybox-"===n[t].nodeName.substr(0,14))return 1}function c(e){for(var t=!1;(n=e.get(0),0,i=f.getComputedStyle(n)["overflow-y"],a=f.getComputedStyle(n)["overflow-x"],r=("scroll"===i||"auto"===i)&&n.scrollHeight>n.clientHeight,s=("scroll"===a||"auto"===a)&&n.scrollWidth>n.clientWidth,!(t=r||s))&&((e=e.parent()).length&&!e.hasClass("fancybox-stage")&&!e.is("body")););var n,i,a,r,s;return t}function n(e){this.instance=e,this.$bg=e.$refs.bg,this.$stage=e.$refs.stage,this.$container=e.$refs.container,this.destroy(),this.$container.on("touchstart.fb.touch mousedown.fb.touch",m.proxy(this,"ontouchstart"))}var v=f.requestAnimationFrame||f.webkitRequestAnimationFrame||f.mozRequestAnimationFrame||f.oRequestAnimationFrame||function(e){return f.setTimeout(e,1e3/60)},y=f.cancelAnimationFrame||f.webkitCancelAnimationFrame||f.mozCancelAnimationFrame||f.oCancelAnimationFrame||function(e){f.clearTimeout(e)};n.prototype.destroy=function(){this.$container.off(".fb.touch")},n.prototype.ontouchstart=function(e){var t=this,n=m(e.target),i=t.instance,a=i.current,r=a.$content,s="touchstart"==e.type;if(s&&t.$container.off("mousedown.fb.touch"),!a||t.instance.isAnimating||t.instance.isClosing)return e.stopPropagation(),void e.preventDefault();if((!e.originalEvent||2!=e.originalEvent.button)&&n.length&&!l(n)&&!l(n.parent())&&!(e.originalEvent.clientX>n[0].clientWidth+n.offset().left)&&(t.startPoints=d(e),t.startPoints&&!(1<t.startPoints.length&&i.isSliding))){if(t.$target=n,t.$content=r,t.canTap=!0,m(o).off(".fb.touch"),m(o).on(s?"touchend.fb.touch touchcancel.fb.touch":"mouseup.fb.touch mouseleave.fb.touch",m.proxy(t,"ontouchend")),m(o).on(s?"touchmove.fb.touch":"mousemove.fb.touch",m.proxy(t,"ontouchmove")),e.stopPropagation(),!i.current.opts.touch&&!i.canPan()||!n.is(t.$stage)&&!t.$stage.find(n).length)return void(n.is("img")&&e.preventDefault());m.fancybox.isMobile&&(c(t.$target)||c(t.$target.parent()))||e.preventDefault(),t.canvasWidth=Math.round(a.$slide[0].clientWidth),t.canvasHeight=Math.round(a.$slide[0].clientHeight),t.startTime=(new Date).getTime(),t.distanceX=t.distanceY=t.distance=0,t.isPanning=!1,t.isSwiping=!1,t.isZooming=!1,t.sliderStartPos=t.sliderLastPos||{top:0,left:0},t.contentStartPos=m.fancybox.getTranslate(t.$content),t.contentLastPos=null,1!==t.startPoints.length||t.isZooming||(t.canTap=!i.isSliding,"image"===a.type&&(t.contentStartPos.width>t.canvasWidth+1||t.contentStartPos.height>t.canvasHeight+1)?(m.fancybox.stop(t.$content),t.$content.css("transition-duration","0ms"),t.isPanning=!0):t.isSwiping=!0,t.$container.addClass("fancybox-controls--isGrabbing")),2!==t.startPoints.length||i.isAnimating||a.hasError||"image"!==a.type||!a.isLoaded&&!a.$ghost||(t.isZooming=!0,t.isSwiping=!1,t.isPanning=!1,m.fancybox.stop(t.$content),t.$content.css("transition-duration","0ms"),t.centerPointStartX=.5*(t.startPoints[0].x+t.startPoints[1].x)-m(f).scrollLeft(),t.centerPointStartY=.5*(t.startPoints[0].y+t.startPoints[1].y)-m(f).scrollTop(),t.percentageOfImageAtPinchPointX=(t.centerPointStartX-t.contentStartPos.left)/t.contentStartPos.width,t.percentageOfImageAtPinchPointY=(t.centerPointStartY-t.contentStartPos.top)/t.contentStartPos.height,t.startDistanceBetweenFingers=g(t.startPoints[0],t.startPoints[1]))}},n.prototype.ontouchmove=function(e){var t=this;if(t.newPoints=d(e),m.fancybox.isMobile&&(c(t.$target)||c(t.$target.parent())))return e.stopPropagation(),void(t.canTap=!1);if((t.instance.current.opts.touch||t.instance.canPan())&&t.newPoints&&t.newPoints.length&&(t.distanceX=g(t.newPoints[0],t.startPoints[0],"x"),t.distanceY=g(t.newPoints[0],t.startPoints[0],"y"),t.distance=g(t.newPoints[0],t.startPoints[0]),0<t.distance)){if(!t.$target.is(t.$stage)&&!t.$stage.find(t.$target).length)return;e.stopPropagation(),e.preventDefault(),t.isSwiping?t.onSwipe():t.isPanning?t.onPan():t.isZooming&&t.onZoom()}},n.prototype.onSwipe=function(){var e,i=this,t=i.isSwiping,n=i.sliderStartPos.left||0;!0===t?10<Math.abs(i.distance)&&(i.canTap=!1,i.instance.group.length<2&&i.instance.opts.touch.vertical?i.isSwiping="y":i.instance.isSliding||!1===i.instance.opts.touch.vertical||"auto"===i.instance.opts.touch.vertical&&800<m(f).width()?i.isSwiping="x":(e=Math.abs(180*Math.atan2(i.distanceY,i.distanceX)/Math.PI),i.isSwiping=45<e&&e<135?"y":"x"),i.instance.isSliding=i.isSwiping,i.startPoints=i.newPoints,m.each(i.instance.slides,function(e,t){m.fancybox.stop(t.$slide),t.$slide.css("transition-duration","0ms"),t.inTransition=!1,t.pos===i.instance.current.pos&&(i.sliderStartPos.left=m.fancybox.getTranslate(t.$slide).left)}),i.instance.SlideShow&&i.instance.SlideShow.isActive&&i.instance.SlideShow.stop()):("x"==t&&(0<i.distanceX&&(i.instance.group.length<2||0===i.instance.current.index&&!i.instance.current.opts.loop)?n+=Math.pow(i.distanceX,.8):i.distanceX<0&&(i.instance.group.length<2||i.instance.current.index===i.instance.group.length-1&&!i.instance.current.opts.loop)?n-=Math.pow(-i.distanceX,.8):n+=i.distanceX),i.sliderLastPos={top:"x"==t?0:i.sliderStartPos.top+i.distanceY,left:n},i.requestId&&(y(i.requestId),i.requestId=null),i.requestId=v(function(){i.sliderLastPos&&(m.each(i.instance.slides,function(e,t){var n=t.pos-i.instance.currPos;m.fancybox.setTranslate(t.$slide,{top:i.sliderLastPos.top,left:i.sliderLastPos.left+n*i.canvasWidth+n*t.opts.gutter})}),i.$container.addClass("fancybox-is-sliding"))}))},n.prototype.onPan=function(){var e,t,n,i=this;i.canTap=!1,e=i.contentStartPos.width>i.canvasWidth?i.contentStartPos.left+i.distanceX:i.contentStartPos.left,t=i.contentStartPos.top+i.distanceY,(n=i.limitMovement(e,t,i.contentStartPos.width,i.contentStartPos.height)).scaleX=i.contentStartPos.scaleX,n.scaleY=i.contentStartPos.scaleY,i.contentLastPos=n,i.requestId&&(y(i.requestId),i.requestId=null),i.requestId=v(function(){m.fancybox.setTranslate(i.$content,i.contentLastPos)})},n.prototype.limitMovement=function(e,t,n,i){var a,r,s,o,l=this.canvasWidth,c=this.canvasHeight,d=this.contentStartPos.left,u=this.contentStartPos.top,p=this.distanceX,h=this.distanceY;return a=Math.max(0,.5*l-.5*n),r=Math.max(0,.5*c-.5*i),s=Math.min(l-n,.5*l-.5*n),o=Math.min(c-i,.5*c-.5*i),l<n&&(0<p&&a<e&&(e=a-1+Math.pow(-a+d+p,.8)||0),p<0&&e<s&&(e=s+1-Math.pow(s-d-p,.8)||0)),c<i&&(0<h&&r<t&&(t=r-1+Math.pow(-r+u+h,.8)||0),h<0&&t<o&&(t=o+1-Math.pow(o-u-h,.8)||0)),{top:t,left:e}},n.prototype.limitPosition=function(e,t,n,i){var a=this.canvasWidth,r=this.canvasHeight;return e=a<n?(e=0<e?0:e)<a-n?a-n:e:Math.max(0,a/2-n/2),{top:t=r<i?(t=0<t?0:t)<r-i?r-i:t:Math.max(0,r/2-i/2),left:e}},n.prototype.onZoom=function(){var e=this,t=e.contentStartPos.width,n=e.contentStartPos.height,i=e.contentStartPos.left,a=e.contentStartPos.top,r=g(e.newPoints[0],e.newPoints[1])/e.startDistanceBetweenFingers,s=Math.floor(t*r),o=Math.floor(n*r),l=(t-s)*e.percentageOfImageAtPinchPointX,c=(n-o)*e.percentageOfImageAtPinchPointY,d=(e.newPoints[0].x+e.newPoints[1].x)/2-m(f).scrollLeft(),u=(e.newPoints[0].y+e.newPoints[1].y)/2-m(f).scrollTop(),p=d-e.centerPointStartX,h={top:a+(c+(u-e.centerPointStartY)),left:i+(l+p),scaleX:e.contentStartPos.scaleX*r,scaleY:e.contentStartPos.scaleY*r};e.canTap=!1,e.newWidth=s,e.newHeight=o,e.contentLastPos=h,e.requestId&&(y(e.requestId),e.requestId=null),e.requestId=v(function(){m.fancybox.setTranslate(e.$content,e.contentLastPos)})},n.prototype.ontouchend=function(e){var t=this,n=Math.max((new Date).getTime()-t.startTime,1),i=t.isSwiping,a=t.isPanning,r=t.isZooming;return t.endPoints=d(e),t.$container.removeClass("fancybox-controls--isGrabbing"),m(o).off(".fb.touch"),t.requestId&&(y(t.requestId),t.requestId=null),t.isSwiping=!1,t.isPanning=!1,t.isZooming=!1,t.canTap?t.onTap(e):(t.speed=366,t.velocityX=t.distanceX/n*.5,t.velocityY=t.distanceY/n*.5,t.speedX=Math.max(.5*t.speed,Math.min(1.5*t.speed,1/Math.abs(t.velocityX)*t.speed)),void(a?t.endPanning():r?t.endZooming():t.endSwiping(i)))},n.prototype.endSwiping=function(e){var t=this,n=!1;t.instance.isSliding=!1,t.sliderLastPos=null,"y"==e&&50<Math.abs(t.distanceY)?(m.fancybox.animate(t.instance.current.$slide,{top:t.sliderStartPos.top+t.distanceY+150*t.velocityY,opacity:0},150),n=t.instance.close(!0,300)):"x"==e&&50<t.distanceX&&1<t.instance.group.length?n=t.instance.previous(t.speedX):"x"==e&&t.distanceX<-50&&1<t.instance.group.length&&(n=t.instance.next(t.speedX)),!1!==n||"x"!=e&&"y"!=e||t.instance.jumpTo(t.instance.current.index,150),t.$container.removeClass("fancybox-is-sliding")},n.prototype.endPanning=function(){var e,t,n,i=this;i.contentLastPos&&(t=!1===i.instance.current.opts.touch.momentum?(e=i.contentLastPos.left,i.contentLastPos.top):(e=i.contentLastPos.left+i.velocityX*i.speed,i.contentLastPos.top+i.velocityY*i.speed),(n=i.limitPosition(e,t,i.contentStartPos.width,i.contentStartPos.height)).width=i.contentStartPos.width,n.height=i.contentStartPos.height,m.fancybox.animate(i.$content,n,330))},n.prototype.endZooming=function(){var e,t,n,i,a=this,r=a.instance.current,s=a.newWidth,o=a.newHeight;a.contentLastPos&&(e=a.contentLastPos.left,i={top:t=a.contentLastPos.top,left:e,width:s,height:o,scaleX:1,scaleY:1},m.fancybox.setTranslate(a.$content,i),s<a.canvasWidth&&o<a.canvasHeight?a.instance.scaleToFit(150):s>r.width||o>r.height?a.instance.scaleToActual(a.centerPointStartX,a.centerPointStartY,150):(n=a.limitPosition(e,t,s,o),m.fancybox.setTranslate(a.content,m.fancybox.getTranslate(a.$content)),m.fancybox.animate(a.$content,n,150)))},n.prototype.onTap=function(n){function e(e){var t=s.opts[e];if(m.isFunction(t)&&(t=t.apply(r,[s,n])),t)switch(t){case"close":r.close(i.startEvent);break;case"toggleControls":r.toggleControls(!0);break;case"next":r.next();break;case"nextOrClose":1<r.group.length?r.next():r.close(i.startEvent);break;case"zoom":"image"==s.type&&(s.isLoaded||s.$ghost)&&(r.canPan()?r.scaleToFit():r.isScaledDown()?r.scaleToActual(l,c):r.group.length<2&&r.close(i.startEvent))}}var t,i=this,a=m(n.target),r=i.instance,s=r.current,o=n&&d(n)||i.startPoints,l=o[0]?o[0].x-i.$stage.offset().left:0,c=o[0]?o[0].y-i.$stage.offset().top:0;if(!(n.originalEvent&&2==n.originalEvent.button||r.isSliding||l>a[0].clientWidth+a.offset().left)){if(a.is(".fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container"))t="Outside";else if(a.is(".fancybox-slide"))t="Slide";else{if(!r.current.$content||!r.current.$content.has(n.target).length)return;t="Content"}if(i.tapped){if(clearTimeout(i.tapped),i.tapped=null,50<Math.abs(l-i.tapX)||50<Math.abs(c-i.tapY)||r.isSliding)return this;e("dblclick"+t)}else i.tapX=l,i.tapY=c,s.opts["dblclick"+t]&&s.opts["dblclick"+t]!==s.opts["click"+t]?i.tapped=setTimeout(function(){i.tapped=null,e("click"+t)},300):e("click"+t);return this}},m(o).on("onActivate.fb",function(e,t){t&&!t.Guestures&&(t.Guestures=new n(t))}),m(o).on("beforeClose.fb",function(e,t){t&&t.Guestures&&t.Guestures.destroy()})}(window,document,window.jQuery),function(s,o){"use strict";function n(e){this.instance=e,this.init()}o.extend(n.prototype,{timer:null,isActive:!1,$button:null,speed:3e3,init:function(){var e=this;e.$button=e.instance.$refs.toolbar.find("[data-fancybox-play]").on("click",function(){e.toggle()}),(e.instance.group.length<2||!e.instance.group[e.instance.currIndex].opts.slideShow)&&e.$button.hide()},set:function(){var e=this;e.instance&&e.instance.current&&(e.instance.current.opts.loop||e.instance.currIndex<e.instance.group.length-1)?e.timer=setTimeout(function(){e.instance.next()},e.instance.current.opts.slideShow.speed||e.speed):(e.stop(),e.instance.idleSecondsCounter=0,e.instance.showControls())},clear:function(){clearTimeout(this.timer),this.timer=null},start:function(){var e=this.instance.current;this.instance&&e&&(e.opts.loop||e.index<this.instance.group.length-1)&&(this.isActive=!0,this.$button.attr("title",e.opts.i18n[e.opts.lang].PLAY_STOP).addClass("fancybox-button--pause"),e.isComplete&&this.set())},stop:function(){var e=this.instance.current;this.clear(),this.$button.attr("title",e.opts.i18n[e.opts.lang].PLAY_START).removeClass("fancybox-button--pause"),this.isActive=!1},toggle:function(){this.isActive?this.stop():this.start()}}),o(s).on({"onInit.fb":function(e,t){t&&!t.SlideShow&&(t.SlideShow=new n(t))},"beforeShow.fb":function(e,t,n,i){var a=t&&t.SlideShow;i?a&&n.opts.slideShow.autoStart&&a.start():a&&a.isActive&&a.clear()},"afterShow.fb":function(e,t){var n=t&&t.SlideShow;n&&n.isActive&&n.set()},"afterKeydown.fb":function(e,t,n,i,a){var r=t&&t.SlideShow;!r||!n.opts.slideShow||80!==a&&32!==a||o(s.activeElement).is("button,a,input")||(i.preventDefault(),r.toggle())},"beforeClose.fb onDeactivate.fb":function(e,t){var n=t&&t.SlideShow;n&&n.stop()}}),o(s).on("visibilitychange",function(){var e=o.fancybox.getInstance(),t=e&&e.SlideShow;t&&t.isActive&&(s.hidden?t.clear():t.set())})}(document,window.jQuery),function(r,t){"use strict";var n=function(){var e,t,n,i=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],a={};for(t=0;t<i.length;t++)if((e=i[t])&&e[1]in r){for(n=0;n<e.length;n++)a[i[0][n]]=e[n];return a}return!1}();if(!n)return t.fancybox.defaults.btnTpl.fullScreen=!1;var a={request:function(e){(e=e||r.documentElement)[n.requestFullscreen](e.ALLOW_KEYBOARD_INPUT)},exit:function(){r[n.exitFullscreen]()},toggle:function(e){e=e||r.documentElement,this.isFullscreen()?this.exit():this.request(e)},isFullscreen:function(){return Boolean(r[n.fullscreenElement])},enabled:function(){return Boolean(r[n.fullscreenEnabled])}};t(r).on({"onInit.fb":function(e,t){var n,i=t.$refs.toolbar.find("[data-fancybox-fullscreen]");t&&!t.FullScreen&&t.group[t.currIndex].opts.fullScreen?((n=t.$refs.container).on("click.fb-fullscreen","[data-fancybox-fullscreen]",function(e){e.stopPropagation(),e.preventDefault(),a.toggle(n[0])}),t.opts.fullScreen&&!0===t.opts.fullScreen.autoStart&&a.request(n[0]),t.FullScreen=a):i.hide()},"afterKeydown.fb":function(e,t,n,i,a){t&&t.FullScreen&&70===a&&(i.preventDefault(),t.FullScreen.toggle(t.$refs.container[0]))},"beforeClose.fb":function(e){e&&e.FullScreen&&a.exit()}}),t(r).on(n.fullscreenchange,function(){var e=t.fancybox.getInstance();e.current&&"image"===e.current.type&&e.isAnimating&&(e.current.$content.css("transition","none"),e.isAnimating=!1,e.update(!0,!0,0))})}(document,window.jQuery),function(e,o){"use strict";function n(e){this.instance=e,this.init()}o.extend(n.prototype,{$button:null,$grid:null,$list:null,isVisible:!1,init:function(){var e=this,t=e.instance.group[0],n=e.instance.group[1];e.$button=e.instance.$refs.toolbar.find("[data-fancybox-thumbs]"),1<e.instance.group.length&&e.instance.group[e.instance.currIndex].opts.thumbs&&("image"==t.type||t.opts.thumb||t.opts.$thumb)&&("image"==n.type||n.opts.thumb||n.opts.$thumb)?(e.$button.on("click",function(){e.toggle()}),e.isActive=!0):(e.$button.hide(),e.isActive=!1)},create:function(){var n,i,e=this.instance;this.$grid=o('<div class="fancybox-thumbs"></div>').appendTo(e.$refs.container),n="<ul>",o.each(e.group,function(e,t){(i=t.opts.thumb||(t.opts.$thumb?t.opts.$thumb.attr("src"):null))||"image"!==t.type||(i=t.src),i&&i.length&&(n+='<li data-index="'+e+'"  tabindex="0" class="fancybox-thumbs-loading"><img data-src="'+i+'" /></li>')}),n+="</ul>",this.$list=o(n).appendTo(this.$grid).on("click","li",function(){e.jumpTo(o(this).data("index"))}),this.$list.find("img").hide().one("load",function(){var e,t,n,i,a=o(this).parent().removeClass("fancybox-thumbs-loading"),r=a.outerWidth(),s=a.outerHeight();e=this.naturalWidth||this.width,i=(t=this.naturalHeight||this.height)/s,1<=(n=e/r)&&1<=i&&(i<n?(e/=i,t=s):(e=r,t/=n)),o(this).css({width:Math.floor(e),height:Math.floor(t),"margin-top":Math.min(0,Math.floor(.3*s-.3*t)),"margin-left":Math.min(0,Math.floor(.5*r-.5*e))}).show()}).each(function(){this.src=o(this).data("src")})},focus:function(){this.instance.current&&this.$list.children().removeClass("fancybox-thumbs-active").filter('[data-index="'+this.instance.current.index+'"]').addClass("fancybox-thumbs-active").focus()},close:function(){this.$grid.hide()},update:function(){this.instance.$refs.container.toggleClass("fancybox-show-thumbs",this.isVisible),this.isVisible?(this.$grid||this.create(),this.instance.trigger("onThumbsShow"),this.focus()):this.$grid&&this.instance.trigger("onThumbsHide"),this.instance.update()},hide:function(){this.isVisible=!1,this.update()},show:function(){this.isVisible=!0,this.update()},toggle:function(){this.isVisible=!this.isVisible,this.update()}}),o(e).on({"onInit.fb":function(e,t){t&&!t.Thumbs&&(t.Thumbs=new n(t))},"beforeShow.fb":function(e,t,n,i){var a=t&&t.Thumbs;if(a&&a.isActive){if(n.modal)return a.$button.hide(),void a.hide();i&&!0===t.opts.thumbs.autoStart&&a.show(),a.isVisible&&a.focus()}},"afterKeydown.fb":function(e,t,n,i,a){var r=t&&t.Thumbs;r&&r.isActive&&71===a&&(i.preventDefault(),r.toggle())},"beforeClose.fb":function(e,t){var n=t&&t.Thumbs;n&&n.isVisible&&!1!==t.opts.thumbs.hideOnClose&&n.close()}})}(document,window.jQuery),function(r,s,o){"use strict";function a(){var e=s.location.hash.substr(1),t=e.split("-"),n=1<t.length&&/^\+?\d+$/.test(t[t.length-1])&&parseInt(t.pop(-1),10)||1;return n<1&&(n=1),{hash:e,index:n,gallery:t.join("-")}}function t(e){var t;""!==e.gallery&&((t=o("[data-fancybox='"+o.escapeSelector(e.gallery)+"']").eq(e.index-1)).length?t.trigger("click"):o("#"+o.escapeSelector(e.gallery)).trigger("click"))}function l(e){var t;return!!e&&((t=e.current?e.current.opts:e.opts).$orig?t.$orig.data("fancybox"):t.hash||"")}o.escapeSelector||(o.escapeSelector=function(e){return(e+"").replace(/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e})});var c=null,d=null;o(function(){setTimeout(function(){!1!==o.fancybox.defaults.hash&&(o(r).on({"onInit.fb":function(e,t){var n,i;!1!==t.group[t.currIndex].opts.hash&&(n=a(),(i=l(t))&&n.gallery&&i==n.gallery&&(t.currIndex=n.index-1))},"beforeShow.fb":function(e,t,n,i){var a;!1===n.opts.hash||(a=l(t))&&""!==a&&(s.location.hash.indexOf(a)<0&&(t.opts.origHash=s.location.hash),c=a+(1<t.group.length?"-"+(n.index+1):""),"replaceState"in s.history?(d&&clearTimeout(d),d=setTimeout(function(){s.history[i?"pushState":"replaceState"]({},r.title,s.location.pathname+s.location.search+"#"+c),d=null},300)):s.location.hash=c)},"beforeClose.fb":function(e,t,n){var i,a;d&&clearTimeout(d),!1!==n.opts.hash&&(i=l(t),a=t&&t.opts.origHash?t.opts.origHash:"",i&&""!==i&&("replaceState"in history?s.history.replaceState({},r.title,s.location.pathname+s.location.search+a):(s.location.hash=a,o(s).scrollTop(t.scrollTop).scrollLeft(t.scrollLeft))),c=null)}}),o(s).on("hashchange.fb",function(){var e=a();o.fancybox.getInstance()?!c||c===e.gallery+"-"+e.index||1===e.index&&c==e.gallery||(c=null,o.fancybox.close()):""!==e.gallery&&t(e)}),o(s).one("unload.fb popstate.fb",function(){o.fancybox.getInstance("close",!0,0)}),t(a()))},50)})}(document,window,window.jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,

function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(T,e){"use strict";function m(e){return null!=e&&e===e.window}var t=[],n=Object.getPrototypeOf,r=t.slice,g=t.flat?function(e){return t.flat.call(e)}:function(e){return t.concat.apply([],e)},l=t.push,o=t.indexOf,i={},s=i.toString,v=i.hasOwnProperty,a=v.toString,d=a.call(Object),y={},b=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},C=T.document,c={type:!0,src:!0,nonce:!0,noModule:!0};function x(e,t,i){var n,o,s=(i=i||C).createElement("script");if(s.text=e,t)for(n in c)(o=t[n]||t.getAttribute&&t.getAttribute(n))&&s.setAttribute(n,o);i.head.appendChild(s).parentNode.removeChild(s)}function w(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?i[s.call(e)]||"object":typeof e}var u="3.5.1",k=function(e,t){return new k.fn.init(e,t)};function p(e){var t=!!e&&"length"in e&&e.length,i=w(e);return!b(e)&&!m(e)&&("array"===i||0===t||"number"==typeof t&&0<t&&t-1 in e)}k.fn=k.prototype={jquery:u,constructor:k,length:0,toArray:function(){return r.call(this)},get:function(e){return null==e?r.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=k.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return k.each(this,e)},map:function(i){return this.pushStack(k.map(this,function(e,t){return i.call(e,t,e)}))},slice:function(){return this.pushStack(r.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(k.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(k.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,i=+e+(e<0?t:0);return this.pushStack(0<=i&&i<t?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:l,sort:t.sort,splice:t.splice},k.extend=k.fn.extend=function(){var e,t,i,n,o,s,a=arguments[0]||{},r=1,l=arguments.length,d=!1;for("boolean"==typeof a&&(d=a,a=arguments[r]||{},r++),"object"==typeof a||b(a)||(a={}),r===l&&(a=this,r--);r<l;r++)if(null!=(e=arguments[r]))for(t in e)n=e[t],"__proto__"!==t&&a!==n&&(d&&n&&(k.isPlainObject(n)||(o=Array.isArray(n)))?(i=a[t],s=o&&!Array.isArray(i)?[]:o||k.isPlainObject(i)?i:{},o=!1,a[t]=k.extend(d,s,n)):void 0!==n&&(a[t]=n));return a},k.extend({expando:"jQuery"+(u+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,i;return!(!e||"[object Object]"!==s.call(e))&&(!(t=n(e))||"function"==typeof(i=v.call(t,"constructor")&&t.constructor)&&a.call(i)===d)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t,i){x(e,{nonce:t&&t.nonce},i)},each:function(e,t){var i,n=0;if(p(e))for(i=e.length;n<i&&!1!==t.call(e[n],n,e[n]);n++);else for(n in e)if(!1===t.call(e[n],n,e[n]))break;return e},makeArray:function(e,t){var i=t||[];return null!=e&&(p(Object(e))?k.merge(i,"string"==typeof e?[e]:e):l.call(i,e)),i},inArray:function(e,t,i){return null==t?-1:o.call(t,e,i)},merge:function(e,t){for(var i=+t.length,n=0,o=e.length;n<i;n++)e[o++]=t[n];return e.length=o,e},grep:function(e,t,i){for(var n=[],o=0,s=e.length,a=!i;o<s;o++)!t(e[o],o)!=a&&n.push(e[o]);return n},map:function(e,t,i){var n,o,s=0,a=[];if(p(e))for(n=e.length;s<n;s++)null!=(o=t(e[s],s,i))&&a.push(o);else for(s in e)null!=(o=t(e[s],s,i))&&a.push(o);return g(a)},guid:1,support:y}),"function"==typeof Symbol&&(k.fn[Symbol.iterator]=t[Symbol.iterator]),k.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){i["[object "+t+"]"]=t.toLowerCase()});var h=function(i){function u(e,t){var i="0x"+e.slice(1)-65536;return t||(i<0?String.fromCharCode(65536+i):String.fromCharCode(i>>10|55296,1023&i|56320))}function o(){S()}var e,h,x,s,a,f,p,m,w,l,d,S,T,r,C,g,c,v,y,k="sizzle"+ +new Date,b=i.document,E=0,n=0,$=le(),M=le(),P=le(),A=le(),L=function(e,t){return e===t&&(d=!0),0},D={}.hasOwnProperty,t=[],z=t.pop,I=t.push,O=t.push,_=t.slice,B=function(e,t){for(var i=0,n=e.length;i<n;i++)if(e[i]===t)return i;return-1},H="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",N="[\\x20\\t\\r\\n\\f]",j="(?:\\\\[\\da-fA-F]{1,6}"+N+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",R="\\["+N+"*("+j+")(?:"+N+"*([*^$|!~]?=)"+N+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+j+"))|)"+N+"*\\]",q=":("+j+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+R+")*)|.*)\\)|)",F=new RegExp(N+"+","g"),W=new RegExp("^"+N+"+|((?:^|[^\\\\])(?:\\\\.)*)"+N+"+$","g"),X=new RegExp("^"+N+"*,"+N+"*"),Y=new RegExp("^"+N+"*([>+~]|"+N+")"+N+"*"),G=new RegExp(N+"|>"),V=new RegExp(q),U=new RegExp("^"+j+"$"),K={ID:new RegExp("^#("+j+")"),CLASS:new RegExp("^\\.("+j+")"),TAG:new RegExp("^("+j+"|[*])"),ATTR:new RegExp("^"+R),PSEUDO:new RegExp("^"+q),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+N+"*(even|odd|(([+-]|)(\\d*)n|)"+N+"*(?:([+-]|)"+N+"*(\\d+)|))"+N+"*\\)|)","i"),bool:new RegExp("^(?:"+H+")$","i"),needsContext:new RegExp("^"+N+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+N+"*((?:-\\d)?\\d*)"+N+"*\\)|)(?=[^-]|$)","i")},Z=/HTML$/i,Q=/^(?:input|select|textarea|button)$/i,J=/^h\d$/i,ee=/^[^{]+\{\s*\[native \w/,te=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ie=/[+~]/,ne=new RegExp("\\\\[\\da-fA-F]{1,6}"+N+"?|\\\\([^\\r\\n\\f])","g"),oe=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,se=function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},ae=xe(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{O.apply(t=_.call(b.childNodes),b.childNodes),t[b.childNodes.length].nodeType}catch(e){O={apply:t.length?function(e,t){I.apply(e,_.call(t))}:function(e,t){for(var i=e.length,n=0;e[i++]=t[n++];);e.length=i-1}}}function re(t,e,i,n){var o,s,a,r,l,d,c,u=e&&e.ownerDocument,p=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return i;if(!n&&(S(e),e=e||T,C)){if(11!==p&&(l=te.exec(t)))if(o=l[1]){if(9===p){if(!(a=e.getElementById(o)))return i;if(a.id===o)return i.push(a),i}else if(u&&(a=u.getElementById(o))&&y(e,a)&&a.id===o)return i.push(a),i}else{if(l[2])return O.apply(i,e.getElementsByTagName(t)),i;if((o=l[3])&&h.getElementsByClassName&&e.getElementsByClassName)return O.apply(i,e.getElementsByClassName(o)),i}if(h.qsa&&!A[t+" "]&&(!g||!g.test(t))&&(1!==p||"object"!==e.nodeName.toLowerCase())){if(c=t,u=e,1===p&&(G.test(t)||Y.test(t))){for((u=ie.test(t)&&ve(e.parentNode)||e)===e&&h.scope||((r=e.getAttribute("id"))?r=r.replace(oe,se):e.setAttribute("id",r=k)),s=(d=f(t)).length;s--;)d[s]=(r?"#"+r:":scope")+" "+be(d[s]);c=d.join(",")}try{return O.apply(i,u.querySelectorAll(c)),i}catch(e){A(t,!0)}finally{r===k&&e.removeAttribute("id")}}}return m(t.replace(W,"$1"),e,i,n)}function le(){var i=[];function n(e,t){return i.push(e+" ")>x.cacheLength&&delete n[i.shift()],n[e+" "]=t}return n}function de(e){return e[k]=!0,e}function ce(e){var t=T.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function ue(e,t){for(var i=e.split("|"),n=i.length;n--;)x.attrHandle[i[n]]=t}function pe(e,t){var i=t&&e,n=i&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function he(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function fe(i){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===i}}function me(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&ae(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function ge(a){return de(function(s){return s=+s,de(function(e,t){for(var i,n=a([],e.length,s),o=n.length;o--;)e[i=n[o]]&&(e[i]=!(t[i]=e[i]))})})}function ve(e){return e&&void 0!==e.getElementsByTagName&&e}for(e in h=re.support={},a=re.isXML=function(e){var t=e.namespaceURI,i=(e.ownerDocument||e).documentElement;return!Z.test(t||i&&i.nodeName||"HTML")},S=re.setDocument=function(e){var t,i,n=e?e.ownerDocument||e:b;return n!=T&&9===n.nodeType&&n.documentElement&&(r=(T=n).documentElement,C=!a(T),b!=T&&(i=T.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",o,!1):i.attachEvent&&i.attachEvent("onunload",o)),h.scope=ce(function(e){return r.appendChild(e).appendChild(T.createElement("div")),void 0!==e.querySelectorAll&&!e.querySelectorAll(":scope fieldset div").length}),h.attributes=ce(function(e){return e.className="i",!e.getAttribute("className")}),h.getElementsByTagName=ce(function(e){return e.appendChild(T.createComment("")),!e.getElementsByTagName("*").length}),h.getElementsByClassName=ee.test(T.getElementsByClassName),h.getById=ce(function(e){return r.appendChild(e).id=k,!T.getElementsByName||!T.getElementsByName(k).length}),h.getById?(x.filter.ID=function(e){var t=e.replace(ne,u);return function(e){return e.getAttribute("id")===t}},x.find.ID=function(e,t){if(void 0!==t.getElementById&&C){var i=t.getElementById(e);return i?[i]:[]}}):(x.filter.ID=function(e){var i=e.replace(ne,u);return function(e){var t=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===i}},x.find.ID=function(e,t){if(void 0!==t.getElementById&&C){var i,n,o,s=t.getElementById(e);if(s){if((i=s.getAttributeNode("id"))&&i.value===e)return[s];for(o=t.getElementsByName(e),n=0;s=o[n++];)if((i=s.getAttributeNode("id"))&&i.value===e)return[s]}return[]}}),x.find.TAG=h.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):h.qsa?t.querySelectorAll(e):void 0}:function(e,t){var i,n=[],o=0,s=t.getElementsByTagName(e);if("*"!==e)return s;for(;i=s[o++];)1===i.nodeType&&n.push(i);return n},x.find.CLASS=h.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&C)return t.getElementsByClassName(e)},c=[],g=[],(h.qsa=ee.test(T.querySelectorAll))&&(ce(function(e){var t;r.appendChild(e).innerHTML="<a id='"+k+"'></a><select id='"+k+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&g.push("[*^$]="+N+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||g.push("\\["+N+"*(?:value|"+H+")"),e.querySelectorAll("[id~="+k+"-]").length||g.push("~="),(t=T.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||g.push("\\["+N+"*name"+N+"*="+N+"*(?:''|\"\")"),e.querySelectorAll(":checked").length||g.push(":checked"),e.querySelectorAll("a#"+k+"+*").length||g.push(".#.+[+~]"),e.querySelectorAll("\\\f"),g.push("[\\r\\n\\f]")}),ce(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=T.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&g.push("name"+N+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&g.push(":enabled",":disabled"),r.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&g.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),g.push(",.*:")})),(h.matchesSelector=ee.test(v=r.matches||r.webkitMatchesSelector||r.mozMatchesSelector||r.oMatchesSelector||r.msMatchesSelector))&&ce(function(e){h.disconnectedMatch=v.call(e,"*"),v.call(e,"[s!='']:x"),c.push("!=",q)}),g=g.length&&new RegExp(g.join("|")),c=c.length&&new RegExp(c.join("|")),t=ee.test(r.compareDocumentPosition),y=t||ee.test(r.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},L=t?function(e,t){if(e===t)return d=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i||(1&(i=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!h.sortDetached&&t.compareDocumentPosition(e)===i?e==T||e.ownerDocument==b&&y(b,e)?-1:t==T||t.ownerDocument==b&&y(b,t)?1:l?B(l,e)-B(l,t):0:4&i?-1:1)}:function(e,t){if(e===t)return d=!0,0;var i,n=0,o=e.parentNode,s=t.parentNode,a=[e],r=[t];if(!o||!s)return e==T?-1:t==T?1:o?-1:s?1:l?B(l,e)-B(l,t):0;if(o===s)return pe(e,t);for(i=e;i=i.parentNode;)a.unshift(i);for(i=t;i=i.parentNode;)r.unshift(i);for(;a[n]===r[n];)n++;return n?pe(a[n],r[n]):a[n]==b?-1:r[n]==b?1:0}),T},re.matches=function(e,t){return re(e,null,null,t)},re.matchesSelector=function(e,t){if(S(e),h.matchesSelector&&C&&!A[t+" "]&&(!c||!c.test(t))&&(!g||!g.test(t)))try{var i=v.call(e,t);if(i||h.disconnectedMatch||e.document&&11!==e.document.nodeType)return i}catch(e){A(t,!0)}return 0<re(t,T,null,[e]).length},re.contains=function(e,t){return(e.ownerDocument||e)!=T&&S(e),y(e,t)},re.attr=function(e,t){(e.ownerDocument||e)!=T&&S(e);var i=x.attrHandle[t.toLowerCase()],n=i&&D.call(x.attrHandle,t.toLowerCase())?i(e,t,!C):void 0;return void 0!==n?n:h.attributes||!C?e.getAttribute(t):(n=e.getAttributeNode(t))&&n.specified?n.value:null},re.escape=function(e){return(e+"").replace(oe,se)},re.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},re.uniqueSort=function(e){var t,i=[],n=0,o=0;if(d=!h.detectDuplicates,l=!h.sortStable&&e.slice(0),e.sort(L),d){for(;t=e[o++];)t===e[o]&&(n=i.push(o));for(;n--;)e.splice(i[n],1)}return l=null,e},s=re.getText=function(e){var t,i="",n=0,o=e.nodeType;if(o){if(1===o||9===o||11===o){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=s(e)}else if(3===o||4===o)return e.nodeValue}else for(;t=e[n++];)i+=s(t);return i},(x=re.selectors={cacheLength:50,createPseudo:de,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(ne,u),e[3]=(e[3]||e[4]||e[5]||"").replace(ne,u),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||re.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&re.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return K.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&V.test(i)&&(t=f(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(ne,u).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=$[e+" "];return t||(t=new RegExp("(^|"+N+")"+e+"("+N+"|$)"))&&$(e,function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(i,n,o){return function(e){var t=re.attr(e,i);return null==t?"!="===n:!n||(t+="","="===n?t===o:"!="===n?t!==o:"^="===n?o&&0===t.indexOf(o):"*="===n?o&&-1<t.indexOf(o):"$="===n?o&&t.slice(-o.length)===o:"~="===n?-1<(" "+t.replace(F," ")+" ").indexOf(o):"|="===n&&(t===o||t.slice(0,o.length+1)===o+"-"))}},CHILD:function(f,e,t,m,g){var v="nth"!==f.slice(0,3),y="last"!==f.slice(-4),b="of-type"===e;return 1===m&&0===g?function(e){return!!e.parentNode}:function(e,t,i){var n,o,s,a,r,l,d=v!=y?"nextSibling":"previousSibling",c=e.parentNode,u=b&&e.nodeName.toLowerCase(),p=!i&&!b,h=!1;if(c){if(v){for(;d;){for(a=e;a=a[d];)if(b?a.nodeName.toLowerCase()===u:1===a.nodeType)return!1;l=d="only"===f&&!l&&"nextSibling"}return!0}if(l=[y?c.firstChild:c.lastChild],y&&p){for(h=(r=(n=(o=(s=(a=c)[k]||(a[k]={}))[a.uniqueID]||(s[a.uniqueID]={}))[f]||[])[0]===E&&n[1])&&n[2],a=r&&c.childNodes[r];a=++r&&a&&a[d]||(h=r=0)||l.pop();)if(1===a.nodeType&&++h&&a===e){o[f]=[E,r,h];break}}else if(p&&(h=r=(n=(o=(s=(a=e)[k]||(a[k]={}))[a.uniqueID]||(s[a.uniqueID]={}))[f]||[])[0]===E&&n[1]),!1===h)for(;(a=++r&&a&&a[d]||(h=r=0)||l.pop())&&((b?a.nodeName.toLowerCase()!==u:1!==a.nodeType)||!++h||(p&&((o=(s=a[k]||(a[k]={}))[a.uniqueID]||(s[a.uniqueID]={}))[f]=[E,h]),a!==e)););return(h-=g)===m||h%m==0&&0<=h/m}}},PSEUDO:function(e,s){var t,a=x.pseudos[e]||x.setFilters[e.toLowerCase()]||re.error("unsupported pseudo: "+e);return a[k]?a(s):1<a.length?(t=[e,e,"",s],x.setFilters.hasOwnProperty(e.toLowerCase())?de(function(e,t){for(var i,n=a(e,s),o=n.length;o--;)e[i=B(e,n[o])]=!(t[i]=n[o])}):function(e){return a(e,0,t)}):a}},pseudos:{not:de(function(e){var n=[],o=[],r=p(e.replace(W,"$1"));return r[k]?de(function(e,t,i,n){for(var o,s=r(e,null,n,[]),a=e.length;a--;)(o=s[a])&&(e[a]=!(t[a]=o))}):function(e,t,i){return n[0]=e,r(n,null,i,o),n[0]=null,!o.pop()}}),has:de(function(t){return function(e){return 0<re(t,e).length}}),contains:de(function(t){return t=t.replace(ne,u),function(e){return-1<(e.textContent||s(e)).indexOf(t)}}),lang:de(function(i){return U.test(i||"")||re.error("unsupported lang: "+i),i=i.replace(ne,u).toLowerCase(),function(e){var t;do{if(t=C?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===i||0===t.indexOf(i+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=i.location&&i.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===r},focus:function(e){return e===T.activeElement&&(!T.hasFocus||T.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:me(!1),disabled:me(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!x.pseudos.empty(e)},header:function(e){return J.test(e.nodeName)},input:function(e){return Q.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:ge(function(){return[0]}),last:ge(function(e,t){return[t-1]}),eq:ge(function(e,t,i){return[i<0?i+t:i]}),even:ge(function(e,t){for(var i=0;i<t;i+=2)e.push(i);return e}),odd:ge(function(e,t){for(var i=1;i<t;i+=2)e.push(i);return e}),lt:ge(function(e,t,i){for(var n=i<0?i+t:t<i?t:i;0<=--n;)e.push(n);return e}),gt:ge(function(e,t,i){for(var n=i<0?i+t:i;++n<t;)e.push(n);return e})}}).pseudos.nth=x.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})x.pseudos[e]=he(e);for(e in{submit:!0,reset:!0})x.pseudos[e]=fe(e);function ye(){}function be(e){for(var t=0,i=e.length,n="";t<i;t++)n+=e[t].value;return n}function xe(r,e,t){var l=e.dir,d=e.next,c=d||l,u=t&&"parentNode"===c,p=n++;return e.first?function(e,t,i){for(;e=e[l];)if(1===e.nodeType||u)return r(e,t,i);return!1}:function(e,t,i){var n,o,s,a=[E,p];if(i){for(;e=e[l];)if((1===e.nodeType||u)&&r(e,t,i))return!0}else for(;e=e[l];)if(1===e.nodeType||u)if(o=(s=e[k]||(e[k]={}))[e.uniqueID]||(s[e.uniqueID]={}),d&&d===e.nodeName.toLowerCase())e=e[l]||e;else{if((n=o[c])&&n[0]===E&&n[1]===p)return a[2]=n[2];if((o[c]=a)[2]=r(e,t,i))return!0}return!1}}function we(o){return 1<o.length?function(e,t,i){for(var n=o.length;n--;)if(!o[n](e,t,i))return!1;return!0}:o[0]}function Se(e,t,i,n,o){for(var s,a=[],r=0,l=e.length,d=null!=t;r<l;r++)(s=e[r])&&(i&&!i(s,n,o)||(a.push(s),d&&t.push(r)));return a}function Te(h,f,m,g,v,e){return g&&!g[k]&&(g=Te(g)),v&&!v[k]&&(v=Te(v,e)),de(function(e,t,i,n){var o,s,a,r=[],l=[],d=t.length,c=e||function(e,t,i){for(var n=0,o=t.length;n<o;n++)re(e,t[n],i);return i}(f||"*",i.nodeType?[i]:i,[]),u=!h||!e&&f?c:Se(c,r,h,i,n),p=m?v||(e?h:d||g)?[]:t:u;if(m&&m(u,p,i,n),g)for(o=Se(p,l),g(o,[],i,n),s=o.length;s--;)(a=o[s])&&(p[l[s]]=!(u[l[s]]=a));if(e){if(v||h){if(v){for(o=[],s=p.length;s--;)(a=p[s])&&o.push(u[s]=a);v(null,p=[],o,n)}for(s=p.length;s--;)(a=p[s])&&-1<(o=v?B(e,a):r[s])&&(e[o]=!(t[o]=a))}}else p=Se(p===t?p.splice(d,p.length):p),v?v(null,t,p,n):O.apply(t,p)})}function Ce(e){for(var o,t,i,n=e.length,s=x.relative[e[0].type],a=s||x.relative[" "],r=s?1:0,l=xe(function(e){return e===o},a,!0),d=xe(function(e){return-1<B(o,e)},a,!0),c=[function(e,t,i){var n=!s&&(i||t!==w)||((o=t).nodeType?l:d)(e,t,i);return o=null,n}];r<n;r++)if(t=x.relative[e[r].type])c=[xe(we(c),t)];else{if((t=x.filter[e[r].type].apply(null,e[r].matches))[k]){for(i=++r;i<n&&!x.relative[e[i].type];i++);return Te(1<r&&we(c),1<r&&be(e.slice(0,r-1).concat({value:" "===e[r-2].type?"*":""})).replace(W,"$1"),t,r<i&&Ce(e.slice(r,i)),i<n&&Ce(e=e.slice(i)),i<n&&be(e))}c.push(t)}return we(c)}function ke(g,v){function e(e,t,i,n,o){var s,a,r,l=0,d="0",c=e&&[],u=[],p=w,h=e||b&&x.find.TAG("*",o),f=E+=null==p?1:Math.random()||.1,m=h.length;for(o&&(w=t==T||t||o);d!==m&&null!=(s=h[d]);d++){if(b&&s){for(a=0,t||s.ownerDocument==T||(S(s),i=!C);r=g[a++];)if(r(s,t||T,i)){n.push(s);break}o&&(E=f)}y&&((s=!r&&s)&&l--,e&&c.push(s))}if(l+=d,y&&d!==l){for(a=0;r=v[a++];)r(c,u,t,i);if(e){if(0<l)for(;d--;)c[d]||u[d]||(u[d]=z.call(n));u=Se(u)}O.apply(n,u),o&&!e&&0<u.length&&1<l+v.length&&re.uniqueSort(n)}return o&&(E=f,w=p),c}var y=0<v.length,b=0<g.length;return y?de(e):e}return ye.prototype=x.filters=x.pseudos,x.setFilters=new ye,f=re.tokenize=function(e,t){var i,n,o,s,a,r,l,d=M[e+" "];if(d)return t?0:d.slice(0);for(a=e,r=[],l=x.preFilter;a;){for(s in i&&!(n=X.exec(a))||(n&&(a=a.slice(n[0].length)||a),r.push(o=[])),i=!1,(n=Y.exec(a))&&(i=n.shift(),o.push({value:i,type:n[0].replace(W," ")}),a=a.slice(i.length)),x.filter)!(n=K[s].exec(a))||l[s]&&!(n=l[s](n))||(i=n.shift(),o.push({value:i,type:s,matches:n}),a=a.slice(i.length));if(!i)break}return t?a.length:a?re.error(e):M(e,r).slice(0)},p=re.compile=function(e,t){var i,n=[],o=[],s=P[e+" "];if(!s){for(i=(t=t||f(e)).length;i--;)(s=Ce(t[i]))[k]?n.push(s):o.push(s);(s=P(e,ke(o,n))).selector=e}return s},m=re.select=function(e,t,i,n){var o,s,a,r,l,d="function"==typeof e&&e,c=!n&&f(e=d.selector||e);if(i=i||[],1===c.length){if(2<(s=c[0]=c[0].slice(0)).length&&"ID"===(a=s[0]).type&&9===t.nodeType&&C&&x.relative[s[1].type]){if(!(t=(x.find.ID(a.matches[0].replace(ne,u),t)||[])[0]))return i;d&&(t=t.parentNode),e=e.slice(s.shift().value.length)}for(o=K.needsContext.test(e)?0:s.length;o--&&(a=s[o],!x.relative[r=a.type]);)if((l=x.find[r])&&(n=l(a.matches[0].replace(ne,u),ie.test(s[0].type)&&ve(t.parentNode)||t))){if(s.splice(o,1),!(e=n.length&&be(s)))return O.apply(i,n),i;break}}return(d||p(e,c))(n,t,!C,i,!t||ie.test(e)&&ve(t.parentNode)||t),i},h.sortStable=k.split("").sort(L).join("")===k,h.detectDuplicates=!!d,S(),h.sortDetached=ce(function(e){return 1&e.compareDocumentPosition(T.createElement("fieldset"))}),ce(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||ue("type|href|height|width",function(e,t,i){if(!i)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),h.attributes&&ce(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||ue("value",function(e,t,i){if(!i&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),ce(function(e){return null==e.getAttribute("disabled")})||ue(H,function(e,t,i){var n;if(!i)return!0===e[t]?t.toLowerCase():(n=e.getAttributeNode(t))&&n.specified?n.value:null}),re}(T);k.find=h,k.expr=h.selectors,k.expr[":"]=k.expr.pseudos,k.uniqueSort=k.unique=h.uniqueSort,k.text=h.getText,k.isXMLDoc=h.isXML,k.contains=h.contains,k.escapeSelector=h.escape;function f(e,t,i){for(var n=[],o=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(o&&k(e).is(i))break;n.push(e)}return n}function S(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i}var E=k.expr.match.needsContext;function $(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var M=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function P(e,i,n){return b(i)?k.grep(e,function(e,t){return!!i.call(e,t,e)!==n}):i.nodeType?k.grep(e,function(e){return e===i!==n}):"string"!=typeof i?k.grep(e,function(e){return-1<o.call(i,e)!==n}):k.filter(i,e,n)}k.filter=function(e,t,i){var n=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===n.nodeType?k.find.matchesSelector(n,e)?[n]:[]:k.find.matches(e,k.grep(t,function(e){return 1===e.nodeType}))},k.fn.extend({find:function(e){var t,i,n=this.length,o=this;if("string"!=typeof e)return this.pushStack(k(e).filter(function(){for(t=0;t<n;t++)if(k.contains(o[t],this))return!0}));for(i=this.pushStack([]),t=0;t<n;t++)k.find(e,o[t],i);return 1<n?k.uniqueSort(i):i},filter:function(e){return this.pushStack(P(this,e||[],!1))},not:function(e){return this.pushStack(P(this,e||[],!0))},is:function(e){return!!P(this,"string"==typeof e&&E.test(e)?k(e):e||[],!1).length}});var A,L=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(k.fn.init=function(e,t,i){var n,o;if(!e)return this;if(i=i||A,"string"!=typeof e)return e.nodeType?(this[0]=e,this.length=1,this):b(e)?void 0!==i.ready?i.ready(e):e(k):k.makeArray(e,this);if(!(n="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:L.exec(e))||!n[1]&&t)return!t||t.jquery?(t||i).find(e):this.constructor(t).find(e);if(n[1]){if(t=t instanceof k?t[0]:t,k.merge(this,k.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:C,!0)),M.test(n[1])&&k.isPlainObject(t))for(n in t)b(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}return(o=C.getElementById(n[2]))&&(this[0]=o,this.length=1),this}).prototype=k.fn,A=k(C);var D=/^(?:parents|prev(?:Until|All))/,z={children:!0,contents:!0,next:!0,prev:!0};function I(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}k.fn.extend({has:function(e){var t=k(e,this),i=t.length;return this.filter(function(){for(var e=0;e<i;e++)if(k.contains(this,t[e]))return!0})},closest:function(e,t){var i,n=0,o=this.length,s=[],a="string"!=typeof e&&k(e);if(!E.test(e))for(;n<o;n++)for(i=this[n];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(a?-1<a.index(i):1===i.nodeType&&k.find.matchesSelector(i,e))){s.push(i);break}return this.pushStack(1<s.length?k.uniqueSort(s):s)},index:function(e){return e?"string"==typeof e?o.call(k(e),this[0]):o.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(k.uniqueSort(k.merge(this.get(),k(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),k.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return f(e,"parentNode")},parentsUntil:function(e,t,i){return f(e,"parentNode",i)},next:function(e){return I(e,"nextSibling")},prev:function(e){return I(e,"previousSibling")},nextAll:function(e){return f(e,"nextSibling")},prevAll:function(e){return f(e,"previousSibling")},nextUntil:function(e,t,i){return f(e,"nextSibling",i)},prevUntil:function(e,t,i){return f(e,"previousSibling",i)},siblings:function(e){return S((e.parentNode||{}).firstChild,e)},children:function(e){return S(e.firstChild)},contents:function(e){return null!=e.contentDocument&&n(e.contentDocument)?e.contentDocument:($(e,"template")&&(e=e.content||e),k.merge([],e.childNodes))}},function(n,o){k.fn[n]=function(e,t){var i=k.map(this,o,e);return"Until"!==n.slice(-5)&&(t=e),t&&"string"==typeof t&&(i=k.filter(t,i)),1<this.length&&(z[n]||k.uniqueSort(i),D.test(n)&&i.reverse()),this.pushStack(i)}});var O=/[^\x20\t\r\n\f]+/g;function _(e){return e}function B(e){throw e}function H(e,t,i,n){var o;try{e&&b(o=e.promise)?o.call(e).done(t).fail(i):e&&b(o=e.then)?o.call(e,t,i):t.apply(void 0,[e].slice(n))}catch(e){i.apply(void 0,[e])}}k.Callbacks=function(n){var e,i;n="string"==typeof n?(e=n,i={},k.each(e.match(O)||[],function(e,t){i[t]=!0}),i):k.extend({},n);function o(){for(r=r||n.once,a=s=!0;d.length;c=-1)for(t=d.shift();++c<l.length;)!1===l[c].apply(t[0],t[1])&&n.stopOnFalse&&(c=l.length,t=!1);n.memory||(t=!1),s=!1,r&&(l=t?[]:"")}var s,t,a,r,l=[],d=[],c=-1,u={add:function(){return l&&(t&&!s&&(c=l.length-1,d.push(t)),function i(e){k.each(e,function(e,t){b(t)?n.unique&&u.has(t)||l.push(t):t&&t.length&&"string"!==w(t)&&i(t)})}(arguments),t&&!s&&o()),this},remove:function(){return k.each(arguments,function(e,t){for(var i;-1<(i=k.inArray(t,l,i));)l.splice(i,1),i<=c&&c--}),this},has:function(e){return e?-1<k.inArray(e,l):0<l.length},empty:function(){return l=l&&[],this},disable:function(){return r=d=[],l=t="",this},disabled:function(){return!l},lock:function(){return r=d=[],t||s||(l=t=""),this},locked:function(){return!!r},fireWith:function(e,t){return r||(t=[e,(t=t||[]).slice?t.slice():t],d.push(t),s||o()),this},fire:function(){return u.fireWith(this,arguments),this},fired:function(){return!!a}};return u},k.extend({Deferred:function(e){var s=[["notify","progress",k.Callbacks("memory"),k.Callbacks("memory"),2],["resolve","done",k.Callbacks("once memory"),k.Callbacks("once memory"),0,"resolved"],["reject","fail",k.Callbacks("once memory"),k.Callbacks("once memory"),1,"rejected"]],o="pending",a={state:function(){return o},always:function(){return r.done(arguments).fail(arguments),this},catch:function(e){return a.then(null,e)},pipe:function(){var o=arguments;return k.Deferred(function(n){k.each(s,function(e,t){var i=b(o[t[4]])&&o[t[4]];r[t[1]](function(){var e=i&&i.apply(this,arguments);e&&b(e.promise)?e.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[t[0]+"With"](this,i?[e]:arguments)})}),o=null}).promise()},then:function(t,i,n){var l=0;function d(o,s,a,r){return function(){function e(){var e,t;if(!(o<l)){if((e=a.apply(i,n))===s.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,b(t)?r?t.call(e,d(l,s,_,r),d(l,s,B,r)):(l++,t.call(e,d(l,s,_,r),d(l,s,B,r),d(l,s,_,s.notifyWith))):(a!==_&&(i=void 0,n=[e]),(r||s.resolveWith)(i,n))}}var i=this,n=arguments,t=r?e:function(){try{e()}catch(e){k.Deferred.exceptionHook&&k.Deferred.exceptionHook(e,t.stackTrace),l<=o+1&&(a!==B&&(i=void 0,n=[e]),s.rejectWith(i,n))}};o?t():(k.Deferred.getStackHook&&(t.stackTrace=k.Deferred.getStackHook()),T.setTimeout(t))}}return k.Deferred(function(e){s[0][3].add(d(0,e,b(n)?n:_,e.notifyWith)),s[1][3].add(d(0,e,b(t)?t:_)),s[2][3].add(d(0,e,b(i)?i:B))}).promise()},promise:function(e){return null!=e?k.extend(e,a):a}},r={};return k.each(s,function(e,t){var i=t[2],n=t[5];a[t[1]]=i.add,n&&i.add(function(){o=n},s[3-e][2].disable,s[3-e][3].disable,s[0][2].lock,s[0][3].lock),i.add(t[3].fire),r[t[0]]=function(){return r[t[0]+"With"](this===r?void 0:this,arguments),this},r[t[0]+"With"]=i.fireWith}),a.promise(r),e&&e.call(r,r),r},when:function(e){function t(t){return function(e){o[t]=this,s[t]=1<arguments.length?r.call(arguments):e,--i||a.resolveWith(o,s)}}var i=arguments.length,n=i,o=Array(n),s=r.call(arguments),a=k.Deferred();if(i<=1&&(H(e,a.done(t(n)).resolve,a.reject,!i),"pending"===a.state()||b(s[n]&&s[n].then)))return a.then();for(;n--;)H(s[n],t(n),a.reject);return a.promise()}});var N=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;k.Deferred.exceptionHook=function(e,t){T.console&&T.console.warn&&e&&N.test(e.name)&&T.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},k.readyException=function(e){T.setTimeout(function(){throw e})};var j=k.Deferred();function R(){C.removeEventListener("DOMContentLoaded",R),T.removeEventListener("load",R),k.ready()}k.fn.ready=function(e){return j.then(e).catch(function(e){k.readyException(e)}),this},k.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--k.readyWait:k.isReady)||(k.isReady=!0)!==e&&0<--k.readyWait||j.resolveWith(C,[k])}}),k.ready.then=j.then,"complete"===C.readyState||"loading"!==C.readyState&&!C.documentElement.doScroll?T.setTimeout(k.ready):(C.addEventListener("DOMContentLoaded",R),T.addEventListener("load",R));var q=function(e,t,i,n,o,s,a){var r=0,l=e.length,d=null==i;if("object"===w(i))for(r in o=!0,i)q(e,t,r,i[r],!0,s,a);else if(void 0!==n&&(o=!0,b(n)||(a=!0),d&&(t=a?(t.call(e,n),null):(d=t,function(e,t,i){return d.call(k(e),i)})),t))for(;r<l;r++)t(e[r],i,a?n:n.call(e[r],r,t(e[r],i)));return o?e:d?t.call(e):l?t(e[0],i):s},F=/^-ms-/,W=/-([a-z])/g;function X(e,t){return t.toUpperCase()}function Y(e){return e.replace(F,"ms-").replace(W,X)}function G(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType}function V(){this.expando=k.expando+V.uid++}V.uid=1,V.prototype={cache:function(e){var t=e[this.expando];return t||(t={},G(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,i){var n,o=this.cache(e);if("string"==typeof t)o[Y(t)]=i;else for(n in t)o[Y(n)]=t[n];return o},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][Y(t)]},access:function(e,t,i){return void 0===t||t&&"string"==typeof t&&void 0===i?this.get(e,t):(this.set(e,t,i),void 0!==i?i:t)},remove:function(e,t){var i,n=e[this.expando];if(void 0!==n){if(void 0!==t){i=(t=Array.isArray(t)?t.map(Y):(t=Y(t))in n?[t]:t.match(O)||[]).length;for(;i--;)delete n[t[i]]}void 0!==t&&!k.isEmptyObject(n)||(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!k.isEmptyObject(t)}};var U=new V,K=new V,Z=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Q=/[A-Z]/g;function J(e,t,i){var n,o;if(void 0===i&&1===e.nodeType)if(n="data-"+t.replace(Q,"-$&").toLowerCase(),"string"==typeof(i=e.getAttribute(n))){try{i="true"===(o=i)||"false"!==o&&("null"===o?null:o===+o+""?+o:Z.test(o)?JSON.parse(o):o)}catch(e){}K.set(e,t,i)}else i=void 0;return i}k.extend({hasData:function(e){return K.hasData(e)||U.hasData(e)},data:function(e,t,i){return K.access(e,t,i)},removeData:function(e,t){K.remove(e,t)},_data:function(e,t,i){return U.access(e,t,i)},_removeData:function(e,t){U.remove(e,t)}}),k.fn.extend({data:function(i,e){var t,n,o,s=this[0],a=s&&s.attributes;if(void 0!==i)return"object"==typeof i?this.each(function(){K.set(this,i)}):q(this,function(e){var t;if(s&&void 0===e)return void 0!==(t=K.get(s,i))||void 0!==(t=J(s,i))?t:void 0;this.each(function(){K.set(this,i,e)})},null,e,1<arguments.length,null,!0);if(this.length&&(o=K.get(s),1===s.nodeType&&!U.get(s,"hasDataAttrs"))){for(t=a.length;t--;)a[t]&&0===(n=a[t].name).indexOf("data-")&&(n=Y(n.slice(5)),J(s,n,o[n]));U.set(s,"hasDataAttrs",!0)}return o},removeData:function(e){return this.each(function(){K.remove(this,e)})}}),k.extend({queue:function(e,t,i){var n;if(e)return t=(t||"fx")+"queue",n=U.get(e,t),i&&(!n||Array.isArray(i)?n=U.access(e,t,k.makeArray(i)):n.push(i)),n||[]},dequeue:function(e,t){t=t||"fx";var i=k.queue(e,t),n=i.length,o=i.shift(),s=k._queueHooks(e,t);"inprogress"===o&&(o=i.shift(),n--),o&&("fx"===t&&i.unshift("inprogress"),delete s.stop,o.call(e,function(){k.dequeue(e,t)},s)),!n&&s&&s.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return U.get(e,i)||U.access(e,i,{empty:k.Callbacks("once memory").add(function(){U.remove(e,[t+"queue",i])})})}}),k.fn.extend({queue:function(t,i){var e=2;return"string"!=typeof t&&(i=t,t="fx",e--),arguments.length<e?k.queue(this[0],t):void 0===i?this:this.each(function(){var e=k.queue(this,t,i);k._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&k.dequeue(this,t)})},dequeue:function(e){return this.each(function(){k.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){function i(){--o||s.resolveWith(a,[a])}var n,o=1,s=k.Deferred(),a=this,r=this.length;for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";r--;)(n=U.get(a[r],e+"queueHooks"))&&n.empty&&(o++,n.empty.add(i));return i(),s.promise(t)}});var ee=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,te=new RegExp("^(?:([+-])=|)("+ee+")([a-z%]*)$","i"),ie=["Top","Right","Bottom","Left"],ne=C.documentElement,oe=function(e){return k.contains(e.ownerDocument,e)},se={composed:!0};ne.getRootNode&&(oe=function(e){return k.contains(e.ownerDocument,e)||e.getRootNode(se)===e.ownerDocument});var ae=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&oe(e)&&"none"===k.css(e,"display")};function re(e,t,i,n){var o,s,a=20,r=n?function(){return n.cur()}:function(){return k.css(e,t,"")},l=r(),d=i&&i[3]||(k.cssNumber[t]?"":"px"),c=e.nodeType&&(k.cssNumber[t]||"px"!==d&&+l)&&te.exec(k.css(e,t));if(c&&c[3]!==d){for(l/=2,d=d||c[3],c=+l||1;a--;)k.style(e,t,c+d),(1-s)*(1-(s=r()/l||.5))<=0&&(a=0),c/=s;c*=2,k.style(e,t,c+d),i=i||[]}return i&&(c=+c||+l||0,o=i[1]?c+(i[1]+1)*i[2]:+i[2],n&&(n.unit=d,n.start=c,n.end=o)),o}var le={};function de(e,t){for(var i,n,o,s,a,r,l,d=[],c=0,u=e.length;c<u;c++)(n=e[c]).style&&(i=n.style.display,t?("none"===i&&(d[c]=U.get(n,"display")||null,d[c]||(n.style.display="")),""===n.style.display&&ae(n)&&(d[c]=(l=a=s=void 0,a=(o=n).ownerDocument,r=o.nodeName,(l=le[r])||(s=a.body.appendChild(a.createElement(r)),l=k.css(s,"display"),s.parentNode.removeChild(s),"none"===l&&(l="block"),le[r]=l)))):"none"!==i&&(d[c]="none",U.set(n,"display",i)));for(c=0;c<u;c++)null!=d[c]&&(e[c].style.display=d[c]);return e}k.fn.extend({show:function(){return de(this,!0)},hide:function(){return de(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){ae(this)?k(this).show():k(this).hide()})}});var ce,ue,pe=/^(?:checkbox|radio)$/i,he=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,fe=/^$|^module$|\/(?:java|ecma)script/i;ce=C.createDocumentFragment().appendChild(C.createElement("div")),(ue=C.createElement("input")).setAttribute("type","radio"),ue.setAttribute("checked","checked"),ue.setAttribute("name","t"),ce.appendChild(ue),y.checkClone=ce.cloneNode(!0).cloneNode(!0).lastChild.checked,ce.innerHTML="<textarea>x</textarea>",y.noCloneChecked=!!ce.cloneNode(!0).lastChild.defaultValue,ce.innerHTML="<option></option>",y.option=!!ce.lastChild;var me={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function ge(e,t){var i=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&$(e,t)?k.merge([e],i):i}function ve(e,t){for(var i=0,n=e.length;i<n;i++)U.set(e[i],"globalEval",!t||U.get(t[i],"globalEval"))}me.tbody=me.tfoot=me.colgroup=me.caption=me.thead,me.th=me.td,y.option||(me.optgroup=me.option=[1,"<select multiple='multiple'>","</select>"]);var ye=/<|&#?\w+;/;function be(e,t,i,n,o){for(var s,a,r,l,d,c,u=t.createDocumentFragment(),p=[],h=0,f=e.length;h<f;h++)if((s=e[h])||0===s)if("object"===w(s))k.merge(p,s.nodeType?[s]:s);else if(ye.test(s)){for(a=a||u.appendChild(t.createElement("div")),r=(he.exec(s)||["",""])[1].toLowerCase(),l=me[r]||me._default,a.innerHTML=l[1]+k.htmlPrefilter(s)+l[2],c=l[0];c--;)a=a.lastChild;k.merge(p,a.childNodes),(a=u.firstChild).textContent=""}else p.push(t.createTextNode(s));for(u.textContent="",h=0;s=p[h++];)if(n&&-1<k.inArray(s,n))o&&o.push(s);else if(d=oe(s),a=ge(u.appendChild(s),"script"),d&&ve(a),i)for(c=0;s=a[c++];)fe.test(s.type||"")&&i.push(s);return u}var xe=/^key/,we=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Se=/^([^.]*)(?:\.(.+)|)/;function Te(){return!0}function Ce(){return!1}function ke(e,t){return e===function(){try{return C.activeElement}catch(e){}}()==("focus"===t)}function Ee(e,t,i,n,o,s){var a,r;if("object"==typeof t){for(r in"string"!=typeof i&&(n=n||i,i=void 0),t)Ee(e,r,i,n,t[r],s);return e}if(null==n&&null==o?(o=i,n=i=void 0):null==o&&("string"==typeof i?(o=n,n=void 0):(o=n,n=i,i=void 0)),!1===o)o=Ce;else if(!o)return e;return 1===s&&(a=o,(o=function(e){return k().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=k.guid++)),e.each(function(){k.event.add(this,t,o,n,i)})}function $e(e,o,s){s?(U.set(e,o,!1),k.event.add(e,o,{namespace:!1,handler:function(e){var t,i,n=U.get(this,o);if(1&e.isTrigger&&this[o]){if(n.length)(k.event.special[o]||{}).delegateType&&e.stopPropagation();else if(n=r.call(arguments),U.set(this,o,n),t=s(this,o),this[o](),n!==(i=U.get(this,o))||t?U.set(this,o,!1):i={},n!==i)return e.stopImmediatePropagation(),e.preventDefault(),i.value}else n.length&&(U.set(this,o,{value:k.event.trigger(k.extend(n[0],k.Event.prototype),n.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===U.get(e,o)&&k.event.add(e,o,Te)}k.event={global:{},add:function(t,e,i,n,o){var s,a,r,l,d,c,u,p,h,f,m,g=U.get(t);if(G(t))for(i.handler&&(i=(s=i).handler,o=s.selector),o&&k.find.matchesSelector(ne,o),i.guid||(i.guid=k.guid++),(l=g.events)||(l=g.events=Object.create(null)),(a=g.handle)||(a=g.handle=function(e){return void 0!==k&&k.event.triggered!==e.type?k.event.dispatch.apply(t,arguments):void 0}),d=(e=(e||"").match(O)||[""]).length;d--;)h=m=(r=Se.exec(e[d])||[])[1],f=(r[2]||"").split(".").sort(),h&&(u=k.event.special[h]||{},h=(o?u.delegateType:u.bindType)||h,u=k.event.special[h]||{},c=k.extend({type:h,origType:m,data:n,handler:i,guid:i.guid,selector:o,needsContext:o&&k.expr.match.needsContext.test(o),namespace:f.join(".")},s),(p=l[h])||((p=l[h]=[]).delegateCount=0,u.setup&&!1!==u.setup.call(t,n,f,a)||t.addEventListener&&t.addEventListener(h,a)),u.add&&(u.add.call(t,c),c.handler.guid||(c.handler.guid=i.guid)),o?p.splice(p.delegateCount++,0,c):p.push(c),k.event.global[h]=!0)},remove:function(e,t,i,n,o){var s,a,r,l,d,c,u,p,h,f,m,g=U.hasData(e)&&U.get(e);if(g&&(l=g.events)){for(d=(t=(t||"").match(O)||[""]).length;d--;)if(h=m=(r=Se.exec(t[d])||[])[1],f=(r[2]||"").split(".").sort(),h){for(u=k.event.special[h]||{},p=l[h=(n?u.delegateType:u.bindType)||h]||[],r=r[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=s=p.length;s--;)c=p[s],!o&&m!==c.origType||i&&i.guid!==c.guid||r&&!r.test(c.namespace)||n&&n!==c.selector&&("**"!==n||!c.selector)||(p.splice(s,1),c.selector&&p.delegateCount--,u.remove&&u.remove.call(e,c));a&&!p.length&&(u.teardown&&!1!==u.teardown.call(e,f,g.handle)||k.removeEvent(e,h,g.handle),delete l[h])}else for(h in l)k.event.remove(e,h+t[d],i,n,!0);k.isEmptyObject(l)&&U.remove(e,"handle events")}},dispatch:function(e){var t,i,n,o,s,a,r=new Array(arguments.length),l=k.event.fix(e),d=(U.get(this,"events")||Object.create(null))[l.type]||[],c=k.event.special[l.type]||{};for(r[0]=l,t=1;t<arguments.length;t++)r[t]=arguments[t];if(l.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,l)){for(a=k.event.handlers.call(this,l,d),t=0;(o=a[t++])&&!l.isPropagationStopped();)for(l.currentTarget=o.elem,i=0;(s=o.handlers[i++])&&!l.isImmediatePropagationStopped();)l.rnamespace&&!1!==s.namespace&&!l.rnamespace.test(s.namespace)||(l.handleObj=s,l.data=s.data,void 0!==(n=((k.event.special[s.origType]||{}).handle||s.handler).apply(o.elem,r))&&!1===(l.result=n)&&(l.preventDefault(),l.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,l),l.result}},handlers:function(e,t){var i,n,o,s,a,r=[],l=t.delegateCount,d=e.target;if(l&&d.nodeType&&!("click"===e.type&&1<=e.button))for(;d!==this;d=d.parentNode||this)if(1===d.nodeType&&("click"!==e.type||!0!==d.disabled)){for(s=[],a={},i=0;i<l;i++)void 0===a[o=(n=t[i]).selector+" "]&&(a[o]=n.needsContext?-1<k(o,this).index(d):k.find(o,this,null,[d]).length),a[o]&&s.push(n);s.length&&r.push({elem:d,handlers:s})}return d=this,l<t.length&&r.push({elem:d,handlers:t.slice(l)}),r},addProp:function(t,e){Object.defineProperty(k.Event.prototype,t,{enumerable:!0,configurable:!0,get:b(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[k.expando]?e:new k.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&$(t,"input")&&$e(t,"click",Te),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&$(t,"input")&&$e(t,"click"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&$(t,"input")&&U.get(t,"click")||$(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},k.removeEvent=function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i)},k.Event=function(e,t){if(!(this instanceof k.Event))return new k.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Te:Ce,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&k.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[k.expando]=!0},k.Event.prototype={constructor:k.Event,isDefaultPrevented:Ce,isPropagationStopped:Ce,isImmediatePropagationStopped:Ce,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Te,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Te,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Te,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},k.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&xe.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&we.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},k.event.addProp),k.each({focus:"focusin",blur:"focusout"},function(e,t){k.event.special[e]={setup:function(){return $e(this,e,ke),!1},trigger:function(){return $e(this,e),!0},delegateType:t}}),k.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,o){k.event.special[e]={delegateType:o,bindType:o,handle:function(e){var t,i=e.relatedTarget,n=e.handleObj;return i&&(i===this||k.contains(this,i))||(e.type=n.origType,t=n.handler.apply(this,arguments),e.type=o),t}}}),k.fn.extend({on:function(e,t,i,n){return Ee(this,e,t,i,n)},one:function(e,t,i,n){return Ee(this,e,t,i,n,1)},off:function(e,t,i){var n,o;if(e&&e.preventDefault&&e.handleObj)return n=e.handleObj,k(e.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"!=typeof e)return!1!==t&&"function"!=typeof t||(i=t,t=void 0),!1===i&&(i=Ce),this.each(function(){k.event.remove(this,e,i,t)});for(o in e)this.off(o,t,e[o]);return this}});var Me=/<script|<style|<link/i,Pe=/checked\s*(?:[^=]|=\s*.checked.)/i,Ae=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Le(e,t){return $(e,"table")&&$(11!==t.nodeType?t:t.firstChild,"tr")&&k(e).children("tbody")[0]||e}function De(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function ze(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Ie(e,t){var i,n,o,s,a,r;if(1===t.nodeType){if(U.hasData(e)&&(r=U.get(e).events))for(o in U.remove(t,"handle events"),r)for(i=0,n=r[o].length;i<n;i++)k.event.add(t,o,r[o][i]);K.hasData(e)&&(s=K.access(e),a=k.extend({},s),K.set(t,a))}}function Oe(i,n,o,s){n=g(n);var e,t,a,r,l,d,c=0,u=i.length,p=u-1,h=n[0],f=b(h);if(f||1<u&&"string"==typeof h&&!y.checkClone&&Pe.test(h))return i.each(function(e){var t=i.eq(e);f&&(n[0]=h.call(this,e,t.html())),Oe(t,n,o,s)});if(u&&(t=(e=be(n,i[0].ownerDocument,!1,i,s)).firstChild,1===e.childNodes.length&&(e=t),t||s)){for(r=(a=k.map(ge(e,"script"),De)).length;c<u;c++)l=e,c!==p&&(l=k.clone(l,!0,!0),r&&k.merge(a,ge(l,"script"))),o.call(i[c],l,c);if(r)for(d=a[a.length-1].ownerDocument,k.map(a,ze),c=0;c<r;c++)l=a[c],fe.test(l.type||"")&&!U.access(l,"globalEval")&&k.contains(d,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?k._evalUrl&&!l.noModule&&k._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")},d):x(l.textContent.replace(Ae,""),l,d))}return i}function _e(e,t,i){for(var n,o=t?k.filter(t,e):e,s=0;null!=(n=o[s]);s++)i||1!==n.nodeType||k.cleanData(ge(n)),n.parentNode&&(i&&oe(n)&&ve(ge(n,"script")),n.parentNode.removeChild(n));return e}k.extend({htmlPrefilter:function(e){return e},clone:function(e,t,i){var n,o,s,a,r,l,d,c=e.cloneNode(!0),u=oe(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||k.isXMLDoc(e)))for(a=ge(c),n=0,o=(s=ge(e)).length;n<o;n++)r=s[n],l=a[n],"input"===(d=l.nodeName.toLowerCase())&&pe.test(r.type)?l.checked=r.checked:"input"!==d&&"textarea"!==d||(l.defaultValue=r.defaultValue);if(t)if(i)for(s=s||ge(e),a=a||ge(c),n=0,o=s.length;n<o;n++)Ie(s[n],a[n]);else Ie(e,c);return 0<(a=ge(c,"script")).length&&ve(a,!u&&ge(e,"script")),c},cleanData:function(e){for(var t,i,n,o=k.event.special,s=0;void 0!==(i=e[s]);s++)if(G(i)){if(t=i[U.expando]){if(t.events)for(n in t.events)o[n]?k.event.remove(i,n):k.removeEvent(i,n,t.handle);i[U.expando]=void 0}i[K.expando]&&(i[K.expando]=void 0)}}}),k.fn.extend({detach:function(e){return _e(this,e,!0)},remove:function(e){return _e(this,e)},text:function(e){return q(this,function(e){return void 0===e?k.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return Oe(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Le(this,e).appendChild(e)})},prepend:function(){return Oe(this,arguments,function(e){var t;1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(t=Le(this,e)).insertBefore(e,t.firstChild)})},before:function(){return Oe(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return Oe(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(k.cleanData(ge(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return k.clone(this,e,t)})},html:function(e){return q(this,function(e){var t=this[0]||{},i=0,n=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Me.test(e)&&!me[(he.exec(e)||["",""])[1].toLowerCase()]){e=k.htmlPrefilter(e);try{for(;i<n;i++)1===(t=this[i]||{}).nodeType&&(k.cleanData(ge(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var i=[];return Oe(this,arguments,function(e){var t=this.parentNode;k.inArray(this,i)<0&&(k.cleanData(ge(this)),t&&t.replaceChild(e,this))},i)}}),k.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,a){k.fn[e]=function(e){for(var t,i=[],n=k(e),o=n.length-1,s=0;s<=o;s++)t=s===o?this:this.clone(!0),k(n[s])[a](t),l.apply(i,t.get());return this.pushStack(i)}});function Be(e,t,i){var n,o,s={};for(o in t)s[o]=e.style[o],e.style[o]=t[o];for(o in n=i.call(e),t)e.style[o]=s[o];return n}var He,Ne,je,Re,qe,Fe,We,Xe,Ye=new RegExp("^("+ee+")(?!px)[a-z%]+$","i"),Ge=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=T),t.getComputedStyle(e)},Ve=new RegExp(ie.join("|"),"i");function Ue(){var e;Xe&&(We.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",Xe.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ne.appendChild(We).appendChild(Xe),e=T.getComputedStyle(Xe),He="1%"!==e.top,Fe=12===Ke(e.marginLeft),Xe.style.right="60%",Re=36===Ke(e.right),Ne=36===Ke(e.width),Xe.style.position="absolute",je=12===Ke(Xe.offsetWidth/3),ne.removeChild(We),Xe=null)}function Ke(e){return Math.round(parseFloat(e))}function Ze(e,t,i){var n,o,s,a,r=e.style;return(i=i||Ge(e))&&(""!==(a=i.getPropertyValue(t)||i[t])||oe(e)||(a=k.style(e,t)),!y.pixelBoxStyles()&&Ye.test(a)&&Ve.test(t)&&(n=r.width,o=r.minWidth,s=r.maxWidth,r.minWidth=r.maxWidth=r.width=a,a=i.width,r.width=n,r.minWidth=o,r.maxWidth=s)),void 0!==a?a+"":a}function Qe(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}We=C.createElement("div"),(Xe=C.createElement("div")).style&&(Xe.style.backgroundClip="content-box",Xe.cloneNode(!0).style.backgroundClip="",y.clearCloneStyle="content-box"===Xe.style.backgroundClip,k.extend(y,{boxSizingReliable:function(){return Ue(),Ne},pixelBoxStyles:function(){return Ue(),Re},pixelPosition:function(){return Ue(),He},reliableMarginLeft:function(){return Ue(),Fe},scrollboxSize:function(){return Ue(),je},reliableTrDimensions:function(){var e,t,i,n;return null==qe&&(e=C.createElement("table"),t=C.createElement("tr"),i=C.createElement("div"),e.style.cssText="position:absolute;left:-11111px",t.style.height="1px",i.style.height="9px",ne.appendChild(e).appendChild(t).appendChild(i),n=T.getComputedStyle(t),qe=3<parseInt(n.height),ne.removeChild(e)),qe}}));var Je=["Webkit","Moz","ms"],et=C.createElement("div").style,tt={};function it(e){var t=k.cssProps[e]||tt[e];return t||(e in et?e:tt[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),i=Je.length;i--;)if((e=Je[i]+t)in et)return e}(e)||e)}var nt=/^(none|table(?!-c[ea]).+)/,ot=/^--/,st={position:"absolute",visibility:"hidden",display:"block"},at={letterSpacing:"0",fontWeight:"400"};function rt(e,t,i){var n=te.exec(t);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):t}function lt(e,t,i,n,o,s){var a="width"===t?1:0,r=0,l=0;if(i===(n?"border":"content"))return 0;for(;a<4;a+=2)"margin"===i&&(l+=k.css(e,i+ie[a],!0,o)),n?("content"===i&&(l-=k.css(e,"padding"+ie[a],!0,o)),"margin"!==i&&(l-=k.css(e,"border"+ie[a]+"Width",!0,o))):(l+=k.css(e,"padding"+ie[a],!0,o),"padding"!==i?l+=k.css(e,"border"+ie[a]+"Width",!0,o):r+=k.css(e,"border"+ie[a]+"Width",!0,o));return!n&&0<=s&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-s-l-r-.5))||0),l}function dt(e,t,i){var n=Ge(e),o=(!y.boxSizingReliable()||i)&&"border-box"===k.css(e,"boxSizing",!1,n),s=o,a=Ze(e,t,n),r="offset"+t[0].toUpperCase()+t.slice(1);if(Ye.test(a)){if(!i)return a;a="auto"}return(!y.boxSizingReliable()&&o||!y.reliableTrDimensions()&&$(e,"tr")||"auto"===a||!parseFloat(a)&&"inline"===k.css(e,"display",!1,n))&&e.getClientRects().length&&(o="border-box"===k.css(e,"boxSizing",!1,n),(s=r in e)&&(a=e[r])),(a=parseFloat(a)||0)+lt(e,t,i||(o?"border":"content"),s,n,a)+"px"}function ct(e,t,i,n,o){return new ct.prototype.init(e,t,i,n,o)}k.extend({cssHooks:{opacity:{get:function(e,t){if(t){var i=Ze(e,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,i,n){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var o,s,a,r=Y(t),l=ot.test(t),d=e.style;if(l||(t=it(r)),a=k.cssHooks[t]||k.cssHooks[r],void 0===i)return a&&"get"in a&&void 0!==(o=a.get(e,!1,n))?o:d[t];"string"===(s=typeof i)&&(o=te.exec(i))&&o[1]&&(i=re(e,t,o),s="number"),null!=i&&i==i&&("number"!==s||l||(i+=o&&o[3]||(k.cssNumber[r]?"":"px")),y.clearCloneStyle||""!==i||0!==t.indexOf("background")||(d[t]="inherit"),a&&"set"in a&&void 0===(i=a.set(e,i,n))||(l?d.setProperty(t,i):d[t]=i))}},css:function(e,t,i,n){var o,s,a,r=Y(t);return ot.test(t)||(t=it(r)),(a=k.cssHooks[t]||k.cssHooks[r])&&"get"in a&&(o=a.get(e,!0,i)),void 0===o&&(o=Ze(e,t,n)),"normal"===o&&t in at&&(o=at[t]),""===i||i?(s=parseFloat(o),!0===i||isFinite(s)?s||0:o):o}}),k.each(["height","width"],function(e,l){k.cssHooks[l]={get:function(e,t,i){if(t)return!nt.test(k.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?dt(e,l,i):Be(e,st,function(){return dt(e,l,i)})},set:function(e,t,i){var n,o=Ge(e),s=!y.scrollboxSize()&&"absolute"===o.position,a=(s||i)&&"border-box"===k.css(e,"boxSizing",!1,o),r=i?lt(e,l,i,a,o):0;return a&&s&&(r-=Math.ceil(e["offset"+l[0].toUpperCase()+l.slice(1)]-parseFloat(o[l])-lt(e,l,"border",!1,o)-.5)),r&&(n=te.exec(t))&&"px"!==(n[3]||"px")&&(e.style[l]=t,t=k.css(e,l)),rt(0,t,r)}}}),k.cssHooks.marginLeft=Qe(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Ze(e,"marginLeft"))||e.getBoundingClientRect().left-Be(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),k.each({margin:"",padding:"",border:"Width"},function(o,s){k.cssHooks[o+s]={expand:function(e){for(var t=0,i={},n="string"==typeof e?e.split(" "):[e];t<4;t++)i[o+ie[t]+s]=n[t]||n[t-2]||n[0];return i}},"margin"!==o&&(k.cssHooks[o+s].set=rt)}),k.fn.extend({css:function(e,t){return q(this,function(e,t,i){var n,o,s={},a=0;if(Array.isArray(t)){for(n=Ge(e),o=t.length;a<o;a++)s[t[a]]=k.css(e,t[a],!1,n);return s}return void 0!==i?k.style(e,t,i):k.css(e,t)},e,t,1<arguments.length)}}),(k.Tween=ct).prototype={constructor:ct,init:function(e,t,i,n,o,s){this.elem=e,this.prop=i,this.easing=o||k.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=n,this.unit=s||(k.cssNumber[i]?"":"px")},cur:function(){var e=ct.propHooks[this.prop];return e&&e.get?e.get(this):ct.propHooks._default.get(this)},run:function(e){var t,i=ct.propHooks[this.prop];return this.options.duration?this.pos=t=k.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):ct.propHooks._default.set(this),this}},ct.prototype.init.prototype=ct.prototype,ct.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=k.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){k.fx.step[e.prop]?k.fx.step[e.prop](e):1!==e.elem.nodeType||!k.cssHooks[e.prop]&&null==e.elem.style[it(e.prop)]?e.elem[e.prop]=e.now:k.style(e.elem,e.prop,e.now+e.unit)}}},ct.propHooks.scrollTop=ct.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},k.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},k.fx=ct.prototype.init,k.fx.step={};var ut,pt,ht,ft,mt=/^(?:toggle|show|hide)$/,gt=/queueHooks$/;function vt(){pt&&(!1===C.hidden&&T.requestAnimationFrame?T.requestAnimationFrame(vt):T.setTimeout(vt,k.fx.interval),k.fx.tick())}function yt(){return T.setTimeout(function(){ut=void 0}),ut=Date.now()}function bt(e,t){var i,n=0,o={height:e};for(t=t?1:0;n<4;n+=2-t)o["margin"+(i=ie[n])]=o["padding"+i]=e;return t&&(o.opacity=o.width=e),o}function xt(e,t,i){for(var n,o=(wt.tweeners[t]||[]).concat(wt.tweeners["*"]),s=0,a=o.length;s<a;s++)if(n=o[s].call(i,t,e))return n}function wt(s,e,t){var i,a,n=0,o=wt.prefilters.length,r=k.Deferred().always(function(){delete l.elem}),l=function(){if(a)return!1;for(var e=ut||yt(),t=Math.max(0,d.startTime+d.duration-e),i=1-(t/d.duration||0),n=0,o=d.tweens.length;n<o;n++)d.tweens[n].run(i);return r.notifyWith(s,[d,i,t]),i<1&&o?t:(o||r.notifyWith(s,[d,1,0]),r.resolveWith(s,[d]),!1)},d=r.promise({elem:s,props:k.extend({},e),opts:k.extend(!0,{specialEasing:{},easing:k.easing._default},t),originalProperties:e,originalOptions:t,startTime:ut||yt(),duration:t.duration,tweens:[],createTween:function(e,t){var i=k.Tween(s,d.opts,e,t,d.opts.specialEasing[e]||d.opts.easing);return d.tweens.push(i),i},stop:function(e){var t=0,i=e?d.tweens.length:0;if(a)return this;for(a=!0;t<i;t++)d.tweens[t].run(1);return e?(r.notifyWith(s,[d,1,0]),r.resolveWith(s,[d,e])):r.rejectWith(s,[d,e]),this}}),c=d.props;for(!function(e,t){var i,n,o,s,a;for(i in e)if(o=t[n=Y(i)],s=e[i],Array.isArray(s)&&(o=s[1],s=e[i]=s[0]),i!==n&&(e[n]=s,delete e[i]),(a=k.cssHooks[n])&&"expand"in a)for(i in s=a.expand(s),delete e[n],s)i in e||(e[i]=s[i],t[i]=o);else t[n]=o}(c,d.opts.specialEasing);n<o;n++)if(i=wt.prefilters[n].call(d,s,c,d.opts))return b(i.stop)&&(k._queueHooks(d.elem,d.opts.queue).stop=i.stop.bind(i)),i;return k.map(c,xt,d),b(d.opts.start)&&d.opts.start.call(s,d),d.progress(d.opts.progress).done(d.opts.done,d.opts.complete).fail(d.opts.fail).always(d.opts.always),k.fx.timer(k.extend(l,{elem:s,anim:d,queue:d.opts.queue})),d}k.Animation=k.extend(wt,{tweeners:{"*":[function(e,t){var i=this.createTween(e,t);return re(i.elem,e,te.exec(t),i),i}]},tweener:function(e,t){for(var i,n=0,o=(e=b(e)?(t=e,["*"]):e.match(O)).length;n<o;n++)i=e[n],wt.tweeners[i]=wt.tweeners[i]||[],wt.tweeners[i].unshift(t)},prefilters:[function(e,t,i){var n,o,s,a,r,l,d,c,u="width"in t||"height"in t,p=this,h={},f=e.style,m=e.nodeType&&ae(e),g=U.get(e,"fxshow");for(n in i.queue||(null==(a=k._queueHooks(e,"fx")).unqueued&&(a.unqueued=0,r=a.empty.fire,a.empty.fire=function(){a.unqueued||r()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,k.queue(e,"fx").length||a.empty.fire()})})),t)if(o=t[n],mt.test(o)){if(delete t[n],s=s||"toggle"===o,o===(m?"hide":"show")){if("show"!==o||!g||void 0===g[n])continue;m=!0}h[n]=g&&g[n]||k.style(e,n)}if((l=!k.isEmptyObject(t))||!k.isEmptyObject(h))for(n in u&&1===e.nodeType&&(i.overflow=[f.overflow,f.overflowX,f.overflowY],null==(d=g&&g.display)&&(d=U.get(e,"display")),"none"===(c=k.css(e,"display"))&&(d?c=d:(de([e],!0),d=e.style.display||d,c=k.css(e,"display"),de([e]))),("inline"===c||"inline-block"===c&&null!=d)&&"none"===k.css(e,"float")&&(l||(p.done(function(){f.display=d}),null==d&&(c=f.display,d="none"===c?"":c)),f.display="inline-block")),i.overflow&&(f.overflow="hidden",p.always(function(){f.overflow=i.overflow[0],f.overflowX=i.overflow[1],f.overflowY=i.overflow[2]})),l=!1,h)l||(g?"hidden"in g&&(m=g.hidden):g=U.access(e,"fxshow",{display:d}),s&&(g.hidden=!m),m&&de([e],!0),p.done(function(){for(n in m||de([e]),U.remove(e,"fxshow"),h)k.style(e,n,h[n])})),l=xt(m?g[n]:0,n,p),n in g||(g[n]=l.start,m&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?wt.prefilters.unshift(e):wt.prefilters.push(e)}}),k.speed=function(e,t,i){var n=e&&"object"==typeof e?k.extend({},e):{complete:i||!i&&t||b(e)&&e,duration:e,easing:i&&t||t&&!b(t)&&t};return k.fx.off?n.duration=0:"number"!=typeof n.duration&&(n.duration in k.fx.speeds?n.duration=k.fx.speeds[n.duration]:n.duration=k.fx.speeds._default),null!=n.queue&&!0!==n.queue||(n.queue="fx"),n.old=n.complete,n.complete=function(){b(n.old)&&n.old.call(this),n.queue&&k.dequeue(this,n.queue)},n},k.fn.extend({fadeTo:function(e,t,i,n){return this.filter(ae).css("opacity",0).show().end().animate({opacity:t},e,i,n)},animate:function(t,e,i,n){function o(){var e=wt(this,k.extend({},t),a);(s||U.get(this,"finish"))&&e.stop(!0)}var s=k.isEmptyObject(t),a=k.speed(e,i,n);return o.finish=o,s||!1===a.queue?this.each(o):this.queue(a.queue,o)},stop:function(o,e,s){function a(e){var t=e.stop;delete e.stop,t(s)}return"string"!=typeof o&&(s=e,e=o,o=void 0),e&&this.queue(o||"fx",[]),this.each(function(){var e=!0,t=null!=o&&o+"queueHooks",i=k.timers,n=U.get(this);if(t)n[t]&&n[t].stop&&a(n[t]);else for(t in n)n[t]&&n[t].stop&&gt.test(t)&&a(n[t]);for(t=i.length;t--;)i[t].elem!==this||null!=o&&i[t].queue!==o||(i[t].anim.stop(s),e=!1,i.splice(t,1));!e&&s||k.dequeue(this,o)})},finish:function(a){return!1!==a&&(a=a||"fx"),this.each(function(){var e,t=U.get(this),i=t[a+"queue"],n=t[a+"queueHooks"],o=k.timers,s=i?i.length:0;for(t.finish=!0,k.queue(this,a,[]),n&&n.stop&&n.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===a&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;e<s;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete t.finish})}}),k.each(["toggle","show","hide"],function(e,n){var o=k.fn[n];k.fn[n]=function(e,t,i){return null==e||"boolean"==typeof e?o.apply(this,arguments):this.animate(bt(n,!0),e,t,i)}}),k.each({slideDown:bt("show"),slideUp:bt("hide"),slideToggle:bt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,n){k.fn[e]=function(e,t,i){return this.animate(n,e,t,i)}}),k.timers=[],k.fx.tick=function(){var e,t=0,i=k.timers;for(ut=Date.now();t<i.length;t++)(e=i[t])()||i[t]!==e||i.splice(t--,1);i.length||k.fx.stop(),ut=void 0},k.fx.timer=function(e){k.timers.push(e),k.fx.start()},k.fx.interval=13,k.fx.start=function(){pt||(pt=!0,vt())},k.fx.stop=function(){pt=null},k.fx.speeds={slow:600,fast:200,_default:400},k.fn.delay=function(n,e){return n=k.fx&&k.fx.speeds[n]||n,e=e||"fx",this.queue(e,function(e,t){var i=T.setTimeout(e,n);t.stop=function(){T.clearTimeout(i)}})},ht=C.createElement("input"),ft=C.createElement("select").appendChild(C.createElement("option")),ht.type="checkbox",y.checkOn=""!==ht.value,y.optSelected=ft.selected,(ht=C.createElement("input")).value="t",ht.type="radio",y.radioValue="t"===ht.value;var St,Tt=k.expr.attrHandle;k.fn.extend({attr:function(e,t){return q(this,k.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){k.removeAttr(this,e)})}}),k.extend({attr:function(e,t,i){var n,o,s=e.nodeType;if(3!==s&&8!==s&&2!==s)return void 0===e.getAttribute?k.prop(e,t,i):(1===s&&k.isXMLDoc(e)||(o=k.attrHooks[t.toLowerCase()]||(k.expr.match.bool.test(t)?St:void 0)),void 0!==i?null===i?void k.removeAttr(e,t):o&&"set"in o&&void 0!==(n=o.set(e,i,t))?n:(e.setAttribute(t,i+""),i):!(o&&"get"in o&&null!==(n=o.get(e,t)))&&null==(n=k.find.attr(e,t))?void 0:n)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&"radio"===t&&$(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}},removeAttr:function(e,t){var i,n=0,o=t&&t.match(O);if(o&&1===e.nodeType)for(;i=o[n++];)e.removeAttribute(i)}}),St={set:function(e,t,i){return!1===t?k.removeAttr(e,i):e.setAttribute(i,i),i}},k.each(k.expr.match.bool.source.match(/\w+/g),function(e,t){var a=Tt[t]||k.find.attr;Tt[t]=function(e,t,i){var n,o,s=t.toLowerCase();return i||(o=Tt[s],Tt[s]=n,n=null!=a(e,t,i)?s:null,Tt[s]=o),n}});var Ct=/^(?:input|select|textarea|button)$/i,kt=/^(?:a|area)$/i;function Et(e){return(e.match(O)||[]).join(" ")}function $t(e){return e.getAttribute&&e.getAttribute("class")||""}function Mt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(O)||[]}k.fn.extend({prop:function(e,t){return q(this,k.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[k.propFix[e]||e]})}}),k.extend({prop:function(e,t,i){var n,o,s=e.nodeType;if(3!==s&&8!==s&&2!==s)return 1===s&&k.isXMLDoc(e)||(t=k.propFix[t]||t,o=k.propHooks[t]),void 0!==i?o&&"set"in o&&void 0!==(n=o.set(e,i,t))?n:e[t]=i:o&&"get"in o&&null!==(n=o.get(e,t))?n:e[t]},propHooks:{tabIndex:{get:function(e){var t=k.find.attr(e,"tabindex");return t?parseInt(t,10):Ct.test(e.nodeName)||kt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),y.optSelected||(k.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),k.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){k.propFix[this.toLowerCase()]=this}),k.fn.extend({addClass:function(t){var e,i,n,o,s,a,r,l=0;if(b(t))return this.each(function(e){k(this).addClass(t.call(this,e,$t(this)))});if((e=Mt(t)).length)for(;i=this[l++];)if(o=$t(i),n=1===i.nodeType&&" "+Et(o)+" "){for(a=0;s=e[a++];)n.indexOf(" "+s+" ")<0&&(n+=s+" ");o!==(r=Et(n))&&i.setAttribute("class",r)}return this},removeClass:function(t){var e,i,n,o,s,a,r,l=0;if(b(t))return this.each(function(e){k(this).removeClass(t.call(this,e,$t(this)))});if(!arguments.length)return this.attr("class","");if((e=Mt(t)).length)for(;i=this[l++];)if(o=$t(i),n=1===i.nodeType&&" "+Et(o)+" "){for(a=0;s=e[a++];)for(;-1<n.indexOf(" "+s+" ");)n=n.replace(" "+s+" "," ");o!==(r=Et(n))&&i.setAttribute("class",r)}return this},toggleClass:function(o,t){var s=typeof o,a="string"==s||Array.isArray(o);return"boolean"==typeof t&&a?t?this.addClass(o):this.removeClass(o):b(o)?this.each(function(e){k(this).toggleClass(o.call(this,e,$t(this),t),t)}):this.each(function(){var e,t,i,n;if(a)for(t=0,i=k(this),n=Mt(o);e=n[t++];)i.hasClass(e)?i.removeClass(e):i.addClass(e);else void 0!==o&&"boolean"!=s||((e=$t(this))&&U.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",!e&&!1!==o&&U.get(this,"__className__")||""))})},hasClass:function(e){for(var t,i=0,n=" "+e+" ";t=this[i++];)if(1===t.nodeType&&-1<(" "+Et($t(t))+" ").indexOf(n))return!0;return!1}});var Pt=/\r/g;k.fn.extend({val:function(i){var n,e,o,t=this[0];return arguments.length?(o=b(i),this.each(function(e){var t;1===this.nodeType&&(null==(t=o?i.call(this,e,k(this).val()):i)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=k.map(t,function(e){return null==e?"":e+""})),(n=k.valHooks[this.type]||k.valHooks[this.nodeName.toLowerCase()])&&"set"in n&&void 0!==n.set(this,t,"value")||(this.value=t))})):t?(n=k.valHooks[t.type]||k.valHooks[t.nodeName.toLowerCase()])&&"get"in n&&void 0!==(e=n.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(Pt,""):null==e?"":e:void 0}}),k.extend({valHooks:{option:{get:function(e){var t=k.find.attr(e,"value");return null!=t?t:Et(k.text(e))}},select:{get:function(e){for(var t,i,n=e.options,o=e.selectedIndex,s="select-one"===e.type,a=s?null:[],r=s?o+1:n.length,l=o<0?r:s?o:0;l<r;l++)if(((i=n[l]).selected||l===o)&&!i.disabled&&(!i.parentNode.disabled||!$(i.parentNode,"optgroup"))){if(t=k(i).val(),s)return t;a.push(t)}return a},set:function(e,t){for(var i,n,o=e.options,s=k.makeArray(t),a=o.length;a--;)((n=o[a]).selected=-1<k.inArray(k.valHooks.option.get(n),s))&&(i=!0);return i||(e.selectedIndex=-1),s}}}}),k.each(["radio","checkbox"],function(){k.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<k.inArray(k(e).val(),t)}},y.checkOn||(k.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),y.focusin="onfocusin"in T;function At(e){e.stopPropagation()}var Lt=/^(?:focusinfocus|focusoutblur)$/;k.extend(k.event,{trigger:function(e,t,i,n){var o,s,a,r,l,d,c,u=[i||C],p=v.call(e,"type")?e.type:e,h=v.call(e,"namespace")?e.namespace.split("."):[],f=c=s=i=i||C;if(3!==i.nodeType&&8!==i.nodeType&&!Lt.test(p+k.event.triggered)&&(-1<p.indexOf(".")&&(p=(h=p.split(".")).shift(),h.sort()),r=p.indexOf(":")<0&&"on"+p,(e=e[k.expando]?e:new k.Event(p,"object"==typeof e&&e)).isTrigger=n?2:3,e.namespace=h.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),t=null==t?[e]:k.makeArray(t,[e]),d=k.event.special[p]||{},n||!d.trigger||!1!==d.trigger.apply(i,t))){if(!n&&!d.noBubble&&!m(i)){for(a=d.delegateType||p,Lt.test(a+p)||(f=f.parentNode);f;f=f.parentNode)u.push(f),s=f;s===(i.ownerDocument||C)&&u.push(s.defaultView||s.parentWindow||T)}for(o=0;(f=u[o++])&&!e.isPropagationStopped();)c=f,e.type=1<o?a:d.bindType||p,(l=(U.get(f,"events")||Object.create(null))[e.type]&&U.get(f,"handle"))&&l.apply(f,t),(l=r&&f[r])&&l.apply&&G(f)&&(e.result=l.apply(f,t),!1===e.result&&e.preventDefault());return e.type=p,n||e.isDefaultPrevented()||d._default&&!1!==d._default.apply(u.pop(),t)||!G(i)||r&&b(i[p])&&!m(i)&&((s=i[r])&&(i[r]=null),k.event.triggered=p,e.isPropagationStopped()&&c.addEventListener(p,At),i[p](),e.isPropagationStopped()&&c.removeEventListener(p,At),k.event.triggered=void 0,s&&(i[r]=s)),e.result}},simulate:function(e,t,i){var n=k.extend(new k.Event,i,{type:e,isSimulated:!0});k.event.trigger(n,null,t)}}),k.fn.extend({trigger:function(e,t){return this.each(function(){k.event.trigger(e,t,this)})},triggerHandler:function(e,t){var i=this[0];if(i)return k.event.trigger(e,t,i,!0)}}),y.focusin||k.each({focus:"focusin",blur:"focusout"},function(i,n){function o(e){k.event.simulate(n,e.target,k.event.fix(e))}k.event.special[n]={setup:function(){var e=this.ownerDocument||this.document||this,t=U.access(e,n);t||e.addEventListener(i,o,!0),U.access(e,n,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=U.access(e,n)-1;t?U.access(e,n,t):(e.removeEventListener(i,o,!0),U.remove(e,n))}}});var Dt=T.location,zt={guid:Date.now()},It=/\?/;k.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new T.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||k.error("Invalid XML: "+e),t};var Ot=/\[\]$/,_t=/\r?\n/g,Bt=/^(?:submit|button|image|reset|file)$/i,Ht=/^(?:input|select|textarea|keygen)/i;function Nt(i,e,n,o){var t;if(Array.isArray(e))k.each(e,function(e,t){n||Ot.test(i)?o(i,t):Nt(i+"["+("object"==typeof t&&null!=t?e:"")+"]",t,n,o)});else if(n||"object"!==w(e))o(i,e);else for(t in e)Nt(i+"["+t+"]",e[t],n,o)}k.param=function(e,t){function i(e,t){var i=b(t)?t():t;o[o.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==i?"":i)}var n,o=[];if(null==e)return"";if(Array.isArray(e)||e.jquery&&!k.isPlainObject(e))k.each(e,function(){i(this.name,this.value)});else for(n in e)Nt(n,e[n],t,i);return o.join("&")},k.fn.extend({serialize:function(){return k.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=k.prop(this,"elements");return e?k.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!k(this).is(":disabled")&&Ht.test(this.nodeName)&&!Bt.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var i=k(this).val();return null==i?null:Array.isArray(i)?k.map(i,function(e){return{name:t.name,value:e.replace(_t,"\r\n")}}):{name:t.name,value:i.replace(_t,"\r\n")}}).get()}});var jt=/%20/g,Rt=/#.*$/,qt=/([?&])_=[^&]*/,Ft=/^(.*?):[ \t]*([^\r\n]*)$/gm,Wt=/^(?:GET|HEAD)$/,Xt=/^\/\//,Yt={},Gt={},Vt="*/".concat("*"),Ut=C.createElement("a");function Kt(s){return function(e,t){"string"!=typeof e&&(t=e,e="*");var i,n=0,o=e.toLowerCase().match(O)||[];if(b(t))for(;i=o[n++];)"+"===i[0]?(i=i.slice(1)||"*",(s[i]=s[i]||[]).unshift(t)):(s[i]=s[i]||[]).push(t)}}function Zt(t,o,s,a){var r={},l=t===Gt;function d(e){var n;return r[e]=!0,k.each(t[e]||[],function(e,t){var i=t(o,s,a);return"string"!=typeof i||l||r[i]?l?!(n=i):void 0:(o.dataTypes.unshift(i),d(i),!1)}),n}return d(o.dataTypes[0])||!r["*"]&&d("*")}function Qt(e,t){var i,n,o=k.ajaxSettings.flatOptions||{};for(i in t)void 0!==t[i]&&((o[i]?e:n=n||{})[i]=t[i]);return n&&k.extend(!0,e,n),e}Ut.href=Dt.href,k.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Dt.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Dt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Vt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":k.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Qt(Qt(e,k.ajaxSettings),t):Qt(k.ajaxSettings,e)},ajaxPrefilter:Kt(Yt),ajaxTransport:Kt(Gt),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var c,u,p,i,h,n,f,m,o,s,g=k.ajaxSetup({},t),v=g.context||g,y=g.context&&(v.nodeType||v.jquery)?k(v):k.event,b=k.Deferred(),x=k.Callbacks("once memory"),w=g.statusCode||{},a={},r={},l="canceled",S={readyState:0,getResponseHeader:function(e){var t;if(f){if(!i)for(i={};t=Ft.exec(p);)i[t[1].toLowerCase()+" "]=(i[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=i[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return f?p:null},setRequestHeader:function(e,t){return null==f&&(e=r[e.toLowerCase()]=r[e.toLowerCase()]||e,a[e]=t),this},overrideMimeType:function(e){return null==f&&(g.mimeType=e),this},statusCode:function(e){var t;if(e)if(f)S.always(e[S.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||l;return c&&c.abort(t),d(0,t),this}};if(b.promise(S),g.url=((e||g.url||Dt.href)+"").replace(Xt,Dt.protocol+"//"),g.type=t.method||t.type||g.method||g.type,g.dataTypes=(g.dataType||"*").toLowerCase().match(O)||[""],null==g.crossDomain){n=C.createElement("a");try{n.href=g.url,n.href=n.href,g.crossDomain=Ut.protocol+"//"+Ut.host!=n.protocol+"//"+n.host}catch(e){g.crossDomain=!0}}if(g.data&&g.processData&&"string"!=typeof g.data&&(g.data=k.param(g.data,g.traditional)),Zt(Yt,g,t,S),f)return S;for(o in(m=k.event&&g.global)&&0==k.active++&&k.event.trigger("ajaxStart"),g.type=g.type.toUpperCase(),g.hasContent=!Wt.test(g.type),u=g.url.replace(Rt,""),g.hasContent?g.data&&g.processData&&0===(g.contentType||"").indexOf("application/x-www-form-urlencoded")&&(g.data=g.data.replace(jt,"+")):(s=g.url.slice(u.length),g.data&&(g.processData||"string"==typeof g.data)&&(u+=(It.test(u)?"&":"?")+g.data,delete g.data),!1===g.cache&&(u=u.replace(qt,"$1"),s=(It.test(u)?"&":"?")+"_="+zt.guid+++s),g.url=u+s),g.ifModified&&(k.lastModified[u]&&S.setRequestHeader("If-Modified-Since",k.lastModified[u]),k.etag[u]&&S.setRequestHeader("If-None-Match",k.etag[u])),(g.data&&g.hasContent&&!1!==g.contentType||t.contentType)&&S.setRequestHeader("Content-Type",g.contentType),S.setRequestHeader("Accept",g.dataTypes[0]&&g.accepts[g.dataTypes[0]]?g.accepts[g.dataTypes[0]]+("*"!==g.dataTypes[0]?", "+Vt+"; q=0.01":""):g.accepts["*"]),g.headers)S.setRequestHeader(o,g.headers[o]);if(g.beforeSend&&(!1===g.beforeSend.call(v,S,g)||f))return S.abort();if(l="abort",x.add(g.complete),S.done(g.success),S.fail(g.error),c=Zt(Gt,g,t,S)){if(S.readyState=1,m&&y.trigger("ajaxSend",[S,g]),f)return S;g.async&&0<g.timeout&&(h=T.setTimeout(function(){S.abort("timeout")},g.timeout));try{f=!1,c.send(a,d)}catch(e){if(f)throw e;d(-1,e)}}else d(-1,"No Transport");function d(e,t,i,n){var o,s,a,r,l,d=t;f||(f=!0,h&&T.clearTimeout(h),c=void 0,p=n||"",S.readyState=0<e?4:0,o=200<=e&&e<300||304===e,i&&(r=function(e,t,i){for(var n,o,s,a,r=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=e.mimeType||t.getResponseHeader("Content-Type"));if(n)for(o in r)if(r[o]&&r[o].test(n)){l.unshift(o);break}if(l[0]in i)s=l[0];else{for(o in i){if(!l[0]||e.converters[o+" "+l[0]]){s=o;break}a=a||o}s=s||a}if(s)return s!==l[0]&&l.unshift(s),i[s]}(g,S,i)),!o&&-1<k.inArray("script",g.dataTypes)&&(g.converters["text script"]=function(){}),r=function(e,t,i,n){var o,s,a,r,l,d={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)d[a.toLowerCase()]=e.converters[a];for(s=c.shift();s;)if(e.responseFields[s]&&(i[e.responseFields[s]]=t),!l&&n&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=s,s=c.shift())if("*"===s)s=l;else if("*"!==l&&l!==s){if(!(a=d[l+" "+s]||d["* "+s]))for(o in d)if((r=o.split(" "))[1]===s&&(a=d[l+" "+r[0]]||d["* "+r[0]])){!0===a?a=d[o]:!0!==d[o]&&(s=r[0],c.unshift(r[1]));break}if(!0!==a)if(a&&e.throws)t=a(t);else try{t=a(t)}catch(e){return{state:"parsererror",error:a?e:"No conversion from "+l+" to "+s}}}return{state:"success",data:t}}(g,r,S,o),o?(g.ifModified&&((l=S.getResponseHeader("Last-Modified"))&&(k.lastModified[u]=l),(l=S.getResponseHeader("etag"))&&(k.etag[u]=l)),204===e||"HEAD"===g.type?d="nocontent":304===e?d="notmodified":(d=r.state,s=r.data,o=!(a=r.error))):(a=d,!e&&d||(d="error",e<0&&(e=0))),S.status=e,S.statusText=(t||d)+"",o?b.resolveWith(v,[s,d,S]):b.rejectWith(v,[S,d,a]),S.statusCode(w),w=void 0,m&&y.trigger(o?"ajaxSuccess":"ajaxError",[S,g,o?s:a]),x.fireWith(v,[S,d]),m&&(y.trigger("ajaxComplete",[S,g]),--k.active||k.event.trigger("ajaxStop")))}return S},getJSON:function(e,t,i){return k.get(e,t,i,"json")},getScript:function(e,t){return k.get(e,void 0,t,"script")}}),k.each(["get","post"],function(e,o){k[o]=function(e,t,i,n){return b(t)&&(n=n||i,i=t,t=void 0),k.ajax(k.extend({url:e,type:o,dataType:n,data:t,success:i},k.isPlainObject(e)&&e))}}),k.ajaxPrefilter(function(e){var t;for(t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")}),k._evalUrl=function(e,t,i){return k.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){k.globalEval(e,t,i)}})},k.fn.extend({wrapAll:function(e){var t;return this[0]&&(b(e)&&(e=e.call(this[0])),t=k(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(i){return b(i)?this.each(function(e){k(this).wrapInner(i.call(this,e))}):this.each(function(){var e=k(this),t=e.contents();t.length?t.wrapAll(i):e.append(i)})},wrap:function(t){var i=b(t);return this.each(function(e){k(this).wrapAll(i?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){k(this).replaceWith(this.childNodes)}),this}}),k.expr.pseudos.hidden=function(e){return!k.expr.pseudos.visible(e)},k.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},k.ajaxSettings.xhr=function(){try{return new T.XMLHttpRequest}catch(e){}};var Jt={0:200,1223:204},ei=k.ajaxSettings.xhr();y.cors=!!ei&&"withCredentials"in ei,y.ajax=ei=!!ei,k.ajaxTransport(function(o){var s,a;if(y.cors||ei&&!o.crossDomain)return{send:function(e,t){var i,n=o.xhr();if(n.open(o.type,o.url,o.async,o.username,o.password),o.xhrFields)for(i in o.xhrFields)n[i]=o.xhrFields[i];for(i in o.mimeType&&n.overrideMimeType&&n.overrideMimeType(o.mimeType),o.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)n.setRequestHeader(i,e[i]);s=function(e){return function(){s&&(s=a=n.onload=n.onerror=n.onabort=n.ontimeout=n.onreadystatechange=null,"abort"===e?n.abort():"error"===e?"number"!=typeof n.status?t(0,"error"):t(n.status,n.statusText):t(Jt[n.status]||n.status,n.statusText,"text"!==(n.responseType||"text")||"string"!=typeof n.responseText?{binary:n.response}:{text:n.responseText},n.getAllResponseHeaders()))}},n.onload=s(),a=n.onerror=n.ontimeout=s("error"),void 0!==n.onabort?n.onabort=a:n.onreadystatechange=function(){4===n.readyState&&T.setTimeout(function(){s&&a()})},s=s("abort");try{n.send(o.hasContent&&o.data||null)}catch(e){if(s)throw e}},abort:function(){s&&s()}}}),k.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),k.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return k.globalEval(e),e}}}),k.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),k.ajaxTransport("script",function(i){var n,o;if(i.crossDomain||i.scriptAttrs)return{send:function(e,t){n=k("<script>").attr(i.scriptAttrs||{}).prop({charset:i.scriptCharset,src:i.url}).on("load error",o=function(e){n.remove(),o=null,e&&t("error"===e.type?404:200,e.type)}),C.head.appendChild(n[0])},abort:function(){o&&o()}}});var ti,ii=[],ni=/(=)\?(?=&|$)|\?\?/;k.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=ii.pop()||k.expando+"_"+zt.guid++;return this[e]=!0,e}}),k.ajaxPrefilter("json jsonp",function(e,t,i){var n,o,s,a=!1!==e.jsonp&&(ni.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&ni.test(e.data)&&"data");if(a||"jsonp"===e.dataTypes[0])return n=e.jsonpCallback=b(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(ni,"$1"+n):!1!==e.jsonp&&(e.url+=(It.test(e.url)?"&":"?")+e.jsonp+"="+n),e.converters["script json"]=function(){return s||k.error(n+" was not called"),s[0]},e.dataTypes[0]="json",o=T[n],T[n]=function(){s=arguments},i.always(function(){void 0===o?k(T).removeProp(n):T[n]=o,e[n]&&(e.jsonpCallback=t.jsonpCallback,ii.push(n)),s&&b(o)&&o(s[0]),s=o=void 0}),"script"}),y.createHTMLDocument=((ti=C.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===ti.childNodes.length),k.parseHTML=function(e,t,i){return"string"!=typeof e?[]:("boolean"==typeof t&&(i=t,t=!1),t||(y.createHTMLDocument?((n=(t=C.implementation.createHTMLDocument("")).createElement("base")).href=C.location.href,t.head.appendChild(n)):t=C),s=!i&&[],(o=M.exec(e))?[t.createElement(o[1])]:(o=be([e],t,s),s&&s.length&&k(s).remove(),k.merge([],o.childNodes)));var n,o,s},k.fn.load=function(e,t,i){var n,o,s,a=this,r=e.indexOf(" ");return-1<r&&(n=Et(e.slice(r)),e=e.slice(0,r)),b(t)?(i=t,t=void 0):t&&"object"==typeof t&&(o="POST"),0<a.length&&k.ajax({url:e,type:o||"GET",dataType:"html",data:t}).done(function(e){s=arguments,a.html(n?k("<div>").append(k.parseHTML(e)).find(n):e)}).always(i&&function(e,t){a.each(function(){i.apply(this,s||[e.responseText,t,e])})}),this},k.expr.pseudos.animated=function(t){return k.grep(k.timers,function(e){return t===e.elem}).length},k.offset={setOffset:function(e,t,i){var n,o,s,a,r,l,d=k.css(e,"position"),c=k(e),u={};"static"===d&&(e.style.position="relative"),r=c.offset(),s=k.css(e,"top"),l=k.css(e,"left"),o=("absolute"===d||"fixed"===d)&&-1<(s+l).indexOf("auto")?(a=(n=c.position()).top,n.left):(a=parseFloat(s)||0,parseFloat(l)||0),b(t)&&(t=t.call(e,i,k.extend({},r))),null!=t.top&&(u.top=t.top-r.top+a),null!=t.left&&(u.left=t.left-r.left+o),"using"in t?t.using.call(e,u):("number"==typeof u.top&&(u.top+="px"),"number"==typeof u.left&&(u.left+="px"),c.css(u))}},k.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){k.offset.setOffset(this,t,e)});var e,i,n=this[0];return n?n.getClientRects().length?(e=n.getBoundingClientRect(),i=n.ownerDocument.defaultView,{top:e.top+i.pageYOffset,left:e.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,i,n=this[0],o={top:0,left:0};if("fixed"===k.css(n,"position"))t=n.getBoundingClientRect();else{for(t=this.offset(),i=n.ownerDocument,e=n.offsetParent||i.documentElement;e&&(e===i.body||e===i.documentElement)&&"static"===k.css(e,"position");)e=e.parentNode;e&&e!==n&&1===e.nodeType&&((o=k(e).offset()).top+=k.css(e,"borderTopWidth",!0),o.left+=k.css(e,"borderLeftWidth",!0))}return{top:t.top-o.top-k.css(n,"marginTop",!0),left:t.left-o.left-k.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===k.css(e,"position");)e=e.offsetParent;return e||ne})}}),k.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,o){var s="pageYOffset"===o;k.fn[t]=function(e){return q(this,function(e,t,i){var n;if(m(e)?n=e:9===e.nodeType&&(n=e.defaultView),void 0===i)return n?n[o]:e[t];n?n.scrollTo(s?n.pageXOffset:i,s?i:n.pageYOffset):e[t]=i},t,e,arguments.length)}}),k.each(["top","left"],function(e,i){k.cssHooks[i]=Qe(y.pixelPosition,function(e,t){if(t)return t=Ze(e,i),Ye.test(t)?k(e).position()[i]+"px":t})}),k.each({Height:"height",Width:"width"},function(a,r){k.each({padding:"inner"+a,content:r,"":"outer"+a},function(n,s){k.fn[s]=function(e,t){var i=arguments.length&&(n||"boolean"!=typeof e),o=n||(!0===e||!0===t?"margin":"border");return q(this,function(e,t,i){var n;return m(e)?0===s.indexOf("outer")?e["inner"+a]:e.document.documentElement["client"+a]:9===e.nodeType?(n=e.documentElement,Math.max(e.body["scroll"+a],n["scroll"+a],e.body["offset"+a],n["offset"+a],n["client"+a])):void 0===i?k.css(e,t,o):k.style(e,t,i,o)},r,i?e:void 0,i)}})}),k.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){k.fn[t]=function(e){return this.on(t,e)}}),k.fn.extend({bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,n){return this.on(t,e,i,n)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)},hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),k.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,i){k.fn[i]=function(e,t){return 0<arguments.length?this.on(i,null,e,t):this.trigger(i)}});var oi=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;k.proxy=function(e,t){var i,n,o;if("string"==typeof t&&(i=e[t],t=e,e=i),b(e))return n=r.call(arguments,2),(o=function(){return e.apply(t||this,n.concat(r.call(arguments)))}).guid=e.guid=e.guid||k.guid++,o},k.holdReady=function(e){e?k.readyWait++:k.ready(!0)},k.isArray=Array.isArray,k.parseJSON=JSON.parse,k.nodeName=$,k.isFunction=b,k.isWindow=m,k.camelCase=Y,k.type=w,k.now=Date.now,k.isNumeric=function(e){var t=k.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},k.trim=function(e){return null==e?"":(e+"").replace(oi,"")},"function"==typeof define&&define.amd&&define("jquery",[],function(){return k});var si=T.jQuery,ai=T.$;return k.noConflict=function(e){return T.$===k&&(T.$=ai),e&&T.jQuery===k&&(T.jQuery=si),k},void 0===e&&(T.jQuery=T.$=k),k}),function(e,t){"object"==("undefined"==typeof exports?"undefined":_typeof(exports))&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):e.Swiper=t()}(this,function(){"use strict";var m="undefined"==typeof document?{body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},location:{hash:""}}:document,N="undefined"==typeof window?{document:m,navigator:{userAgent:""},location:{},history:{},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){}}:window,l=function(e){for(var t=0;t<e.length;t+=1)this[t]=e[t];return this.length=e.length,this};function L(e,t){var i=[],n=0;if(e&&!t&&e instanceof l)return e;if(e)if("string"==typeof e){var o,s,a=e.trim();if(0<=a.indexOf("<")&&0<=a.indexOf(">")){var r="div";for(0===a.indexOf("<li")&&(r="ul"),0===a.indexOf("<tr")&&(r="tbody"),0!==a.indexOf("<td")&&0!==a.indexOf("<th")||(r="tr"),0===a.indexOf("<tbody")&&(r="table"),0===a.indexOf("<option")&&(r="select"),(s=m.createElement(r)).innerHTML=a,n=0;n<s.childNodes.length;n+=1)i.push(s.childNodes[n])}else for(o=t||"#"!==e[0]||e.match(/[ .<>:~]/)?(t||m).querySelectorAll(e.trim()):[m.getElementById(e.trim().split("#")[1])],n=0;n<o.length;n+=1)o[n]&&i.push(o[n])}else if(e.nodeType||e===N||e===m)i.push(e);else if(0<e.length&&e[0].nodeType)for(n=0;n<e.length;n+=1)i.push(e[n]);return new l(i)}function s(e){for(var t=[],i=0;i<e.length;i+=1)-1===t.indexOf(e[i])&&t.push(e[i]);return t}L.fn=l.prototype,L.Class=l,L.Dom7=l;var t={addClass:function(e){if(void 0===e)return this;for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var n=0;n<this.length;n+=1)void 0!==this[n]&&void 0!==this[n].classList&&this[n].classList.add(t[i]);return this},removeClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var n=0;n<this.length;n+=1)void 0!==this[n]&&void 0!==this[n].classList&&this[n].classList.remove(t[i]);return this},hasClass:function(e){return!!this[0]&&this[0].classList.contains(e)},toggleClass:function(e){for(var t=e.split(" "),i=0;i<t.length;i+=1)for(var n=0;n<this.length;n+=1)void 0!==this[n]&&void 0!==this[n].classList&&this[n].classList.toggle(t[i]);return this},attr:function(e,t){var i=arguments;if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var n=0;n<this.length;n+=1)if(2===i.length)this[n].setAttribute(e,t);else for(var o in e)this[n][o]=e[o],this[n].setAttribute(o,e[o]);return this},removeAttr:function(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this},data:function(e,t){var i;if(void 0!==t){for(var n=0;n<this.length;n+=1)(i=this[n]).dom7ElementDataStorage||(i.dom7ElementDataStorage={}),i.dom7ElementDataStorage[e]=t;return this}if(i=this[0])return i.dom7ElementDataStorage&&e in i.dom7ElementDataStorage?i.dom7ElementDataStorage[e]:i.getAttribute("data-"+e)||void 0},transform:function(e){for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransform=e,i.transform=e}return this},transition:function(e){"string"!=typeof e&&(e+="ms");for(var t=0;t<this.length;t+=1){var i=this[t].style;i.webkitTransitionDuration=e,i.transitionDuration=e}return this},on:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i=e[0],s=e[1],a=e[2],n=e[3];function o(e){var t=e.target;if(t){var i=e.target.dom7EventData||[];if(i.indexOf(e)<0&&i.unshift(e),L(t).is(s))a.apply(t,i);else for(var n=L(t).parents(),o=0;o<n.length;o+=1)L(n[o]).is(s)&&a.apply(n[o],i)}}function r(e){var t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),a.apply(this,t)}"function"==typeof e[1]&&(i=e[0],a=e[1],n=e[2],s=void 0),n=n||!1;for(var l,d=i.split(" "),c=0;c<this.length;c+=1){var u=this[c];if(s)for(l=0;l<d.length;l+=1){var p=d[l];u.dom7LiveListeners||(u.dom7LiveListeners={}),u.dom7LiveListeners[p]||(u.dom7LiveListeners[p]=[]),u.dom7LiveListeners[p].push({listener:a,proxyListener:o}),u.addEventListener(p,o,n)}else for(l=0;l<d.length;l+=1){var h=d[l];u.dom7Listeners||(u.dom7Listeners={}),u.dom7Listeners[h]||(u.dom7Listeners[h]=[]),u.dom7Listeners[h].push({listener:a,proxyListener:r}),u.addEventListener(h,r,n)}}return this},off:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i=e[0],n=e[1],o=e[2],s=e[3];"function"==typeof e[1]&&(i=e[0],o=e[1],s=e[2],n=void 0),s=s||!1;for(var a=i.split(" "),r=0;r<a.length;r+=1)for(var l=a[r],d=0;d<this.length;d+=1){var c=this[d],u=void 0;if(!n&&c.dom7Listeners?u=c.dom7Listeners[l]:n&&c.dom7LiveListeners&&(u=c.dom7LiveListeners[l]),u&&u.length)for(var p=u.length-1;0<=p;--p){var h=u[p];(!o||h.listener!==o)&&o||(c.removeEventListener(l,h.proxyListener,s),u.splice(p,1))}}return this},trigger:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=e[0].split(" "),n=e[1],o=0;o<i.length;o+=1)for(var s=i[o],a=0;a<this.length;a+=1){var r=this[a],l=void 0;try{l=new N.CustomEvent(s,{detail:n,bubbles:!0,cancelable:!0})}catch(e){(l=m.createEvent("Event")).initEvent(s,!0,!0),l.detail=n}r.dom7EventData=e.filter(function(e,t){return 0<t}),r.dispatchEvent(l),r.dom7EventData=[],delete r.dom7EventData}return this},transitionEnd:function(t){var i,n=["webkitTransitionEnd","transitionend"],o=this;function s(e){if(e.target===this)for(t.call(this,e),i=0;i<n.length;i+=1)o.off(n[i],s)}if(t)for(i=0;i<n.length;i+=1)o.on(n[i],s);return this},outerWidth:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetWidth+parseFloat(t.getPropertyValue("margin-right"))+parseFloat(t.getPropertyValue("margin-left"))}return this[0].offsetWidth}return null},outerHeight:function(e){if(0<this.length){if(e){var t=this.styles();return this[0].offsetHeight+parseFloat(t.getPropertyValue("margin-top"))+parseFloat(t.getPropertyValue("margin-bottom"))}return this[0].offsetHeight}return null},offset:function(){if(0<this.length){var e=this[0],t=e.getBoundingClientRect(),i=m.body,n=e.clientTop||i.clientTop||0,o=e.clientLeft||i.clientLeft||0,s=e===N?N.scrollY:e.scrollTop,a=e===N?N.scrollX:e.scrollLeft;return{top:t.top+s-n,left:t.left+a-o}}return null},css:function(e,t){var i;if(1===arguments.length){if("string"!=typeof e){for(i=0;i<this.length;i+=1)for(var n in e)this[i].style[n]=e[n];return this}if(this[0])return N.getComputedStyle(this[0],null).getPropertyValue(e)}if(2!==arguments.length||"string"!=typeof e)return this;for(i=0;i<this.length;i+=1)this[i].style[e]=t;return this},each:function(e){if(!e)return this;for(var t=0;t<this.length;t+=1)if(!1===e.call(this[t],t,this[t]))return this;return this},html:function(e){if(void 0===e)return this[0]?this[0].innerHTML:void 0;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this},text:function(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this},is:function(e){var t,i,n=this[0];if(!n||void 0===e)return!1;if("string"==typeof e){if(n.matches)return n.matches(e);if(n.webkitMatchesSelector)return n.webkitMatchesSelector(e);if(n.msMatchesSelector)return n.msMatchesSelector(e);for(t=L(e),i=0;i<t.length;i+=1)if(t[i]===n)return!0;return!1}if(e===m)return n===m;if(e===N)return n===N;if(e.nodeType||e instanceof l){for(t=e.nodeType?[e]:e,i=0;i<t.length;i+=1)if(t[i]===n)return!0;return!1}return!1},index:function(){var e,t=this[0];if(t){for(e=0;null!==(t=t.previousSibling);)1===t.nodeType&&(e+=1);return e}},eq:function(e){if(void 0===e)return this;var t,i=this.length;return new l(i-1<e?[]:e<0?(t=i+e)<0?[]:[this[t]]:[this[e]])},append:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];for(var n=0;n<t.length;n+=1){e=t[n];for(var o=0;o<this.length;o+=1)if("string"==typeof e){var s=m.createElement("div");for(s.innerHTML=e;s.firstChild;)this[o].appendChild(s.firstChild)}else if(e instanceof l)for(var a=0;a<e.length;a+=1)this[o].appendChild(e[a]);else this[o].appendChild(e)}return this},prepend:function(e){for(var t,i=this,n=0;n<this.length;n+=1)if("string"==typeof e){var o=m.createElement("div");for(o.innerHTML=e,t=o.childNodes.length-1;0<=t;--t)i[n].insertBefore(o.childNodes[t],i[n].childNodes[0])}else if(e instanceof l)for(t=0;t<e.length;t+=1)i[n].insertBefore(e[t],i[n].childNodes[0]);else i[n].insertBefore(e,i[n].childNodes[0]);return this},next:function(e){return 0<this.length?e?this[0].nextElementSibling&&L(this[0].nextElementSibling).is(e)?new l([this[0].nextElementSibling]):new l([]):this[0].nextElementSibling?new l([this[0].nextElementSibling]):new l([]):new l([])},nextAll:function(e){var t=[],i=this[0];if(!i)return new l([]);for(;i.nextElementSibling;){var n=i.nextElementSibling;e&&!L(n).is(e)||t.push(n),i=n}return new l(t)},prev:function(e){if(0<this.length){var t=this[0];return e?t.previousElementSibling&&L(t.previousElementSibling).is(e)?new l([t.previousElementSibling]):new l([]):t.previousElementSibling?new l([t.previousElementSibling]):new l([])}return new l([])},prevAll:function(e){var t=[],i=this[0];if(!i)return new l([]);for(;i.previousElementSibling;){var n=i.previousElementSibling;e&&!L(n).is(e)||t.push(n),i=n}return new l(t)},parent:function(e){for(var t=[],i=0;i<this.length;i+=1)null===this[i].parentNode||e&&!L(this[i].parentNode).is(e)||t.push(this[i].parentNode);return L(s(t))},parents:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].parentNode;n;)e&&!L(n).is(e)||t.push(n),n=n.parentNode;return L(s(t))},closest:function(e){var t=this;return void 0===e?new l([]):(t.is(e)||(t=t.parents(e).eq(0)),t)},find:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].querySelectorAll(e),o=0;o<n.length;o+=1)t.push(n[o]);return new l(t)},children:function(e){for(var t=[],i=0;i<this.length;i+=1)for(var n=this[i].childNodes,o=0;o<n.length;o+=1)e?1===n[o].nodeType&&L(n[o]).is(e)&&t.push(n[o]):1===n[o].nodeType&&t.push(n[o]);return new l(s(t))},remove:function(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this},add:function(){for(var e,t=[],i=arguments.length;i--;)t[i]=arguments[i];for(e=0;e<t.length;e+=1)for(var n=L(t[e]),o=0;o<n.length;o+=1)this[this.length]=n[o],this.length+=1;return this},styles:function(){return this[0]?N.getComputedStyle(this[0],null):{}}};Object.keys(t).forEach(function(e){L.fn[e]=t[e]});function e(e){void 0===e&&(e={});var t=this;t.params=e,t.eventsListeners={},t.params&&t.params.on&&Object.keys(t.params.on).forEach(function(e){t.on(e,t.params.on[e])})}var i,n,o,j={deleteProps:function(e){var t=e;Object.keys(t).forEach(function(e){try{t[e]=null}catch(e){}try{delete t[e]}catch(e){}})},nextTick:function(e,t){return void 0===t&&(t=0),setTimeout(e,t)},now:function(){return Date.now()},getTranslate:function(e,t){var i,n,o;void 0===t&&(t="x");var s=N.getComputedStyle(e,null);return N.WebKitCSSMatrix?(6<(n=s.transform||s.webkitTransform).split(",").length&&(n=n.split(", ").map(function(e){return e.replace(",",".")}).join(", ")),o=new N.WebKitCSSMatrix("none"===n?"":n)):i=(o=s.MozTransform||s.OTransform||s.MsTransform||s.msTransform||s.transform||s.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,")).toString().split(","),"x"===t&&(n=N.WebKitCSSMatrix?o.m41:16===i.length?parseFloat(i[12]):parseFloat(i[4])),"y"===t&&(n=N.WebKitCSSMatrix?o.m42:16===i.length?parseFloat(i[13]):parseFloat(i[5])),n||0},parseUrlQuery:function(e){var t,i,n,o,s={},a=e||N.location.href;if("string"==typeof a&&a.length)for(o=(i=(a=-1<a.indexOf("?")?a.replace(/\S*\?/,""):"").split("&").filter(function(e){return""!==e})).length,t=0;t<o;t+=1)n=i[t].replace(/#\S+/g,"").split("="),s[decodeURIComponent(n[0])]=void 0===n[1]?void 0:decodeURIComponent(n[1])||"";return s},isObject:function(e){return"object"==_typeof(e)&&null!==e&&e.constructor&&e.constructor===Object},extend:function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];for(var i=Object(e[0]),n=1;n<e.length;n+=1){var o=e[n];if(null!=o)for(var s=Object.keys(Object(o)),a=0,r=s.length;a<r;a+=1){var l=s[a],d=Object.getOwnPropertyDescriptor(o,l);void 0!==d&&d.enumerable&&(j.isObject(i[l])&&j.isObject(o[l])?j.extend(i[l],o[l]):!j.isObject(i[l])&&j.isObject(o[l])?(i[l]={},j.extend(i[l],o[l])):i[l]=o[l])}}return i}},R=(o=m.createElement("div"),{touch:N.Modernizr&&!0===N.Modernizr.touch||!!("ontouchstart"in N||N.DocumentTouch&&m instanceof N.DocumentTouch),pointerEvents:!(!N.navigator.pointerEnabled&&!N.PointerEvent),prefixedPointerEvents:!!N.navigator.msPointerEnabled,transition:"transition"in(n=o.style)||"webkitTransition"in n||"MozTransition"in n,transforms3d:N.Modernizr&&!0===N.Modernizr.csstransforms3d||("webkitPerspective"in(i=o.style)||"MozPerspective"in i||"OPerspective"in i||"MsPerspective"in i||"perspective"in i),flexbox:function(){for(var e=o.style,t="alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient".split(" "),i=0;i<t.length;i+=1)if(t[i]in e)return!0;return!1}(),observer:"MutationObserver"in N||"WebkitMutationObserver"in N,passiveListener:function(){var e=!1;try{var t=Object.defineProperty({},"passive",{get:function(){e=!0}});N.addEventListener("testPassiveListener",null,t)}catch(e){}return e}(),gestures:"ongesturestart"in N}),a={components:{configurable:!0}};e.prototype.on=function(e,t,i){var n=this;if("function"!=typeof t)return n;var o=i?"unshift":"push";return e.split(" ").forEach(function(e){n.eventsListeners[e]||(n.eventsListeners[e]=[]),n.eventsListeners[e][o](t)}),n},e.prototype.once=function(n,o,e){var s=this;return"function"!=typeof o?s:s.on(n,function e(){for(var t=[],i=arguments.length;i--;)t[i]=arguments[i];o.apply(s,t),s.off(n,e)},e)},e.prototype.off=function(e,n){var o=this;return o.eventsListeners&&e.split(" ").forEach(function(i){void 0===n?o.eventsListeners[i]=[]:o.eventsListeners[i].forEach(function(e,t){e===n&&o.eventsListeners[i].splice(t,1)})}),o},e.prototype.emit=function(){for(var e=[],t=arguments.length;t--;)e[t]=arguments[t];var i,n,o,s=this;return s.eventsListeners&&(o="string"==typeof e[0]||Array.isArray(e[0])?(i=e[0],n=e.slice(1,e.length),s):(i=e[0].events,n=e[0].data,e[0].context||s),(Array.isArray(i)?i:i.split(" ")).forEach(function(e){var t;s.eventsListeners&&s.eventsListeners[e]&&(t=[],s.eventsListeners[e].forEach(function(e){t.push(e)}),t.forEach(function(e){e.apply(o,n)}))})),s},e.prototype.useModulesParams=function(i){var n=this;n.modules&&Object.keys(n.modules).forEach(function(e){var t=n.modules[e];t.params&&j.extend(i,t.params)})},e.prototype.useModules=function(n){void 0===n&&(n={});var o=this;o.modules&&Object.keys(o.modules).forEach(function(e){var i=o.modules[e],t=n[e]||{};i.instance&&Object.keys(i.instance).forEach(function(e){var t=i.instance[e];o[e]="function"==typeof t?t.bind(o):t}),i.on&&o.on&&Object.keys(i.on).forEach(function(e){o.on(e,i.on[e])}),i.create&&i.create.bind(o)(t)})},a.components.set=function(e){this.use&&this.use(e)},e.installModule=function(t){for(var e=[],i=arguments.length-1;0<i--;)e[i]=arguments[i+1];var n=this;n.prototype.modules||(n.prototype.modules={});var o=t.name||Object.keys(n.prototype.modules).length+"_"+j.now();return(n.prototype.modules[o]=t).proto&&Object.keys(t.proto).forEach(function(e){n.prototype[e]=t.proto[e]}),t.static&&Object.keys(t.static).forEach(function(e){n[e]=t.static[e]}),t.install&&t.install.apply(n,e),n},e.use=function(e){for(var t=[],i=arguments.length-1;0<i--;)t[i]=arguments[i+1];var n=this;return Array.isArray(e)?(e.forEach(function(e){return n.installModule(e)}),n):n.installModule.apply(n,[e].concat(t))},Object.defineProperties(e,a);var r,d,c,u,p,h,f,g,v,y={updateSize:function(){var e=this,t=e.$el,i=void 0!==e.params.width?e.params.width:t[0].clientWidth,n=void 0!==e.params.height?e.params.height:t[0].clientHeight;0===i&&e.isHorizontal()||0===n&&e.isVertical()||(i=i-parseInt(t.css("padding-left"),10)-parseInt(t.css("padding-right"),10),n=n-parseInt(t.css("padding-top"),10)-parseInt(t.css("padding-bottom"),10),j.extend(e,{width:i,height:n,size:e.isHorizontal()?i:n}))},updateSlides:function(){var e=this,t=e.params,i=e.$wrapperEl,n=e.size,o=e.rtlTranslate,s=e.wrongRTL,a=e.virtual&&t.virtual.enabled,r=a?e.virtual.slides.length:e.slides.length,l=i.children("."+e.params.slideClass),d=a?e.virtual.slides.length:l.length,c=[],u=[],p=[],h=t.slidesOffsetBefore;"function"==typeof h&&(h=t.slidesOffsetBefore.call(e));var f=t.slidesOffsetAfter;"function"==typeof f&&(f=t.slidesOffsetAfter.call(e));var m,g,v=e.snapGrid.length,y=e.snapGrid.length,b=t.spaceBetween,x=-h,w=0,S=0;if(void 0!==n){"string"==typeof b&&0<=b.indexOf("%")&&(b=parseFloat(b.replace("%",""))/100*n),e.virtualSize=-b,o?l.css({marginLeft:"",marginTop:""}):l.css({marginRight:"",marginBottom:""}),1<t.slidesPerColumn&&(m=Math.floor(d/t.slidesPerColumn)===d/e.params.slidesPerColumn?d:Math.ceil(d/t.slidesPerColumn)*t.slidesPerColumn,"auto"!==t.slidesPerView&&"row"===t.slidesPerColumnFill&&(m=Math.max(m,t.slidesPerView*t.slidesPerColumn)));for(var T,C=t.slidesPerColumn,k=m/C,E=k-(t.slidesPerColumn*k-d),$=0;$<d;$+=1){g=0;var M,P,A,L,D,z,I=l.eq($);1<t.slidesPerColumn&&(A=P=M=void 0,"column"===t.slidesPerColumnFill?(A=$-(P=Math.floor($/C))*C,(E<P||P===E&&A===C-1)&&C<=(A+=1)&&(A=0,P+=1),M=P+A*m/C,I.css({"-webkit-box-ordinal-group":M,"-moz-box-ordinal-group":M,"-ms-flex-order":M,"-webkit-order":M,order:M})):P=$-(A=Math.floor($/k))*k,I.css("margin-"+(e.isHorizontal()?"top":"left"),0!==A&&t.spaceBetween&&t.spaceBetween+"px").attr("data-swiper-column",P).attr("data-swiper-row",A)),"none"!==I.css("display")&&("auto"===t.slidesPerView?(L=N.getComputedStyle(I[0],null),D=I[0].style.transform,z=I[0].style.webkitTransform,D&&(I[0].style.transform="none"),z&&(I[0].style.webkitTransform="none"),g=e.isHorizontal()?I[0].getBoundingClientRect().width+parseFloat(L.getPropertyValue("margin-left"))+parseFloat(L.getPropertyValue("margin-right")):I[0].getBoundingClientRect().height+parseFloat(L.getPropertyValue("margin-top"))+parseFloat(L.getPropertyValue("margin-bottom")),D&&(I[0].style.transform=D),z&&(I[0].style.webkitTransform=z),t.roundLengths&&(g=Math.floor(g))):(g=(n-(t.slidesPerView-1)*b)/t.slidesPerView,t.roundLengths&&(g=Math.floor(g)),l[$]&&(e.isHorizontal()?l[$].style.width=g+"px":l[$].style.height=g+"px")),l[$]&&(l[$].swiperSlideSize=g),p.push(g),t.centeredSlides?(x=x+g/2+w/2+b,0===w&&0!==$&&(x=x-n/2-b),0===$&&(x=x-n/2-b),Math.abs(x)<.001&&(x=0),t.roundLengths&&(x=Math.floor(x)),S%t.slidesPerGroup==0&&c.push(x),u.push(x)):(t.roundLengths&&(x=Math.floor(x)),S%t.slidesPerGroup==0&&c.push(x),u.push(x),x=x+g+b),e.virtualSize+=g+b,w=g,S+=1)}if(e.virtualSize=Math.max(e.virtualSize,n)+f,o&&s&&("slide"===t.effect||"coverflow"===t.effect)&&i.css({width:e.virtualSize+t.spaceBetween+"px"}),R.flexbox&&!t.setWrapperSize||(e.isHorizontal()?i.css({width:e.virtualSize+t.spaceBetween+"px"}):i.css({height:e.virtualSize+t.spaceBetween+"px"})),1<t.slidesPerColumn&&(e.virtualSize=(g+t.spaceBetween)*m,e.virtualSize=Math.ceil(e.virtualSize/t.slidesPerColumn)-t.spaceBetween,e.isHorizontal()?i.css({width:e.virtualSize+t.spaceBetween+"px"}):i.css({height:e.virtualSize+t.spaceBetween+"px"}),t.centeredSlides)){T=[];for(var O=0;O<c.length;O+=1){var _=c[O];t.roundLengths&&(_=Math.floor(_)),c[O]<e.virtualSize+c[0]&&T.push(_)}c=T}if(!t.centeredSlides){T=[];for(var B=0;B<c.length;B+=1){var H=c[B];t.roundLengths&&(H=Math.floor(H)),c[B]<=e.virtualSize-n&&T.push(H)}c=T,1<Math.floor(e.virtualSize-n)-Math.floor(c[c.length-1])&&c.push(e.virtualSize-n)}0===c.length&&(c=[0]),0!==t.spaceBetween&&(e.isHorizontal()?o?l.css({marginLeft:b+"px"}):l.css({marginRight:b+"px"}):l.css({marginBottom:b+"px"})),j.extend(e,{slides:l,snapGrid:c,slidesGrid:u,slidesSizesGrid:p}),d!==r&&e.emit("slidesLengthChange"),c.length!==v&&(e.params.watchOverflow&&e.checkOverflow(),e.emit("snapGridLengthChange")),u.length!==y&&e.emit("slidesGridLengthChange"),(t.watchSlidesProgress||t.watchSlidesVisibility)&&e.updateSlidesOffset()}},updateAutoHeight:function(e){var t,i,n=this,o=[],s=0;if("number"==typeof e?n.setTransition(e):!0===e&&n.setTransition(n.params.speed),"auto"!==n.params.slidesPerView&&1<n.params.slidesPerView)for(t=0;t<Math.ceil(n.params.slidesPerView);t+=1){var a=n.activeIndex+t;if(a>n.slides.length)break;o.push(n.slides.eq(a)[0])}else o.push(n.slides.eq(n.activeIndex)[0]);for(t=0;t<o.length;t+=1){void 0!==o[t]&&(s=s<(i=o[t].offsetHeight)?i:s)}s&&n.$wrapperEl.css("height",s+"px")},updateSlidesOffset:function(){for(var e=this.slides,t=0;t<e.length;t+=1)e[t].swiperSlideOffset=this.isHorizontal()?e[t].offsetLeft:e[t].offsetTop},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this,i=t.params,n=t.slides,o=t.rtlTranslate;if(0!==n.length){void 0===n[0].swiperSlideOffset&&t.updateSlidesOffset();var s=o?e:-e;n.removeClass(i.slideVisibleClass);for(var a=0;a<n.length;a+=1){var r,l,d=n[a],c=(s+(i.centeredSlides?t.minTranslate():0)-d.swiperSlideOffset)/(d.swiperSlideSize+i.spaceBetween);i.watchSlidesVisibility&&(l=(r=-(s-d.swiperSlideOffset))+t.slidesSizesGrid[a],(0<=r&&r<t.size||0<l&&l<=t.size||r<=0&&l>=t.size)&&n.eq(a).addClass(i.slideVisibleClass)),d.progress=o?-c:c}}},updateProgress:function(e){void 0===e&&(e=this&&this.translate||0);var t=this,i=t.params,n=t.maxTranslate()-t.minTranslate(),o=t.progress,s=t.isBeginning,a=s,r=l=t.isEnd,l=0==n?s=!(o=0):(s=(o=(e-t.minTranslate())/n)<=0,1<=o);j.extend(t,{progress:o,isBeginning:s,isEnd:l}),(i.watchSlidesProgress||i.watchSlidesVisibility)&&t.updateSlidesProgress(e),s&&!a&&t.emit("reachBeginning toEdge"),l&&!r&&t.emit("reachEnd toEdge"),(a&&!s||r&&!l)&&t.emit("fromEdge"),t.emit("progress",o)},updateSlidesClasses:function(){var e,t=this,i=t.slides,n=t.params,o=t.$wrapperEl,s=t.activeIndex,a=t.realIndex,r=t.virtual&&n.virtual.enabled;i.removeClass(n.slideActiveClass+" "+n.slideNextClass+" "+n.slidePrevClass+" "+n.slideDuplicateActiveClass+" "+n.slideDuplicateNextClass+" "+n.slideDuplicatePrevClass),(e=r?t.$wrapperEl.find("."+n.slideClass+'[data-swiper-slide-index="'+s+'"]'):i.eq(s)).addClass(n.slideActiveClass),n.loop&&(e.hasClass(n.slideDuplicateClass)?o.children("."+n.slideClass+":not(."+n.slideDuplicateClass+')[data-swiper-slide-index="'+a+'"]').addClass(n.slideDuplicateActiveClass):o.children("."+n.slideClass+"."+n.slideDuplicateClass+'[data-swiper-slide-index="'+a+'"]').addClass(n.slideDuplicateActiveClass));var l=e.nextAll("."+n.slideClass).eq(0).addClass(n.slideNextClass);n.loop&&0===l.length&&(l=i.eq(0)).addClass(n.slideNextClass);var d=e.prevAll("."+n.slideClass).eq(0).addClass(n.slidePrevClass);n.loop&&0===d.length&&(d=i.eq(-1)).addClass(n.slidePrevClass),n.loop&&(l.hasClass(n.slideDuplicateClass)?o.children("."+n.slideClass+":not(."+n.slideDuplicateClass+')[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(n.slideDuplicateNextClass):o.children("."+n.slideClass+"."+n.slideDuplicateClass+'[data-swiper-slide-index="'+l.attr("data-swiper-slide-index")+'"]').addClass(n.slideDuplicateNextClass),d.hasClass(n.slideDuplicateClass)?o.children("."+n.slideClass+":not(."+n.slideDuplicateClass+')[data-swiper-slide-index="'+d.attr("data-swiper-slide-index")+'"]').addClass(n.slideDuplicatePrevClass):o.children("."+n.slideClass+"."+n.slideDuplicateClass+'[data-swiper-slide-index="'+d.attr("data-swiper-slide-index")+'"]').addClass(n.slideDuplicatePrevClass))},updateActiveIndex:function(e){var t,i,n=this,o=n.rtlTranslate?n.translate:-n.translate,s=n.slidesGrid,a=n.snapGrid,r=n.params,l=n.activeIndex,d=n.realIndex,c=n.snapIndex,u=e;if(void 0===u){for(var p=0;p<s.length;p+=1)void 0!==s[p+1]?o>=s[p]&&o<s[p+1]-(s[p+1]-s[p])/2?u=p:o>=s[p]&&o<s[p+1]&&(u=p+1):o>=s[p]&&(u=p);r.normalizeSlideIndex&&(u<0||void 0===u)&&(u=0)}(t=0<=a.indexOf(o)?a.indexOf(o):Math.floor(u/r.slidesPerGroup))>=a.length&&(t=a.length-1),u!==l?(i=parseInt(n.slides.eq(u).attr("data-swiper-slide-index")||u,10),j.extend(n,{snapIndex:t,realIndex:i,previousIndex:l,activeIndex:u}),n.emit("activeIndexChange"),n.emit("snapIndexChange"),d!==i&&n.emit("realIndexChange"),n.emit("slideChange")):t!==c&&(n.snapIndex=t,n.emit("snapIndexChange"))},updateClickedSlide:function(e){var t=this,i=t.params,n=L(e.target).closest("."+i.slideClass)[0],o=!1;if(n)for(var s=0;s<t.slides.length;s+=1)t.slides[s]===n&&(o=!0);if(!n||!o)return t.clickedSlide=void 0,void(t.clickedIndex=void 0);t.clickedSlide=n,t.virtual&&t.params.virtual.enabled?t.clickedIndex=parseInt(L(n).attr("data-swiper-slide-index"),10):t.clickedIndex=L(n).index(),i.slideToClickedSlide&&void 0!==t.clickedIndex&&t.clickedIndex!==t.activeIndex&&t.slideToClickedSlide()}},b={getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");var t=this.params,i=this.rtlTranslate,n=this.translate,o=this.$wrapperEl;if(t.virtualTranslate)return i?-n:n;var s=j.getTranslate(o[0],e);return i&&(s=-s),s||0},setTranslate:function(e,t){var i=this,n=i.rtlTranslate,o=i.params,s=i.$wrapperEl,a=i.progress,r=0,l=0;i.isHorizontal()?r=n?-e:e:l=e,o.roundLengths&&(r=Math.floor(r),l=Math.floor(l)),o.virtualTranslate||(R.transforms3d?s.transform("translate3d("+r+"px, "+l+"px, 0px)"):s.transform("translate("+r+"px, "+l+"px)")),i.previousTranslate=i.translate,i.translate=i.isHorizontal()?r:l;var d=i.maxTranslate()-i.minTranslate();(0==d?0:(e-i.minTranslate())/d)!==a&&i.updateProgress(e),i.emit("setTranslate",i.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]}},x={slideTo:function(e,t,i,n){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var o=this,s=e;s<0&&(s=0);var a=o.params,r=o.snapGrid,l=o.slidesGrid,d=o.previousIndex,c=o.activeIndex,u=o.rtlTranslate;if(o.animating&&a.preventInteractionOnTransition)return!1;var p=Math.floor(s/a.slidesPerGroup);p>=r.length&&(p=r.length-1),(c||a.initialSlide||0)===(d||0)&&i&&o.emit("beforeSlideChangeStart");var h,f=-r[p];if(o.updateProgress(f),a.normalizeSlideIndex)for(var m=0;m<l.length;m+=1)-Math.floor(100*f)>=Math.floor(100*l[m])&&(s=m);if(o.initialized&&s!==c){if(!o.allowSlideNext&&f<o.translate&&f<o.minTranslate())return!1;if(!o.allowSlidePrev&&f>o.translate&&f>o.maxTranslate()&&(c||0)!==s)return!1}return h=c<s?"next":s<c?"prev":"reset",u&&-f===o.translate||!u&&f===o.translate?(o.updateActiveIndex(s),a.autoHeight&&o.updateAutoHeight(),o.updateSlidesClasses(),"slide"!==a.effect&&o.setTranslate(f),"reset"!=h&&(o.transitionStart(i,h),o.transitionEnd(i,h)),!1):(0!==t&&R.transition?(o.setTransition(t),o.setTranslate(f),o.updateActiveIndex(s),o.updateSlidesClasses(),o.emit("beforeTransitionStart",t,n),o.transitionStart(i,h),o.animating||(o.animating=!0,o.onSlideToWrapperTransitionEnd||(o.onSlideToWrapperTransitionEnd=function(e){o&&!o.destroyed&&e.target===this&&(o.$wrapperEl[0].removeEventListener("transitionend",o.onSlideToWrapperTransitionEnd),o.$wrapperEl[0].removeEventListener("webkitTransitionEnd",o.onSlideToWrapperTransitionEnd),o.onSlideToWrapperTransitionEnd=null,delete o.onSlideToWrapperTransitionEnd,o.transitionEnd(i,h))}),o.$wrapperEl[0].addEventListener("transitionend",o.onSlideToWrapperTransitionEnd),o.$wrapperEl[0].addEventListener("webkitTransitionEnd",o.onSlideToWrapperTransitionEnd))):(o.setTransition(0),o.setTranslate(f),o.updateActiveIndex(s),o.updateSlidesClasses(),o.emit("beforeTransitionStart",t,n),o.transitionStart(i,h),o.transitionEnd(i,h)),!0)},slideToLoop:function(e,t,i,n){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===i&&(i=!0);var o=e;return this.params.loop&&(o+=this.loopedSlides),this.slideTo(o,t,i,n)},slideNext:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n=this,o=n.params,s=n.animating;return o.loop?!s&&(n.loopFix(),n._clientLeft=n.$wrapperEl[0].clientLeft,n.slideTo(n.activeIndex+o.slidesPerGroup,e,t,i)):n.slideTo(n.activeIndex+o.slidesPerGroup,e,t,i)},slidePrev:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n=this,o=n.params,s=n.animating,a=n.snapGrid,r=n.slidesGrid,l=n.rtlTranslate;if(o.loop){if(s)return!1;n.loopFix(),n._clientLeft=n.$wrapperEl[0].clientLeft}function d(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}var c,u=d(l?n.translate:-n.translate),p=a.map(d),h=(r.map(d),a[p.indexOf(u)],a[p.indexOf(u)-1]);return void 0!==h&&(c=r.indexOf(h))<0&&(c=n.activeIndex-1),n.slideTo(c,e,t,i)},slideReset:function(e,t,i){return void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),this.slideTo(this.activeIndex,e,t,i)},slideToClosest:function(e,t,i){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);var n,o,s=this,a=s.activeIndex,r=Math.floor(a/s.params.slidesPerGroup);return r<s.snapGrid.length-1&&(n=s.rtlTranslate?s.translate:-s.translate,o=s.snapGrid[r],(s.snapGrid[r+1]-o)/2<n-o&&(a=s.params.slidesPerGroup)),s.slideTo(a,e,t,i)},slideToClickedSlide:function(){var e,t=this,i=t.params,n=t.$wrapperEl,o="auto"===i.slidesPerView?t.slidesPerViewDynamic():i.slidesPerView,s=t.clickedIndex;if(i.loop){if(t.animating)return;e=parseInt(L(t.clickedSlide).attr("data-swiper-slide-index"),10),i.centeredSlides?s<t.loopedSlides-o/2||s>t.slides.length-t.loopedSlides+o/2?(t.loopFix(),s=n.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),j.nextTick(function(){t.slideTo(s)})):t.slideTo(s):s>t.slides.length-o?(t.loopFix(),s=n.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]:not(.'+i.slideDuplicateClass+")").eq(0).index(),j.nextTick(function(){t.slideTo(s)})):t.slideTo(s)}else t.slideTo(s)}},w={loopCreate:function(){var n=this,e=n.params,t=n.$wrapperEl;t.children("."+e.slideClass+"."+e.slideDuplicateClass).remove();var o=t.children("."+e.slideClass);if(e.loopFillGroupWithBlank){var i=e.slidesPerGroup-o.length%e.slidesPerGroup;if(i!==e.slidesPerGroup){for(var s=0;s<i;s+=1){var a=L(m.createElement("div")).addClass(e.slideClass+" "+e.slideBlankClass);t.append(a)}o=t.children("."+e.slideClass)}}"auto"!==e.slidesPerView||e.loopedSlides||(e.loopedSlides=o.length),n.loopedSlides=parseInt(e.loopedSlides||e.slidesPerView,10),n.loopedSlides+=e.loopAdditionalSlides,n.loopedSlides>o.length&&(n.loopedSlides=o.length);var r=[],l=[];o.each(function(e,t){var i=L(t);e<n.loopedSlides&&l.push(t),e<o.length&&e>=o.length-n.loopedSlides&&r.push(t),i.attr("data-swiper-slide-index",e)});for(var d=0;d<l.length;d+=1)t.append(L(l[d].cloneNode(!0)).addClass(e.slideDuplicateClass));for(var c=r.length-1;0<=c;--c)t.prepend(L(r[c].cloneNode(!0)).addClass(e.slideDuplicateClass))},loopFix:function(){var e,t=this,i=t.params,n=t.activeIndex,o=t.slides,s=t.loopedSlides,a=t.allowSlidePrev,r=t.allowSlideNext,l=t.snapGrid,d=t.rtlTranslate;t.allowSlidePrev=!0,t.allowSlideNext=!0;var c=-l[n]-t.getTranslate();n<s?(e=o.length-3*s+n,e+=s,t.slideTo(e,0,!1,!0)&&0!=c&&t.setTranslate((d?-t.translate:t.translate)-c)):("auto"===i.slidesPerView&&2*s<=n||n>=o.length-s)&&(e=-o.length+n+s,e+=s,t.slideTo(e,0,!1,!0)&&0!=c&&t.setTranslate((d?-t.translate:t.translate)-c)),t.allowSlidePrev=a,t.allowSlideNext=r},loopDestroy:function(){var e=this.$wrapperEl,t=this.params,i=this.slides;e.children("."+t.slideClass+"."+t.slideDuplicateClass).remove(),i.removeAttr("data-swiper-slide-index")}},S={setGrabCursor:function(e){var t;R.touch||!this.params.simulateTouch||this.params.watchOverflow&&this.isLocked||((t=this.el).style.cursor="move",t.style.cursor=e?"-webkit-grabbing":"-webkit-grab",t.style.cursor=e?"-moz-grabbin":"-moz-grab",t.style.cursor=e?"grabbing":"grab")},unsetGrabCursor:function(){R.touch||this.params.watchOverflow&&this.isLocked||(this.el.style.cursor="")}},T={appendSlide:function(e){var t=this,i=t.$wrapperEl,n=t.params;if(n.loop&&t.loopDestroy(),"object"==_typeof(e)&&"length"in e)for(var o=0;o<e.length;o+=1)e[o]&&i.append(e[o]);else i.append(e);n.loop&&t.loopCreate(),n.observer&&R.observer||t.update()},prependSlide:function(e){var t=this,i=t.params,n=t.$wrapperEl,o=t.activeIndex;i.loop&&t.loopDestroy();var s=o+1;if("object"==_typeof(e)&&"length"in e){for(var a=0;a<e.length;a+=1)e[a]&&n.prepend(e[a]);s=o+e.length}else n.prepend(e);i.loop&&t.loopCreate(),i.observer&&R.observer||t.update(),t.slideTo(s,0,!1)},addSlide:function(e,t){var i=this,n=i.$wrapperEl,o=i.params,s=i.activeIndex;o.loop&&(s-=i.loopedSlides,i.loopDestroy(),i.slides=n.children("."+o.slideClass));var a=i.slides.length;if(e<=0)i.prependSlide(t);else if(a<=e)i.appendSlide(t);else{for(var r=e<s?s+1:s,l=[],d=a-1;e<=d;--d){var c=i.slides.eq(d);c.remove(),l.unshift(c)}if("object"==_typeof(t)&&"length"in t){for(var u=0;u<t.length;u+=1)t[u]&&n.append(t[u]);r=e<s?s+t.length:s}else n.append(t);for(var p=0;p<l.length;p+=1)n.append(l[p]);o.loop&&i.loopCreate(),o.observer&&R.observer||i.update(),o.loop?i.slideTo(r+i.loopedSlides,0,!1):i.slideTo(r,0,!1)}},removeSlide:function(e){var t=this,i=t.params,n=t.$wrapperEl,o=t.activeIndex;i.loop&&(o-=t.loopedSlides,t.loopDestroy(),t.slides=n.children("."+i.slideClass));var s,a=o;if("object"==_typeof(e)&&"length"in e){for(var r=0;r<e.length;r+=1)s=e[r],t.slides[s]&&t.slides.eq(s).remove(),s<a&&--a;a=Math.max(a,0)}else s=e,t.slides[s]&&t.slides.eq(s).remove(),s<a&&--a,a=Math.max(a,0);i.loop&&t.loopCreate(),i.observer&&R.observer||t.update(),i.loop?t.slideTo(a+t.loopedSlides,0,!1):t.slideTo(a,0,!1)},removeAllSlides:function(){for(var e=[],t=0;t<this.slides.length;t+=1)e.push(t);this.removeSlide(e)}},C=(c=N.navigator.userAgent,u={ios:!1,android:!1,androidChrome:!1,desktop:!1,windows:!1,iphone:!1,ipod:!1,ipad:!1,cordova:N.cordova||N.phonegap,phonegap:N.cordova||N.phonegap},p=c.match(/(Windows Phone);?[\s\/]+([\d.]+)?/),h=c.match(/(Android);?[\s\/]+([\d.]+)?/),f=c.match(/(iPad).*OS\s([\d_]+)/),g=c.match(/(iPod)(.*OS\s([\d_]+))?/),v=!f&&c.match(/(iPhone\sOS|iOS)\s([\d_]+)/),p&&(u.os="windows",u.osVersion=p[2],u.windows=!0),h&&!p&&(u.os="android",u.osVersion=h[2],u.android=!0,u.androidChrome=0<=c.toLowerCase().indexOf("chrome")),(f||v||g)&&(u.os="ios",u.ios=!0),v&&!g&&(u.osVersion=v[2].replace(/_/g,"."),u.iphone=!0),f&&(u.osVersion=f[2].replace(/_/g,"."),u.ipad=!0),g&&(u.osVersion=g[3]?g[3].replace(/_/g,"."):null,u.iphone=!0),u.ios&&u.osVersion&&0<=c.indexOf("Version/")&&"10"===u.osVersion.split(".")[0]&&(u.osVersion=c.toLowerCase().split("version/")[1].split(" ")[0]),u.desktop=!(u.os||u.android||u.webView),u.webView=(v||f||g)&&c.match(/.*AppleWebKit(?!.*Safari)/i),u.os&&"ios"===u.os&&(r=u.osVersion.split("."),d=m.querySelector('meta[name="viewport"]'),u.minimalUi=!u.webView&&(g||v)&&(7==+r[0]?1<=+r[1]:7<+r[0])&&d&&0<=d.getAttribute("content").indexOf("minimal-ui")),u.pixelRatio=N.devicePixelRatio||1,u);function k(){var e,t,i,n,o=this,s=o.params,a=o.el;a&&0===a.offsetWidth||(s.breakpoints&&o.setBreakpoint(),e=o.allowSlideNext,t=o.allowSlidePrev,i=o.snapGrid,o.allowSlideNext=!0,o.allowSlidePrev=!0,o.updateSize(),o.updateSlides(),s.freeMode?(n=Math.min(Math.max(o.translate,o.maxTranslate()),o.minTranslate()),o.setTranslate(n),o.updateActiveIndex(),o.updateSlidesClasses(),s.autoHeight&&o.updateAutoHeight()):(o.updateSlidesClasses(),("auto"===s.slidesPerView||1<s.slidesPerView)&&o.isEnd&&!o.params.centeredSlides?o.slideTo(o.slides.length-1,0,!1,!0):o.slideTo(o.activeIndex,0,!1,!0)),o.allowSlidePrev=t,o.allowSlideNext=e,o.params.watchOverflow&&i!==o.snapGrid&&o.checkOverflow())}var E,$,M,P,A={attachEvents:function(){var e=this,t=e.params,i=e.touchEvents,n=e.el,o=e.wrapperEl;e.onTouchStart=function(e){var t,i,n,o,s,a,r=this,l=r.touchEventsData,d=r.params,c=r.touches;r.animating&&d.preventInteractionOnTransition||((t=e).originalEvent&&(t=t.originalEvent),l.isTouchEvent="touchstart"===t.type,!l.isTouchEvent&&"which"in t&&3===t.which||l.isTouched&&l.isMoved||(d.noSwiping&&L(t.target).closest(d.noSwipingSelector?d.noSwipingSelector:"."+d.noSwipingClass)[0]?r.allowClick=!0:d.swipeHandler&&!L(t).closest(d.swipeHandler)[0]||(c.currentX="touchstart"===t.type?t.targetTouches[0].pageX:t.pageX,c.currentY="touchstart"===t.type?t.targetTouches[0].pageY:t.pageY,i=c.currentX,n=c.currentY,o=d.edgeSwipeDetection||d.iOSEdgeSwipeDetection,s=d.edgeSwipeThreshold||d.iOSEdgeSwipeThreshold,o&&(i<=s||i>=N.screen.width-s)||(j.extend(l,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),c.startX=i,c.startY=n,l.touchStartTime=j.now(),r.allowClick=!0,r.updateSize(),r.swipeDirection=void 0,0<d.threshold&&(l.allowThresholdMove=!1),"touchstart"!==t.type&&(a=!0,L(t.target).is(l.formElements)&&(a=!1),m.activeElement&&L(m.activeElement).is(l.formElements)&&m.activeElement!==t.target&&m.activeElement.blur(),a&&r.allowTouchMove&&t.preventDefault()),r.emit("touchStart",t)))))}.bind(e),e.onTouchMove=function(e){var t=this,i=t.touchEventsData,n=t.params,o=t.touches,s=t.rtlTranslate,a=e;if(a.originalEvent&&(a=a.originalEvent),i.isTouched){if(!i.isTouchEvent||"mousemove"!==a.type){var r="touchmove"===a.type?a.targetTouches[0].pageX:a.pageX,l="touchmove"===a.type?a.targetTouches[0].pageY:a.pageY;if(a.preventedByNestedSwiper)return o.startX=r,void(o.startY=l);if(!t.allowTouchMove)return t.allowClick=!1,void(i.isTouched&&(j.extend(o,{startX:r,startY:l,currentX:r,currentY:l}),i.touchStartTime=j.now()));if(i.isTouchEvent&&n.touchReleaseOnEdges&&!n.loop)if(t.isVertical()){if(l<o.startY&&t.translate<=t.maxTranslate()||l>o.startY&&t.translate>=t.minTranslate())return i.isTouched=!1,void(i.isMoved=!1)}else if(r<o.startX&&t.translate<=t.maxTranslate()||r>o.startX&&t.translate>=t.minTranslate())return;if(i.isTouchEvent&&m.activeElement&&a.target===m.activeElement&&L(a.target).is(i.formElements))return i.isMoved=!0,void(t.allowClick=!1);if(i.allowTouchCallbacks&&t.emit("touchMove",a),!(a.targetTouches&&1<a.targetTouches.length)){o.currentX=r,o.currentY=l;var d,c=o.currentX-o.startX,u=o.currentY-o.startY;if(!(t.params.threshold&&Math.sqrt(Math.pow(c,2)+Math.pow(u,2))<t.params.threshold))if(void 0===i.isScrolling&&(t.isHorizontal()&&o.currentY===o.startY||t.isVertical()&&o.currentX===o.startX?i.isScrolling=!1:25<=c*c+u*u&&(d=180*Math.atan2(Math.abs(u),Math.abs(c))/Math.PI,i.isScrolling=t.isHorizontal()?d>n.touchAngle:90-d>n.touchAngle)),i.isScrolling&&t.emit("touchMoveOpposite",a),void 0===i.startMoving&&(o.currentX===o.startX&&o.currentY===o.startY||(i.startMoving=!0)),i.isScrolling)i.isTouched=!1;else if(i.startMoving){t.allowClick=!1,a.preventDefault(),n.touchMoveStopPropagation&&!n.nested&&a.stopPropagation(),i.isMoved||(n.loop&&t.loopFix(),i.startTranslate=t.getTranslate(),t.setTransition(0),t.animating&&t.$wrapperEl.trigger("webkitTransitionEnd transitionend"),i.allowMomentumBounce=!1,!n.grabCursor||!0!==t.allowSlideNext&&!0!==t.allowSlidePrev||t.setGrabCursor(!0),t.emit("sliderFirstMove",a)),t.emit("sliderMove",a),i.isMoved=!0;var p=t.isHorizontal()?c:u;o.diff=p,p*=n.touchRatio,s&&(p=-p),t.swipeDirection=0<p?"prev":"next",i.currentTranslate=p+i.startTranslate;var h=!0,f=n.resistanceRatio;if(n.touchReleaseOnEdges&&(f=0),0<p&&i.currentTranslate>t.minTranslate()?(h=!1,n.resistance&&(i.currentTranslate=t.minTranslate()-1+Math.pow(-t.minTranslate()+i.startTranslate+p,f))):p<0&&i.currentTranslate<t.maxTranslate()&&(h=!1,n.resistance&&(i.currentTranslate=t.maxTranslate()+1-Math.pow(t.maxTranslate()-i.startTranslate-p,f))),h&&(a.preventedByNestedSwiper=!0),!t.allowSlideNext&&"next"===t.swipeDirection&&i.currentTranslate<i.startTranslate&&(i.currentTranslate=i.startTranslate),!t.allowSlidePrev&&"prev"===t.swipeDirection&&i.currentTranslate>i.startTranslate&&(i.currentTranslate=i.startTranslate),0<n.threshold){if(!(Math.abs(p)>n.threshold||i.allowThresholdMove))return void(i.currentTranslate=i.startTranslate);if(!i.allowThresholdMove)return i.allowThresholdMove=!0,o.startX=o.currentX,o.startY=o.currentY,i.currentTranslate=i.startTranslate,void(o.diff=t.isHorizontal()?o.currentX-o.startX:o.currentY-o.startY)}n.followFinger&&((n.freeMode||n.watchSlidesProgress||n.watchSlidesVisibility)&&(t.updateActiveIndex(),t.updateSlidesClasses()),n.freeMode&&(0===i.velocities.length&&i.velocities.push({position:o[t.isHorizontal()?"startX":"startY"],time:i.touchStartTime}),i.velocities.push({position:o[t.isHorizontal()?"currentX":"currentY"],time:j.now()})),t.updateProgress(i.currentTranslate),t.setTranslate(i.currentTranslate))}}}}else i.startMoving&&i.isScrolling&&t.emit("touchMoveOpposite",a)}.bind(e),e.onTouchEnd=function(e){var t=this,i=t.touchEventsData,n=t.params,o=t.touches,s=t.rtlTranslate,a=t.$wrapperEl,r=t.slidesGrid,l=t.snapGrid,d=e;if(d.originalEvent&&(d=d.originalEvent),i.allowTouchCallbacks&&t.emit("touchEnd",d),i.allowTouchCallbacks=!1,!i.isTouched)return i.isMoved&&n.grabCursor&&t.setGrabCursor(!1),i.isMoved=!1,void(i.startMoving=!1);n.grabCursor&&i.isMoved&&i.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);var c,u,p,h,f,m=j.now(),g=m-i.touchStartTime;if(t.allowClick&&(t.updateClickedSlide(d),t.emit("tap",d),g<300&&300<m-i.lastClickTime&&(i.clickTimeout&&clearTimeout(i.clickTimeout),i.clickTimeout=j.nextTick(function(){t&&!t.destroyed&&t.emit("click",d)},300)),g<300&&m-i.lastClickTime<300&&(i.clickTimeout&&clearTimeout(i.clickTimeout),t.emit("doubleTap",d))),i.lastClickTime=j.now(),j.nextTick(function(){t.destroyed||(t.allowClick=!0)}),!i.isTouched||!i.isMoved||!t.swipeDirection||0===o.diff||i.currentTranslate===i.startTranslate)return i.isTouched=!1,i.isMoved=!1,void(i.startMoving=!1);if(i.isTouched=!1,i.isMoved=!1,i.startMoving=!1,c=n.followFinger?s?t.translate:-t.translate:-i.currentTranslate,n.freeMode){if(c<-t.minTranslate())return void t.slideTo(t.activeIndex);if(c>-t.maxTranslate())return void(t.slides.length<l.length?t.slideTo(l.length-1):t.slideTo(t.slides.length-1));if(n.freeModeMomentum){1<i.velocities.length?(u=i.velocities.pop(),p=i.velocities.pop(),h=u.position-p.position,f=u.time-p.time,t.velocity=h/f,t.velocity/=2,Math.abs(t.velocity)<n.freeModeMinimumVelocity&&(t.velocity=0),(150<f||300<j.now()-u.time)&&(t.velocity=0)):t.velocity=0,t.velocity*=n.freeModeMomentumVelocityRatio,i.velocities.length=0;var v=1e3*n.freeModeMomentumRatio,y=t.velocity*v,b=t.translate+y;s&&(b=-b);var x,w,S=!1,T=20*Math.abs(t.velocity)*n.freeModeMomentumBounceRatio;if(b<t.maxTranslate())n.freeModeMomentumBounce?(b+t.maxTranslate()<-T&&(b=t.maxTranslate()-T),x=t.maxTranslate(),S=!0,i.allowMomentumBounce=!0):b=t.maxTranslate(),n.loop&&n.centeredSlides&&(w=!0);else if(b>t.minTranslate())n.freeModeMomentumBounce?(b-t.minTranslate()>T&&(b=t.minTranslate()+T),x=t.minTranslate(),S=!0,i.allowMomentumBounce=!0):b=t.minTranslate(),n.loop&&n.centeredSlides&&(w=!0);else if(n.freeModeSticky){for(var C,k=0;k<l.length;k+=1)if(l[k]>-b){C=k;break}b=-(Math.abs(l[C]-b)<Math.abs(l[C-1]-b)||"next"===t.swipeDirection?l[C]:l[C-1])}if(w&&t.once("transitionEnd",function(){t.loopFix()}),0!==t.velocity)v=s?Math.abs((-b-t.translate)/t.velocity):Math.abs((b-t.translate)/t.velocity);else if(n.freeModeSticky)return void t.slideToClosest();n.freeModeMomentumBounce&&S?(t.updateProgress(x),t.setTransition(v),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating=!0,a.transitionEnd(function(){t&&!t.destroyed&&i.allowMomentumBounce&&(t.emit("momentumBounce"),t.setTransition(n.speed),t.setTranslate(x),a.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))})):t.velocity?(t.updateProgress(b),t.setTransition(v),t.setTranslate(b),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,a.transitionEnd(function(){t&&!t.destroyed&&t.transitionEnd()}))):t.updateProgress(b),t.updateActiveIndex(),t.updateSlidesClasses()}else if(n.freeModeSticky)return void t.slideToClosest();(!n.freeModeMomentum||g>=n.longSwipesMs)&&(t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}else{for(var E=0,$=t.slidesSizesGrid[0],M=0;M<r.length;M+=n.slidesPerGroup)void 0!==r[M+n.slidesPerGroup]?c>=r[M]&&c<r[M+n.slidesPerGroup]&&($=r[(E=M)+n.slidesPerGroup]-r[M]):c>=r[M]&&(E=M,$=r[r.length-1]-r[r.length-2]);var P=(c-r[E])/$;if(g>n.longSwipesMs){if(!n.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(P>=n.longSwipesRatio?t.slideTo(E+n.slidesPerGroup):t.slideTo(E)),"prev"===t.swipeDirection&&(P>1-n.longSwipesRatio?t.slideTo(E+n.slidesPerGroup):t.slideTo(E))}else{if(!n.shortSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&t.slideTo(E+n.slidesPerGroup),"prev"===t.swipeDirection&&t.slideTo(E)}}}.bind(e),e.onClick=function(e){this.allowClick||(this.params.preventClicks&&e.preventDefault(),this.params.preventClicksPropagation&&this.animating&&(e.stopPropagation(),e.stopImmediatePropagation()))}.bind(e);var s,a="container"===t.touchEventsTarget?n:o,r=!!t.nested;R.touch||!R.pointerEvents&&!R.prefixedPointerEvents?(R.touch&&(s=!("touchstart"!==i.start||!R.passiveListener||!t.passiveListeners)&&{passive:!0,capture:!1},a.addEventListener(i.start,e.onTouchStart,s),a.addEventListener(i.move,e.onTouchMove,R.passiveListener?{passive:!1,capture:r}:r),a.addEventListener(i.end,e.onTouchEnd,s)),(t.simulateTouch&&!C.ios&&!C.android||t.simulateTouch&&!R.touch&&C.ios)&&(a.addEventListener("mousedown",e.onTouchStart,!1),m.addEventListener("mousemove",e.onTouchMove,r),m.addEventListener("mouseup",e.onTouchEnd,!1))):(a.addEventListener(i.start,e.onTouchStart,!1),m.addEventListener(i.move,e.onTouchMove,r),m.addEventListener(i.end,e.onTouchEnd,!1)),(t.preventClicks||t.preventClicksPropagation)&&a.addEventListener("click",e.onClick,!0),e.on(C.ios||C.android?"resize orientationchange observerUpdate":"resize observerUpdate",k,!0)},detachEvents:function(){var e,t=this,i=t.params,n=t.touchEvents,o=t.el,s=t.wrapperEl,a="container"===i.touchEventsTarget?o:s,r=!!i.nested;R.touch||!R.pointerEvents&&!R.prefixedPointerEvents?(R.touch&&(e=!("onTouchStart"!==n.start||!R.passiveListener||!i.passiveListeners)&&{passive:!0,capture:!1},a.removeEventListener(n.start,t.onTouchStart,e),a.removeEventListener(n.move,t.onTouchMove,r),a.removeEventListener(n.end,t.onTouchEnd,e)),(i.simulateTouch&&!C.ios&&!C.android||i.simulateTouch&&!R.touch&&C.ios)&&(a.removeEventListener("mousedown",t.onTouchStart,!1),m.removeEventListener("mousemove",t.onTouchMove,r),m.removeEventListener("mouseup",t.onTouchEnd,!1))):(a.removeEventListener(n.start,t.onTouchStart,!1),m.removeEventListener(n.move,t.onTouchMove,r),m.removeEventListener(n.end,t.onTouchEnd,!1)),(i.preventClicks||i.preventClicksPropagation)&&a.removeEventListener("click",t.onClick,!0),t.off(C.ios||C.android?"resize orientationchange observerUpdate":"resize observerUpdate",k)}},D={setBreakpoint:function(){var e=this,t=e.activeIndex,i=e.initialized,n=e.loopedSlides;void 0===n&&(n=0);var o,s,a,r=e.params,l=r.breakpoints;!l||l&&0===Object.keys(l).length||(o=e.getBreakpoint(l))&&e.currentBreakpoint!==o&&(s=o in l?l[o]:e.originalParams,a=r.loop&&s.slidesPerView!==r.slidesPerView,j.extend(e.params,s),j.extend(e,{allowTouchMove:e.params.allowTouchMove,allowSlideNext:e.params.allowSlideNext,allowSlidePrev:e.params.allowSlidePrev}),e.currentBreakpoint=o,a&&i&&(e.loopDestroy(),e.loopCreate(),e.updateSlides(),e.slideTo(t-n+e.loopedSlides,0,!1)),e.emit("breakpoint",s))},getBreakpoint:function(e){if(e){var t=!1,i=[];Object.keys(e).forEach(function(e){i.push(e)}),i.sort(function(e,t){return parseInt(e,10)-parseInt(t,10)});for(var n=0;n<i.length;n+=1){var o=i[n];o>=N.innerWidth&&!t&&(t=o)}return t||"max"}}},z={isIE:!!N.navigator.userAgent.match(/Trident/g)||!!N.navigator.userAgent.match(/MSIE/g),isSafari:0<=(E=N.navigator.userAgent.toLowerCase()).indexOf("safari")&&E.indexOf("chrome")<0&&E.indexOf("android")<0,isUiWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(N.navigator.userAgent)},I={init:!0,direction:"horizontal",touchEventsTarget:"container",initialSlide:0,speed:300,preventInteractionOnTransition:!1,edgeSwipeDetection:!1,edgeSwipeThreshold:20,freeMode:!1,freeModeMomentum:!0,freeModeMomentumRatio:1,freeModeMomentumBounce:!0,freeModeMomentumBounceRatio:1,freeModeMomentumVelocityRatio:1,freeModeSticky:!1,freeModeMinimumVelocity:.02,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:"column",slidesPerGroup:1,centeredSlides:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,watchOverflow:!1,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:0,touchMoveStopPropagation:!0,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,watchSlidesVisibility:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,preloadImages:!0,updateOnImagesReady:!0,loop:!1,loopAdditionalSlides:0,loopedSlides:null,loopFillGroupWithBlank:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,containerModifierClass:"swiper-container-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-invisible-blank",slideActiveClass:"swiper-slide-active",slideDuplicateActiveClass:"swiper-slide-duplicate-active",slideVisibleClass:"swiper-slide-visible",slideDuplicateClass:"swiper-slide-duplicate",slideNextClass:"swiper-slide-next",slideDuplicateNextClass:"swiper-slide-duplicate-next",slidePrevClass:"swiper-slide-prev",slideDuplicatePrevClass:"swiper-slide-duplicate-prev",wrapperClass:"swiper-wrapper",runCallbacksOnInit:!0},O={update:y,translate:b,transition:{setTransition:function(e,t){this.$wrapperEl.transition(e),this.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);var i=this,n=i.activeIndex,o=i.params,s=i.previousIndex;o.autoHeight&&i.updateAutoHeight();var a=(a=t)||(s<n?"next":n<s?"prev":"reset");if(i.emit("transitionStart"),e&&n!==s){if("reset"===a)return void i.emit("slideResetTransitionStart");i.emit("slideChangeTransitionStart"),"next"===a?i.emit("slideNextTransitionStart"):i.emit("slidePrevTransitionStart")}},transitionEnd:function(e,t){void 0===e&&(e=!0);var i=this,n=i.activeIndex,o=i.previousIndex;i.animating=!1,i.setTransition(0);var s=(s=t)||(o<n?"next":n<o?"prev":"reset");if(i.emit("transitionEnd"),e&&n!==o){if("reset"===s)return void i.emit("slideResetTransitionEnd");i.emit("slideChangeTransitionEnd"),"next"===s?i.emit("slideNextTransitionEnd"):i.emit("slidePrevTransitionEnd")}}},slide:x,loop:w,grabCursor:S,manipulation:T,events:A,breakpoints:D,checkOverflow:{checkOverflow:function(){var e=this,t=e.isLocked;e.isLocked=1===e.snapGrid.length,e.allowSlideNext=!e.isLocked,e.allowSlidePrev=!e.isLocked,t!==e.isLocked&&e.emit(e.isLocked?"lock":"unlock"),t&&t!==e.isLocked&&(e.isEnd=!1,e.navigation.update())}},classes:{addClasses:function(){var t=this.classNames,i=this.params,e=this.rtl,n=this.$el,o=[];o.push(i.direction),i.freeMode&&o.push("free-mode"),R.flexbox||o.push("no-flexbox"),i.autoHeight&&o.push("autoheight"),e&&o.push("rtl"),1<i.slidesPerColumn&&o.push("multirow"),C.android&&o.push("android"),C.ios&&o.push("ios"),z.isIE&&(R.pointerEvents||R.prefixedPointerEvents)&&o.push("wp8-"+i.direction),o.forEach(function(e){t.push(i.containerModifierClass+e)}),n.addClass(t.join(" "))},removeClasses:function(){var e=this.$el,t=this.classNames;e.removeClass(t.join(" "))}},images:{loadImage:function(e,t,i,n,o,s){var a;function r(){s&&s()}(!e.complete||!o)&&t?((a=new N.Image).onload=r,a.onerror=r,n&&(a.sizes=n),i&&(a.srcset=i),t&&(a.src=t)):r()},preloadImages:function(){var e=this;function t(){null!=e&&e&&!e.destroyed&&(void 0!==e.imagesLoaded&&(e.imagesLoaded+=1),e.imagesLoaded===e.imagesToLoad.length&&(e.params.updateOnImagesReady&&e.update(),e.emit("imagesReady")))}e.imagesToLoad=e.$el.find("img");for(var i=0;i<e.imagesToLoad.length;i+=1){var n=e.imagesToLoad[i];e.loadImage(n,n.currentSrc||n.getAttribute("src"),n.srcset||n.getAttribute("srcset"),n.sizes||n.getAttribute("sizes"),!0,t)}}}},_={},B=function(u){function p(){for(var e,o,t=[],i=arguments.length;i--;)t[i]=arguments[i];o=(o=1===t.length&&t[0].constructor&&t[0].constructor===Object?t[0]:(e=t[0],t[1]))||{},o=j.extend({},o),e&&!o.el&&(o.el=e),u.call(this,o),Object.keys(O).forEach(function(t){Object.keys(O[t]).forEach(function(e){p.prototype[e]||(p.prototype[e]=O[t][e])})});var s=this;void 0===s.modules&&(s.modules={}),Object.keys(s.modules).forEach(function(e){var t=s.modules[e];if(t.params){var i=Object.keys(t.params)[0],n=t.params[i];if("object"!=_typeof(n))return;if(!(i in o&&"enabled"in n))return;!0===o[i]&&(o[i]={enabled:!0}),"object"!=_typeof(o[i])||"enabled"in o[i]||(o[i].enabled=!0),o[i]||(o[i]={enabled:!1})}});var n=j.extend({},I);s.useModulesParams(n),s.params=j.extend({},n,_,o),s.originalParams=j.extend({},s.params),s.passedParams=j.extend({},o);var a=(s.$=L)(s.params.el);if(e=a[0]){if(1<a.length){var r=[];return a.each(function(e,t){var i=j.extend({},o,{el:t});r.push(new p(i))}),r}e.swiper=s,a.data("swiper",s);var l,d,c=a.children("."+s.params.wrapperClass);return j.extend(s,{$el:a,el:e,$wrapperEl:c,wrapperEl:c[0],classNames:[],slides:L(),slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:function(){return"horizontal"===s.params.direction},isVertical:function(){return"vertical"===s.params.direction},rtl:"rtl"===e.dir.toLowerCase()||"rtl"===a.css("direction"),rtlTranslate:"horizontal"===s.params.direction&&("rtl"===e.dir.toLowerCase()||"rtl"===a.css("direction")),wrongRTL:"-webkit-box"===c.css("display"),activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,allowSlideNext:s.params.allowSlideNext,allowSlidePrev:s.params.allowSlidePrev,touchEvents:(l=["touchstart","touchmove","touchend"],d=["mousedown","mousemove","mouseup"],R.pointerEvents?d=["pointerdown","pointermove","pointerup"]:R.prefixedPointerEvents&&(d=["MSPointerDown","MSPointerMove","MSPointerUp"]),s.touchEventsTouch={start:l[0],move:l[1],end:l[2]},s.touchEventsDesktop={start:d[0],move:d[1],end:d[2]},R.touch||!s.params.simulateTouch?s.touchEventsTouch:s.touchEventsDesktop),touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,formElements:"input, select, option, textarea, button, video",lastClickTime:j.now(),clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,isTouchEvent:void 0,startMoving:void 0},allowClick:!0,allowTouchMove:s.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),s.useModules(),s.params.init&&s.init(),s}}u&&(p.__proto__=u);var e={extendedDefaults:{configurable:!0},defaults:{configurable:!0},Class:{configurable:!0},$:{configurable:!0}};return((p.prototype=Object.create(u&&u.prototype)).constructor=p).prototype.slidesPerViewDynamic=function(){var e=this,t=e.params,i=e.slides,n=e.slidesGrid,o=e.size,s=e.activeIndex,a=1;if(t.centeredSlides){for(var r,l=i[s].swiperSlideSize,d=s+1;d<i.length;d+=1)i[d]&&!r&&(a+=1,o<(l+=i[d].swiperSlideSize)&&(r=!0));for(var c=s-1;0<=c;--c)i[c]&&!r&&(a+=1,o<(l+=i[c].swiperSlideSize)&&(r=!0))}else for(var u=s+1;u<i.length;u+=1)n[u]-n[s]<o&&(a+=1);return a},p.prototype.update=function(){var e,t,i=this;function n(){var e=i.rtlTranslate?-1*i.translate:i.translate,t=Math.min(Math.max(e,i.maxTranslate()),i.minTranslate());i.setTranslate(t),i.updateActiveIndex(),i.updateSlidesClasses()}i&&!i.destroyed&&(e=i.snapGrid,(t=i.params).breakpoints&&i.setBreakpoint(),i.updateSize(),i.updateSlides(),i.updateProgress(),i.updateSlidesClasses(),i.params.freeMode?(n(),i.params.autoHeight&&i.updateAutoHeight()):(("auto"===i.params.slidesPerView||1<i.params.slidesPerView)&&i.isEnd&&!i.params.centeredSlides?i.slideTo(i.slides.length-1,0,!1,!0):i.slideTo(i.activeIndex,0,!1,!0))||n(),t.watchOverflow&&e!==i.snapGrid&&i.checkOverflow(),i.emit("update"))},p.prototype.init=function(){var e=this;e.initialized||(e.emit("beforeInit"),e.params.breakpoints&&e.setBreakpoint(),e.addClasses(),e.params.loop&&e.loopCreate(),e.updateSize(),e.updateSlides(),e.params.watchOverflow&&e.checkOverflow(),e.params.grabCursor&&e.setGrabCursor(),e.params.preloadImages&&e.preloadImages(),e.params.loop?e.slideTo(e.params.initialSlide+e.loopedSlides,0,e.params.runCallbacksOnInit):e.slideTo(e.params.initialSlide,0,e.params.runCallbacksOnInit),e.attachEvents(),e.initialized=!0,e.emit("init"))},p.prototype.destroy=function(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);var i=this,n=i.params,o=i.$el,s=i.$wrapperEl,a=i.slides;return void 0===i.params||i.destroyed||(i.emit("beforeDestroy"),i.initialized=!1,i.detachEvents(),n.loop&&i.loopDestroy(),t&&(i.removeClasses(),o.removeAttr("style"),s.removeAttr("style"),a&&a.length&&a.removeClass([n.slideVisibleClass,n.slideActiveClass,n.slideNextClass,n.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index").removeAttr("data-swiper-column").removeAttr("data-swiper-row")),i.emit("destroy"),Object.keys(i.eventsListeners).forEach(function(e){i.off(e)}),!1!==e&&(i.$el[0].swiper=null,i.$el.data("swiper",null),j.deleteProps(i)),i.destroyed=!0),null},p.extendDefaults=function(e){j.extend(_,e)},e.extendedDefaults.get=function(){return _},e.defaults.get=function(){return I},e.Class.get=function(){return u},e.$.get=function(){return L},Object.defineProperties(p,e),p}(e),H={name:"device",proto:{device:C},static:{device:C}},q={name:"support",proto:{support:R},static:{support:R}},F={name:"browser",proto:{browser:z},static:{browser:z}},W={name:"resize",create:function(){var e=this;j.extend(e,{resize:{resizeHandler:function(){e&&!e.destroyed&&e.initialized&&(e.emit("beforeResize"),e.emit("resize"))},orientationChangeHandler:function(){e&&!e.destroyed&&e.initialized&&e.emit("orientationchange")}}})},on:{init:function(){N.addEventListener("resize",this.resize.resizeHandler),N.addEventListener("orientationchange",this.resize.orientationChangeHandler)},destroy:function(){N.removeEventListener("resize",this.resize.resizeHandler),N.removeEventListener("orientationchange",this.resize.orientationChangeHandler)}}},X={func:N.MutationObserver||N.WebkitMutationObserver,attach:function(e,t){void 0===t&&(t={});var i=this,n=new X.func(function(e){var t;1!==e.length?(t=function(){i.emit("observerUpdate",e[0])},N.requestAnimationFrame?N.requestAnimationFrame(t):N.setTimeout(t,0)):i.emit("observerUpdate",e[0])});n.observe(e,{attributes:void 0===t.attributes||t.attributes,childList:void 0===t.childList||t.childList,characterData:void 0===t.characterData||t.characterData}),i.observer.observers.push(n)},init:function(){var e=this;if(R.observer&&e.params.observer){if(e.params.observeParents)for(var t=e.$el.parents(),i=0;i<t.length;i+=1)e.observer.attach(t[i]);e.observer.attach(e.$el[0],{childList:!1}),e.observer.attach(e.$wrapperEl[0],{attributes:!1})}},destroy:function(){this.observer.observers.forEach(function(e){e.disconnect()}),this.observer.observers=[]}},Y={name:"observer",params:{observer:!1,observeParents:!1},create:function(){j.extend(this,{observer:{init:X.init.bind(this),attach:X.attach.bind(this),destroy:X.destroy.bind(this),observers:[]}})},on:{init:function(){this.observer.init()},destroy:function(){this.observer.destroy()}}},G={update:function(e){var t=this,i=t.params,n=i.slidesPerView,o=i.slidesPerGroup,s=i.centeredSlides,a=t.virtual,r=a.from,l=a.to,d=a.slides,c=a.slidesGrid,u=a.renderSlide,p=a.offset;t.updateActiveIndex();var h,f=t.activeIndex||0,m=t.rtlTranslate?"right":t.isHorizontal()?"left":"top",g=s?(h=Math.floor(n/2)+o,Math.floor(n/2)+o):(h=n+(o-1),o),v=Math.max((f||0)-g,0),y=Math.min((f||0)+h,d.length-1),b=(t.slidesGrid[v]||0)-(t.slidesGrid[0]||0);function x(){t.updateSlides(),t.updateProgress(),t.updateSlidesClasses(),t.lazy&&t.params.lazy.enabled&&t.lazy.load()}if(j.extend(t.virtual,{from:v,to:y,offset:b,slidesGrid:t.slidesGrid}),r===v&&l===y&&!e)return t.slidesGrid!==c&&b!==p&&t.slides.css(m,b+"px"),void t.updateProgress();if(t.params.virtual.renderExternal)return t.params.virtual.renderExternal.call(t,{offset:b,from:v,to:y,slides:function(){for(var e=[],t=v;t<=y;t+=1)e.push(d[t]);return e}()}),void x();var w=[],S=[];if(e)t.$wrapperEl.find("."+t.params.slideClass).remove();else for(var T=r;T<=l;T+=1)(T<v||y<T)&&t.$wrapperEl.find("."+t.params.slideClass+'[data-swiper-slide-index="'+T+'"]').remove();for(var C=0;C<d.length;C+=1)v<=C&&C<=y&&(void 0===l||e?S.push(C):(l<C&&S.push(C),C<r&&w.push(C)));S.forEach(function(e){t.$wrapperEl.append(u(d[e],e))}),w.sort(function(e,t){return e<t}).forEach(function(e){t.$wrapperEl.prepend(u(d[e],e))}),t.$wrapperEl.children(".swiper-slide").css(m,b+"px"),x()},renderSlide:function(e,t){var i=this,n=i.params.virtual;if(n.cache&&i.virtual.cache[t])return i.virtual.cache[t];var o=n.renderSlide?L(n.renderSlide.call(i,e,t)):L('<div class="'+i.params.slideClass+'" data-swiper-slide-index="'+t+'">'+e+"</div>");return o.attr("data-swiper-slide-index")||o.attr("data-swiper-slide-index",t),n.cache&&(i.virtual.cache[t]=o),o},appendSlide:function(e){this.virtual.slides.push(e),this.virtual.update(!0)},prependSlide:function(e){var t,i,n=this;n.virtual.slides.unshift(e),n.params.virtual.cache&&(t=n.virtual.cache,i={},Object.keys(t).forEach(function(e){i[e+1]=t[e]}),n.virtual.cache=i),n.virtual.update(!0),n.slideNext(0)}},V={name:"virtual",params:{virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null}},create:function(){var e=this;j.extend(e,{virtual:{update:G.update.bind(e),appendSlide:G.appendSlide.bind(e),prependSlide:G.prependSlide.bind(e),renderSlide:G.renderSlide.bind(e),slides:e.params.virtual.slides,cache:{}}})},on:{beforeInit:function(){var e,t=this;t.params.virtual.enabled&&(t.classNames.push(t.params.containerModifierClass+"virtual"),e={watchSlidesProgress:!0},j.extend(t.params,e),j.extend(t.originalParams,e),t.virtual.update())},setTranslate:function(){this.params.virtual.enabled&&this.virtual.update()}}},U={handle:function(e){var t=this,i=t.rtlTranslate,n=e;n.originalEvent&&(n=n.originalEvent);var o=n.keyCode||n.charCode;if(!t.allowSlideNext&&(t.isHorizontal()&&39===o||t.isVertical()&&40===o))return!1;if(!t.allowSlidePrev&&(t.isHorizontal()&&37===o||t.isVertical()&&38===o))return!1;if(!(n.shiftKey||n.altKey||n.ctrlKey||n.metaKey||m.activeElement&&m.activeElement.nodeName&&("input"===m.activeElement.nodeName.toLowerCase()||"textarea"===m.activeElement.nodeName.toLowerCase()))){if(t.params.keyboard.onlyInViewport&&(37===o||39===o||38===o||40===o)){var s=!1;if(0<t.$el.parents("."+t.params.slideClass).length&&0===t.$el.parents("."+t.params.slideActiveClass).length)return;var a=N.innerWidth,r=N.innerHeight,l=t.$el.offset();i&&(l.left-=t.$el[0].scrollLeft);for(var d=[[l.left,l.top],[l.left+t.width,l.top],[l.left,l.top+t.height],[l.left+t.width,l.top+t.height]],c=0;c<d.length;c+=1){var u=d[c];0<=u[0]&&u[0]<=a&&0<=u[1]&&u[1]<=r&&(s=!0)}if(!s)return}t.isHorizontal()?(37!==o&&39!==o||(n.preventDefault?n.preventDefault():n.returnValue=!1),(39===o&&!i||37===o&&i)&&t.slideNext(),(37===o&&!i||39===o&&i)&&t.slidePrev()):(38!==o&&40!==o||(n.preventDefault?n.preventDefault():n.returnValue=!1),40===o&&t.slideNext(),38===o&&t.slidePrev()),t.emit("keyPress",o)}},enable:function(){this.keyboard.enabled||(L(m).on("keydown",this.keyboard.handle),this.keyboard.enabled=!0)},disable:function(){this.keyboard.enabled&&(L(m).off("keydown",this.keyboard.handle),this.keyboard.enabled=!1)}},K={name:"keyboard",params:{keyboard:{enabled:!1,onlyInViewport:!0}},create:function(){j.extend(this,{keyboard:{enabled:!1,enable:U.enable.bind(this),disable:U.disable.bind(this),handle:U.handle.bind(this)}})},on:{init:function(){this.params.keyboard.enabled&&this.keyboard.enable()},destroy:function(){this.keyboard.enabled&&this.keyboard.disable()}}},Z={lastScrollTime:j.now(),event:-1<N.navigator.userAgent.indexOf("firefox")?"DOMMouseScroll":((P=(M="onwheel")in m)||(($=m.createElement("div")).setAttribute(M,"return;"),P="function"==typeof $[M]),!P&&m.implementation&&m.implementation.hasFeature&&!0!==m.implementation.hasFeature("","")&&(P=m.implementation.hasFeature("Events.wheel","3.0")),P?"wheel":"mousewheel"),normalize:function(e){var t=0,i=0,n=0,o=0;return"detail"in e&&(i=e.detail),"wheelDelta"in e&&(i=-e.wheelDelta/120),"wheelDeltaY"in e&&(i=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=i,i=0),n=10*t,o=10*i,"deltaY"in e&&(o=e.deltaY),"deltaX"in e&&(n=e.deltaX),(n||o)&&e.deltaMode&&(1===e.deltaMode?(n*=40,o*=40):(n*=800,o*=800)),n&&!t&&(t=n<1?-1:1),o&&!i&&(i=o<1?-1:1),{spinX:t,spinY:i,pixelX:n,pixelY:o}},handleMouseEnter:function(){this.mouseEntered=!0},handleMouseLeave:function(){this.mouseEntered=!1},handle:function(e){var t=e,i=this,n=i.params.mousewheel;if(!i.mouseEntered&&!n.releaseOnEdges)return!0;t.originalEvent&&(t=t.originalEvent);var o=0,s=i.rtlTranslate?-1:1,a=Z.normalize(t);if(n.forceToAxis)if(i.isHorizontal()){if(!(Math.abs(a.pixelX)>Math.abs(a.pixelY)))return!0;o=a.pixelX*s}else{if(!(Math.abs(a.pixelY)>Math.abs(a.pixelX)))return!0;o=a.pixelY}else o=Math.abs(a.pixelX)>Math.abs(a.pixelY)?-a.pixelX*s:-a.pixelY;if(0===o)return!0;if(n.invert&&(o=-o),i.params.freeMode){i.params.loop&&i.loopFix();var r=i.getTranslate()+o*n.sensitivity,l=i.isBeginning,d=i.isEnd;if(r>=i.minTranslate()&&(r=i.minTranslate()),r<=i.maxTranslate()&&(r=i.maxTranslate()),i.setTransition(0),i.setTranslate(r),i.updateProgress(),i.updateActiveIndex(),i.updateSlidesClasses(),(!l&&i.isBeginning||!d&&i.isEnd)&&i.updateSlidesClasses(),i.params.freeModeSticky&&(clearTimeout(i.mousewheel.timeout),i.mousewheel.timeout=j.nextTick(function(){i.slideToClosest()},300)),i.emit("scroll",t),i.params.autoplay&&i.params.autoplayDisableOnInteraction&&i.autoplay.stop(),r===i.minTranslate()||r===i.maxTranslate())return!0}else{if(60<j.now()-i.mousewheel.lastScrollTime)if(o<0)if(i.isEnd&&!i.params.loop||i.animating){if(n.releaseOnEdges)return!0}else i.slideNext(),i.emit("scroll",t);else if(i.isBeginning&&!i.params.loop||i.animating){if(n.releaseOnEdges)return!0}else i.slidePrev(),i.emit("scroll",t);i.mousewheel.lastScrollTime=(new N.Date).getTime()}return t.preventDefault?t.preventDefault():t.returnValue=!1,!1},enable:function(){var e=this;if(!Z.event)return!1;if(e.mousewheel.enabled)return!1;var t=e.$el;return"container"!==e.params.mousewheel.eventsTarged&&(t=L(e.params.mousewheel.eventsTarged)),t.on("mouseenter",e.mousewheel.handleMouseEnter),t.on("mouseleave",e.mousewheel.handleMouseLeave),t.on(Z.event,e.mousewheel.handle),e.mousewheel.enabled=!0},disable:function(){var e=this;if(!Z.event)return!1;if(!e.mousewheel.enabled)return!1;var t=e.$el;return"container"!==e.params.mousewheel.eventsTarged&&(t=L(e.params.mousewheel.eventsTarged)),t.off(Z.event,e.mousewheel.handle),!(e.mousewheel.enabled=!1)}},Q={update:function(){var e,t,i,n=this,o=n.params.navigation;n.params.loop||(t=(e=n.navigation).$nextEl,(i=e.$prevEl)&&0<i.length&&(n.isBeginning?i.addClass(o.disabledClass):i.removeClass(o.disabledClass),i[n.params.watchOverflow&&n.isLocked?"addClass":"removeClass"](o.lockClass)),t&&0<t.length&&(n.isEnd?t.addClass(o.disabledClass):t.removeClass(o.disabledClass),t[n.params.watchOverflow&&n.isLocked?"addClass":"removeClass"](o.lockClass)))},init:function(){var e,t,i=this,n=i.params.navigation;(n.nextEl||n.prevEl)&&(n.nextEl&&(e=L(n.nextEl),i.params.uniqueNavElements&&"string"==typeof n.nextEl&&1<e.length&&1===i.$el.find(n.nextEl).length&&(e=i.$el.find(n.nextEl))),n.prevEl&&(t=L(n.prevEl),i.params.uniqueNavElements&&"string"==typeof n.prevEl&&1<t.length&&1===i.$el.find(n.prevEl).length&&(t=i.$el.find(n.prevEl))),e&&0<e.length&&e.on("click",function(e){e.preventDefault(),i.isEnd&&!i.params.loop||i.slideNext()}),t&&0<t.length&&t.on("click",function(e){e.preventDefault(),i.isBeginning&&!i.params.loop||i.slidePrev()}),j.extend(i.navigation,{$nextEl:e,nextEl:e&&e[0],$prevEl:t,prevEl:t&&t[0]}))},destroy:function(){var e=this.navigation,t=e.$nextEl,i=e.$prevEl;t&&t.length&&(t.off("click"),t.removeClass(this.params.navigation.disabledClass)),i&&i.length&&(i.off("click"),i.removeClass(this.params.navigation.disabledClass))}},J={update:function(){var e=this,t=e.rtl,o=e.params.pagination;if(o.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var s,i,n,a,r,l=e.virtual&&e.params.virtual.enabled?e.virtual.slides.length:e.slides.length,d=e.pagination.$el,c=e.params.loop?Math.ceil((l-2*e.loopedSlides)/e.params.slidesPerGroup):e.snapGrid.length;if(e.params.loop?((s=Math.ceil((e.activeIndex-e.loopedSlides)/e.params.slidesPerGroup))>l-1-2*e.loopedSlides&&(s-=l-2*e.loopedSlides),c-1<s&&(s-=c),s<0&&"bullets"!==e.params.paginationType&&(s=c+s)):s=void 0!==e.snapIndex?e.snapIndex:e.activeIndex||0,"bullets"===o.type&&e.pagination.bullets&&0<e.pagination.bullets.length){var u,p,h,f,m,g,v=e.pagination.bullets;if(o.dynamicBullets&&(e.pagination.bulletSize=v.eq(0)[e.isHorizontal()?"outerWidth":"outerHeight"](!0),d.css(e.isHorizontal()?"width":"height",e.pagination.bulletSize*(o.dynamicMainBullets+4)+"px"),1<o.dynamicMainBullets&&void 0!==e.previousIndex&&(e.pagination.dynamicBulletIndex+=s-e.previousIndex,e.pagination.dynamicBulletIndex>o.dynamicMainBullets-1?e.pagination.dynamicBulletIndex=o.dynamicMainBullets-1:e.pagination.dynamicBulletIndex<0&&(e.pagination.dynamicBulletIndex=0)),u=s-e.pagination.dynamicBulletIndex,h=((p=u+(Math.min(v.length,o.dynamicMainBullets)-1))+u)/2),v.removeClass(o.bulletActiveClass+" "+o.bulletActiveClass+"-next "+o.bulletActiveClass+"-next-next "+o.bulletActiveClass+"-prev "+o.bulletActiveClass+"-prev-prev "+o.bulletActiveClass+"-main"),1<d.length)v.each(function(e,t){var i=L(t),n=i.index();n===s&&i.addClass(o.bulletActiveClass),o.dynamicBullets&&(u<=n&&n<=p&&i.addClass(o.bulletActiveClass+"-main"),n===u&&i.prev().addClass(o.bulletActiveClass+"-prev").prev().addClass(o.bulletActiveClass+"-prev-prev"),n===p&&i.next().addClass(o.bulletActiveClass+"-next").next().addClass(o.bulletActiveClass+"-next-next"))});else if(v.eq(s).addClass(o.bulletActiveClass),o.dynamicBullets){for(var y=v.eq(u),b=v.eq(p),x=u;x<=p;x+=1)v.eq(x).addClass(o.bulletActiveClass+"-main");y.prev().addClass(o.bulletActiveClass+"-prev").prev().addClass(o.bulletActiveClass+"-prev-prev"),b.next().addClass(o.bulletActiveClass+"-next").next().addClass(o.bulletActiveClass+"-next-next")}o.dynamicBullets&&(f=Math.min(v.length,o.dynamicMainBullets+4),m=(e.pagination.bulletSize*f-e.pagination.bulletSize)/2-h*e.pagination.bulletSize,g=t?"right":"left",v.css(e.isHorizontal()?g:"top",m+"px"))}"fraction"===o.type&&(d.find("."+o.currentClass).text(o.formatFractionCurrent(s+1)),d.find("."+o.totalClass).text(o.formatFractionTotal(c))),"progressbar"===o.type&&(i=o.progressbarOpposite?e.isHorizontal()?"vertical":"horizontal":e.isHorizontal()?"horizontal":"vertical",n=(s+1)/c,r=a=1,"horizontal"==i?a=n:r=n,d.find("."+o.progressbarFillClass).transform("translate3d(0,0,0) scaleX("+a+") scaleY("+r+")").transition(e.params.speed)),"custom"===o.type&&o.renderCustom?(d.html(o.renderCustom(e,s+1,c)),e.emit("paginationRender",e,d[0])):e.emit("paginationUpdate",e,d[0]),d[e.params.watchOverflow&&e.isLocked?"addClass":"removeClass"](o.lockClass)}},render:function(){var e=this,t=e.params.pagination;if(t.el&&e.pagination.el&&e.pagination.$el&&0!==e.pagination.$el.length){var i=e.virtual&&e.params.virtual.enabled?e.virtual.slides.length:e.slides.length,n=e.pagination.$el,o="";if("bullets"===t.type){for(var s=e.params.loop?Math.ceil((i-2*e.loopedSlides)/e.params.slidesPerGroup):e.snapGrid.length,a=0;a<s;a+=1)t.renderBullet?o+=t.renderBullet.call(e,a,t.bulletClass):o+="<"+t.bulletElement+' class="'+t.bulletClass+'"></'+t.bulletElement+">";n.html(o),e.pagination.bullets=n.find("."+t.bulletClass)}"fraction"===t.type&&(o=t.renderFraction?t.renderFraction.call(e,t.currentClass,t.totalClass):'<span class="'+t.currentClass+'"></span> / <span class="'+t.totalClass+'"></span>',n.html(o)),"progressbar"===t.type&&(o=t.renderProgressbar?t.renderProgressbar.call(e,t.progressbarFillClass):'<span class="'+t.progressbarFillClass+'"></span>',n.html(o)),"custom"!==t.type&&e.emit("paginationRender",e.pagination.$el[0])}},init:function(){var e,i=this,t=i.params.pagination;!t.el||0!==(e=L(t.el)).length&&(i.params.uniqueNavElements&&"string"==typeof t.el&&1<e.length&&1===i.$el.find(t.el).length&&(e=i.$el.find(t.el)),"bullets"===t.type&&t.clickable&&e.addClass(t.clickableClass),e.addClass(t.modifierClass+t.type),"bullets"===t.type&&t.dynamicBullets&&(e.addClass(""+t.modifierClass+t.type+"-dynamic"),i.pagination.dynamicBulletIndex=0,t.dynamicMainBullets<1&&(t.dynamicMainBullets=1)),"progressbar"===t.type&&t.progressbarOpposite&&e.addClass(t.progressbarOppositeClass),t.clickable&&e.on("click","."+t.bulletClass,function(e){e.preventDefault();var t=L(this).index()*i.params.slidesPerGroup;i.params.loop&&(t+=i.loopedSlides),i.slideTo(t)}),j.extend(i.pagination,{$el:e,el:e[0]}))},destroy:function(){var e,t=this,i=t.params.pagination;i.el&&t.pagination.el&&t.pagination.$el&&0!==t.pagination.$el.length&&((e=t.pagination.$el).removeClass(i.hiddenClass),e.removeClass(i.modifierClass+i.type),t.pagination.bullets&&t.pagination.bullets.removeClass(i.bulletActiveClass),i.clickable&&e.off("click","."+i.bulletClass))}},ee={setTranslate:function(){var e,t,i,n,o,s,a,r,l,d,c=this;c.params.scrollbar.el&&c.scrollbar.el&&(e=c.scrollbar,t=c.rtlTranslate,i=c.progress,n=e.dragSize,o=e.trackSize,s=e.$dragEl,a=e.$el,r=c.params.scrollbar,d=(o-(l=n))*i,t?0<(d=-d)?(l=n-d,d=0):o<-d+n&&(l=o+d):d<0?(l=n+d,d=0):o<d+n&&(l=o-d),c.isHorizontal()?(R.transforms3d?s.transform("translate3d("+d+"px, 0, 0)"):s.transform("translateX("+d+"px)"),s[0].style.width=l+"px"):(R.transforms3d?s.transform("translate3d(0px, "+d+"px, 0)"):s.transform("translateY("+d+"px)"),s[0].style.height=l+"px"),r.hide&&(clearTimeout(c.scrollbar.timeout),a[0].style.opacity=1,c.scrollbar.timeout=setTimeout(function(){a[0].style.opacity=0,a.transition(400)},1e3)))},setTransition:function(e){this.params.scrollbar.el&&this.scrollbar.el&&this.scrollbar.$dragEl.transition(e)},updateSize:function(){var e,t,i,n,o,s,a,r=this;r.params.scrollbar.el&&r.scrollbar.el&&(t=(e=r.scrollbar).$dragEl,i=e.$el,t[0].style.width="",t[0].style.height="",n=r.isHorizontal()?i[0].offsetWidth:i[0].offsetHeight,s=(o=r.size/r.virtualSize)*(n/r.size),a="auto"===r.params.scrollbar.dragSize?n*o:parseInt(r.params.scrollbar.dragSize,10),r.isHorizontal()?t[0].style.width=a+"px":t[0].style.height=a+"px",i[0].style.display=1<=o?"none":"",r.params.scrollbarHide&&(i[0].style.opacity=0),j.extend(e,{trackSize:n,divider:o,moveDivider:s,dragSize:a}),e.$el[r.params.watchOverflow&&r.isLocked?"addClass":"removeClass"](r.params.scrollbar.lockClass))},setDragPosition:function(e){var t=this,i=t.scrollbar,n=t.rtlTranslate,o=i.$el,s=i.dragSize,a=i.trackSize,r=((t.isHorizontal()?"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageX:e.pageX||e.clientX:"touchstart"===e.type||"touchmove"===e.type?e.targetTouches[0].pageY:e.pageY||e.clientY)-o.offset()[t.isHorizontal()?"left":"top"]-s/2)/(a-s);r=Math.max(Math.min(r,1),0),n&&(r=1-r);var l=t.minTranslate()+(t.maxTranslate()-t.minTranslate())*r;t.updateProgress(l),t.setTranslate(l),t.updateActiveIndex(),t.updateSlidesClasses()},onDragStart:function(e){var t=this,i=t.params.scrollbar,n=t.scrollbar,o=t.$wrapperEl,s=n.$el,a=n.$dragEl;t.scrollbar.isTouched=!0,e.preventDefault(),e.stopPropagation(),o.transition(100),a.transition(100),n.setDragPosition(e),clearTimeout(t.scrollbar.dragTimeout),s.transition(0),i.hide&&s.css("opacity",1),t.emit("scrollbarDragStart",e)},onDragMove:function(e){var t=this.scrollbar,i=this.$wrapperEl,n=t.$el,o=t.$dragEl;this.scrollbar.isTouched&&(e.preventDefault?e.preventDefault():e.returnValue=!1,t.setDragPosition(e),i.transition(0),n.transition(0),o.transition(0),this.emit("scrollbarDragMove",e))},onDragEnd:function(e){var t=this,i=t.params.scrollbar,n=t.scrollbar.$el;t.scrollbar.isTouched&&(t.scrollbar.isTouched=!1,i.hide&&(clearTimeout(t.scrollbar.dragTimeout),t.scrollbar.dragTimeout=j.nextTick(function(){n.css("opacity",0),n.transition(400)},1e3)),t.emit("scrollbarDragEnd",e),i.snapOnRelease&&t.slideToClosest())},enableDraggable:function(){var e,t,i,n,o,s,a,r=this;r.params.scrollbar.el&&(e=r.scrollbar,t=r.touchEvents,i=r.touchEventsDesktop,n=r.params,o=e.$el[0],s=!(!R.passiveListener||!n.passiveListeners)&&{passive:!1,capture:!1},a=!(!R.passiveListener||!n.passiveListeners)&&{passive:!0,capture:!1},R.touch||!R.pointerEvents&&!R.prefixedPointerEvents?(R.touch&&(o.addEventListener(t.start,r.scrollbar.onDragStart,s),o.addEventListener(t.move,r.scrollbar.onDragMove,s),o.addEventListener(t.end,r.scrollbar.onDragEnd,a)),(n.simulateTouch&&!C.ios&&!C.android||n.simulateTouch&&!R.touch&&C.ios)&&(o.addEventListener("mousedown",r.scrollbar.onDragStart,s),m.addEventListener("mousemove",r.scrollbar.onDragMove,s),m.addEventListener("mouseup",r.scrollbar.onDragEnd,a))):(o.addEventListener(i.start,r.scrollbar.onDragStart,s),m.addEventListener(i.move,r.scrollbar.onDragMove,s),m.addEventListener(i.end,r.scrollbar.onDragEnd,a)))},disableDraggable:function(){var e,t,i,n,o,s,a,r=this;r.params.scrollbar.el&&(e=r.scrollbar,t=r.touchEvents,i=r.touchEventsDesktop,n=r.params,o=e.$el[0],s=!(!R.passiveListener||!n.passiveListeners)&&{passive:!1,capture:!1},a=!(!R.passiveListener||!n.passiveListeners)&&{passive:!0,capture:!1},R.touch||!R.pointerEvents&&!R.prefixedPointerEvents?(R.touch&&(o.removeEventListener(t.start,r.scrollbar.onDragStart,s),o.removeEventListener(t.move,r.scrollbar.onDragMove,s),o.removeEventListener(t.end,r.scrollbar.onDragEnd,a)),(n.simulateTouch&&!C.ios&&!C.android||n.simulateTouch&&!R.touch&&C.ios)&&(o.removeEventListener("mousedown",r.scrollbar.onDragStart,s),m.removeEventListener("mousemove",r.scrollbar.onDragMove,s),m.removeEventListener("mouseup",r.scrollbar.onDragEnd,a))):(o.removeEventListener(i.start,r.scrollbar.onDragStart,s),m.removeEventListener(i.move,r.scrollbar.onDragMove,s),m.removeEventListener(i.end,r.scrollbar.onDragEnd,a)))},init:function(){var e,t,i,n,o,s=this;s.params.scrollbar.el&&(e=s.scrollbar,t=s.$el,n=L((i=s.params.scrollbar).el),s.params.uniqueNavElements&&"string"==typeof i.el&&1<n.length&&1===t.find(i.el).length&&(n=t.find(i.el)),0===(o=n.find("."+s.params.scrollbar.dragClass)).length&&(o=L('<div class="'+s.params.scrollbar.dragClass+'"></div>'),n.append(o)),j.extend(e,{$el:n,el:n[0],$dragEl:o,dragEl:o[0]}),i.draggable&&e.enableDraggable())},destroy:function(){this.scrollbar.disableDraggable()}},te={setTransform:function(e,t){var i,n,o=this.rtl,s=L(e),a=o?-1:1,r=s.attr("data-swiper-parallax")||"0",l=s.attr("data-swiper-parallax-x"),d=s.attr("data-swiper-parallax-y"),c=s.attr("data-swiper-parallax-scale"),u=s.attr("data-swiper-parallax-opacity");l||d?(l=l||"0",d=d||"0"):this.isHorizontal()?(l=r,d="0"):(d=r,l="0"),l=0<=l.indexOf("%")?parseInt(l,10)*t*a+"%":l*t*a+"px",d=0<=d.indexOf("%")?parseInt(d,10)*t+"%":d*t+"px",null!=u&&(i=u-(u-1)*(1-Math.abs(t)),s[0].style.opacity=i),null==c?s.transform("translate3d("+l+", "+d+", 0px)"):(n=c-(c-1)*(1-Math.abs(t)),s.transform("translate3d("+l+", "+d+", 0px) scale("+n+")"))},setTranslate:function(){var n=this,e=n.$el,t=n.slides,o=n.progress,s=n.snapGrid;e.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(e,t){n.parallax.setTransform(t,o)}),t.each(function(e,t){var i=t.progress;1<n.params.slidesPerGroup&&"auto"!==n.params.slidesPerView&&(i+=Math.ceil(e/2)-o*(s.length-1)),i=Math.min(Math.max(i,-1),1),L(t).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(e,t){n.parallax.setTransform(t,i)})})},setTransition:function(o){void 0===o&&(o=this.params.speed),this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]").each(function(e,t){var i=L(t),n=parseInt(i.attr("data-swiper-parallax-duration"),10)||o;0===o&&(n=0),i.transition(n)})}},ie={getDistanceBetweenTouches:function(e){if(e.targetTouches.length<2)return 1;var t=e.targetTouches[0].pageX,i=e.targetTouches[0].pageY,n=e.targetTouches[1].pageX,o=e.targetTouches[1].pageY;return Math.sqrt(Math.pow(n-t,2)+Math.pow(o-i,2))},onGestureStart:function(e){var t=this,i=t.params.zoom,n=t.zoom,o=n.gesture;if(n.fakeGestureTouched=!1,n.fakeGestureMoved=!1,!R.gestures){if("touchstart"!==e.type||"touchstart"===e.type&&e.targetTouches.length<2)return;n.fakeGestureTouched=!0,o.scaleStart=ie.getDistanceBetweenTouches(e)}o.$slideEl&&o.$slideEl.length||(o.$slideEl=L(e.target).closest(".swiper-slide"),0===o.$slideEl.length&&(o.$slideEl=t.slides.eq(t.activeIndex)),o.$imageEl=o.$slideEl.find("img, svg, canvas"),o.$imageWrapEl=o.$imageEl.parent("."+i.containerClass),o.maxRatio=o.$imageWrapEl.attr("data-swiper-zoom")||i.maxRatio,0!==o.$imageWrapEl.length)?(o.$imageEl.transition(0),t.zoom.isScaling=!0):o.$imageEl=void 0},onGestureChange:function(e){var t=this.params.zoom,i=this.zoom,n=i.gesture;if(!R.gestures){if("touchmove"!==e.type||"touchmove"===e.type&&e.targetTouches.length<2)return;i.fakeGestureMoved=!0,n.scaleMove=ie.getDistanceBetweenTouches(e)}n.$imageEl&&0!==n.$imageEl.length&&(R.gestures?this.zoom.scale=e.scale*i.currentScale:i.scale=n.scaleMove/n.scaleStart*i.currentScale,i.scale>n.maxRatio&&(i.scale=n.maxRatio-1+Math.pow(i.scale-n.maxRatio+1,.5)),i.scale<t.minRatio&&(i.scale=t.minRatio+1-Math.pow(t.minRatio-i.scale+1,.5)),n.$imageEl.transform("translate3d(0,0,0) scale("+i.scale+")"))},onGestureEnd:function(e){var t=this.params.zoom,i=this.zoom,n=i.gesture;if(!R.gestures){if(!i.fakeGestureTouched||!i.fakeGestureMoved)return;if("touchend"!==e.type||"touchend"===e.type&&e.changedTouches.length<2&&!C.android)return;i.fakeGestureTouched=!1,i.fakeGestureMoved=!1}n.$imageEl&&0!==n.$imageEl.length&&(i.scale=Math.max(Math.min(i.scale,n.maxRatio),t.minRatio),n.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale("+i.scale+")"),i.currentScale=i.scale,i.isScaling=!1,1===i.scale&&(n.$slideEl=void 0))},onTouchStart:function(e){var t=this.zoom,i=t.gesture,n=t.image;i.$imageEl&&0!==i.$imageEl.length&&(n.isTouched||(C.android&&e.preventDefault(),n.isTouched=!0,n.touchesStart.x="touchstart"===e.type?e.targetTouches[0].pageX:e.pageX,n.touchesStart.y="touchstart"===e.type?e.targetTouches[0].pageY:e.pageY))},onTouchMove:function(e){var t=this,i=t.zoom,n=i.gesture,o=i.image,s=i.velocity;if(n.$imageEl&&0!==n.$imageEl.length&&(t.allowClick=!1,o.isTouched&&n.$slideEl)){o.isMoved||(o.width=n.$imageEl[0].offsetWidth,o.height=n.$imageEl[0].offsetHeight,o.startX=j.getTranslate(n.$imageWrapEl[0],"x")||0,o.startY=j.getTranslate(n.$imageWrapEl[0],"y")||0,n.slideWidth=n.$slideEl[0].offsetWidth,n.slideHeight=n.$slideEl[0].offsetHeight,n.$imageWrapEl.transition(0),t.rtl&&(o.startX=-o.startX,o.startY=-o.startY));var a=o.width*i.scale,r=o.height*i.scale;if(!(a<n.slideWidth&&r<n.slideHeight)){if(o.minX=Math.min(n.slideWidth/2-a/2,0),o.maxX=-o.minX,o.minY=Math.min(n.slideHeight/2-r/2,0),o.maxY=-o.minY,o.touchesCurrent.x="touchmove"===e.type?e.targetTouches[0].pageX:e.pageX,o.touchesCurrent.y="touchmove"===e.type?e.targetTouches[0].pageY:e.pageY,!o.isMoved&&!i.isScaling){if(t.isHorizontal()&&(Math.floor(o.minX)===Math.floor(o.startX)&&o.touchesCurrent.x<o.touchesStart.x||Math.floor(o.maxX)===Math.floor(o.startX)&&o.touchesCurrent.x>o.touchesStart.x))return void(o.isTouched=!1);if(!t.isHorizontal()&&(Math.floor(o.minY)===Math.floor(o.startY)&&o.touchesCurrent.y<o.touchesStart.y||Math.floor(o.maxY)===Math.floor(o.startY)&&o.touchesCurrent.y>o.touchesStart.y))return void(o.isTouched=!1)}e.preventDefault(),e.stopPropagation(),o.isMoved=!0,o.currentX=o.touchesCurrent.x-o.touchesStart.x+o.startX,o.currentY=o.touchesCurrent.y-o.touchesStart.y+o.startY,o.currentX<o.minX&&(o.currentX=o.minX+1-Math.pow(o.minX-o.currentX+1,.8)),o.currentX>o.maxX&&(o.currentX=o.maxX-1+Math.pow(o.currentX-o.maxX+1,.8)),o.currentY<o.minY&&(o.currentY=o.minY+1-Math.pow(o.minY-o.currentY+1,.8)),o.currentY>o.maxY&&(o.currentY=o.maxY-1+Math.pow(o.currentY-o.maxY+1,.8)),s.prevPositionX||(s.prevPositionX=o.touchesCurrent.x),s.prevPositionY||(s.prevPositionY=o.touchesCurrent.y),s.prevTime||(s.prevTime=Date.now()),s.x=(o.touchesCurrent.x-s.prevPositionX)/(Date.now()-s.prevTime)/2,s.y=(o.touchesCurrent.y-s.prevPositionY)/(Date.now()-s.prevTime)/2,Math.abs(o.touchesCurrent.x-s.prevPositionX)<2&&(s.x=0),Math.abs(o.touchesCurrent.y-s.prevPositionY)<2&&(s.y=0),s.prevPositionX=o.touchesCurrent.x,s.prevPositionY=o.touchesCurrent.y,s.prevTime=Date.now(),n.$imageWrapEl.transform("translate3d("+o.currentX+"px, "+o.currentY+"px,0)")}}},onTouchEnd:function(){var e=this.zoom,t=e.gesture,i=e.image,n=e.velocity;if(t.$imageEl&&0!==t.$imageEl.length){if(!i.isTouched||!i.isMoved)return i.isTouched=!1,void(i.isMoved=!1);i.isTouched=!1,i.isMoved=!1;var o=300,s=300,a=n.x*o,r=i.currentX+a,l=n.y*s,d=i.currentY+l;0!==n.x&&(o=Math.abs((r-i.currentX)/n.x)),0!==n.y&&(s=Math.abs((d-i.currentY)/n.y));var c=Math.max(o,s);i.currentX=r,i.currentY=d;var u=i.width*e.scale,p=i.height*e.scale;i.minX=Math.min(t.slideWidth/2-u/2,0),i.maxX=-i.minX,i.minY=Math.min(t.slideHeight/2-p/2,0),i.maxY=-i.minY,i.currentX=Math.max(Math.min(i.currentX,i.maxX),i.minX),i.currentY=Math.max(Math.min(i.currentY,i.maxY),i.minY),t.$imageWrapEl.transition(c).transform("translate3d("+i.currentX+"px, "+i.currentY+"px,0)")}},onTransitionEnd:function(){var e=this.zoom,t=e.gesture;t.$slideEl&&this.previousIndex!==this.activeIndex&&(t.$imageEl.transform("translate3d(0,0,0) scale(1)"),t.$imageWrapEl.transform("translate3d(0,0,0)"),t.$slideEl=void 0,t.$imageEl=void 0,t.$imageWrapEl=void 0,e.scale=1,e.currentScale=1)},toggle:function(e){var t=this.zoom;t.scale&&1!==t.scale?t.out():t.in(e)},in:function(e){var t,i,n,o,s,a,r,l,d,c,u,p,h,f,m,g,v=this,y=v.zoom,b=v.params.zoom,x=y.gesture,w=y.image;x.$slideEl||(x.$slideEl=v.clickedSlide?L(v.clickedSlide):v.slides.eq(v.activeIndex),x.$imageEl=x.$slideEl.find("img, svg, canvas"),x.$imageWrapEl=x.$imageEl.parent("."+b.containerClass)),x.$imageEl&&0!==x.$imageEl.length&&(x.$slideEl.addClass(""+b.zoomedSlideClass),i=void 0===w.touchesStart.x&&e?(t="touchend"===e.type?e.changedTouches[0].pageX:e.pageX,"touchend"===e.type?e.changedTouches[0].pageY:e.pageY):(t=w.touchesStart.x,w.touchesStart.y),y.scale=x.$imageWrapEl.attr("data-swiper-zoom")||b.maxRatio,y.currentScale=x.$imageWrapEl.attr("data-swiper-zoom")||b.maxRatio,e?(m=x.$slideEl[0].offsetWidth,g=x.$slideEl[0].offsetHeight,n=x.$slideEl.offset().left+m/2-t,o=x.$slideEl.offset().top+g/2-i,r=x.$imageEl[0].offsetWidth,l=x.$imageEl[0].offsetHeight,d=r*y.scale,c=l*y.scale,h=-(u=Math.min(m/2-d/2,0)),f=-(p=Math.min(g/2-c/2,0)),(s=n*y.scale)<u&&(s=u),h<s&&(s=h),(a=o*y.scale)<p&&(a=p),f<a&&(a=f)):a=s=0,x.$imageWrapEl.transition(300).transform("translate3d("+s+"px, "+a+"px,0)"),x.$imageEl.transition(300).transform("translate3d(0,0,0) scale("+y.scale+")"))},out:function(){var e=this,t=e.zoom,i=e.params.zoom,n=t.gesture;n.$slideEl||(n.$slideEl=e.clickedSlide?L(e.clickedSlide):e.slides.eq(e.activeIndex),n.$imageEl=n.$slideEl.find("img, svg, canvas"),n.$imageWrapEl=n.$imageEl.parent("."+i.containerClass)),n.$imageEl&&0!==n.$imageEl.length&&(t.scale=1,t.currentScale=1,n.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"),n.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"),n.$slideEl.removeClass(""+i.zoomedSlideClass),n.$slideEl=void 0)},enable:function(){var e,t=this,i=t.zoom;i.enabled||(i.enabled=!0,e=!("touchstart"!==t.touchEvents.start||!R.passiveListener||!t.params.passiveListeners)&&{passive:!0,capture:!1},R.gestures?(t.$wrapperEl.on("gesturestart",".swiper-slide",i.onGestureStart,e),t.$wrapperEl.on("gesturechange",".swiper-slide",i.onGestureChange,e),t.$wrapperEl.on("gestureend",".swiper-slide",i.onGestureEnd,e)):"touchstart"===t.touchEvents.start&&(t.$wrapperEl.on(t.touchEvents.start,".swiper-slide",i.onGestureStart,e),t.$wrapperEl.on(t.touchEvents.move,".swiper-slide",i.onGestureChange,e),t.$wrapperEl.on(t.touchEvents.end,".swiper-slide",i.onGestureEnd,e)),t.$wrapperEl.on(t.touchEvents.move,"."+t.params.zoom.containerClass,i.onTouchMove))},disable:function(){var e,t=this,i=t.zoom;i.enabled&&(t.zoom.enabled=!1,e=!("touchstart"!==t.touchEvents.start||!R.passiveListener||!t.params.passiveListeners)&&{passive:!0,capture:!1},R.gestures?(t.$wrapperEl.off("gesturestart",".swiper-slide",i.onGestureStart,e),t.$wrapperEl.off("gesturechange",".swiper-slide",i.onGestureChange,e),t.$wrapperEl.off("gestureend",".swiper-slide",i.onGestureEnd,e)):"touchstart"===t.touchEvents.start&&(t.$wrapperEl.off(t.touchEvents.start,".swiper-slide",i.onGestureStart,e),t.$wrapperEl.off(t.touchEvents.move,".swiper-slide",i.onGestureChange,e),t.$wrapperEl.off(t.touchEvents.end,".swiper-slide",i.onGestureEnd,e)),t.$wrapperEl.off(t.touchEvents.move,"."+t.params.zoom.containerClass,i.onTouchMove))}},ne={loadInSlide:function(e,l){void 0===l&&(l=!0);var d,t,c=this,u=c.params.lazy;void 0!==e&&0!==c.slides.length&&(t=(d=c.virtual&&c.params.virtual.enabled?c.$wrapperEl.children("."+c.params.slideClass+'[data-swiper-slide-index="'+e+'"]'):c.slides.eq(e)).find("."+u.elementClass+":not(."+u.loadedClass+"):not(."+u.loadingClass+")"),!d.hasClass(u.elementClass)||d.hasClass(u.loadedClass)||d.hasClass(u.loadingClass)||(t=t.add(d[0])),0!==t.length&&t.each(function(e,t){var n=L(t);n.addClass(u.loadingClass);var o=n.attr("data-background"),s=n.attr("data-src"),a=n.attr("data-srcset"),r=n.attr("data-sizes");c.loadImage(n[0],s||o,a,r,!1,function(){var e,t,i;null==c||!c||c&&!c.params||c.destroyed||(o?(n.css("background-image",'url("'+o+'")'),n.removeAttr("data-background")):(a&&(n.attr("srcset",a),n.removeAttr("data-srcset")),r&&(n.attr("sizes",r),n.removeAttr("data-sizes")),s&&(n.attr("src",s),n.removeAttr("data-src"))),n.addClass(u.loadedClass).removeClass(u.loadingClass),d.find("."+u.preloaderClass).remove(),c.params.loop&&l&&(e=d.attr("data-swiper-slide-index"),d.hasClass(c.params.slideDuplicateClass)?(t=c.$wrapperEl.children('[data-swiper-slide-index="'+e+'"]:not(.'+c.params.slideDuplicateClass+")"),c.lazy.loadInSlide(t.index(),!1)):(i=c.$wrapperEl.children("."+c.params.slideDuplicateClass+'[data-swiper-slide-index="'+e+'"]'),c.lazy.loadInSlide(i.index(),!1))),c.emit("lazyImageReady",d[0],n[0]))}),c.emit("lazyImageLoad",d[0],n[0])}))},load:function(){var n=this,t=n.$wrapperEl,i=n.params,o=n.slides,e=n.activeIndex,s=n.virtual&&i.virtual.enabled,a=i.lazy,r=i.slidesPerView;function l(e){if(s){if(t.children("."+i.slideClass+'[data-swiper-slide-index="'+e+'"]').length)return 1}else if(o[e])return 1}function d(e){return s?L(e).attr("data-swiper-slide-index"):L(e).index()}if("auto"===r&&(r=0),n.lazy.initialImageLoaded||(n.lazy.initialImageLoaded=!0),n.params.watchSlidesVisibility)t.children("."+i.slideVisibleClass).each(function(e,t){var i=s?L(t).attr("data-swiper-slide-index"):L(t).index();n.lazy.loadInSlide(i)});else if(1<r)for(var c=e;c<e+r;c+=1)l(c)&&n.lazy.loadInSlide(c);else n.lazy.loadInSlide(e);if(a.loadPrevNext)if(1<r||a.loadPrevNextAmount&&1<a.loadPrevNextAmount){for(var u=a.loadPrevNextAmount,p=r,h=Math.min(e+p+Math.max(u,p),o.length),f=Math.max(e-Math.max(p,u),0),m=e+r;m<h;m+=1)l(m)&&n.lazy.loadInSlide(m);for(var g=f;g<e;g+=1)l(g)&&n.lazy.loadInSlide(g)}else{var v=t.children("."+i.slideNextClass);0<v.length&&n.lazy.loadInSlide(d(v));var y=t.children("."+i.slidePrevClass);0<y.length&&n.lazy.loadInSlide(d(y))}}},oe={LinearSpline:function(e,t){var i,n,o,s,a;return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(a=function(e,t){for(n=-1,i=e.length;1<i-n;)e[o=i+n>>1]<=t?n=o:i=o;return i}(this.x,e),s=a-1,(e-this.x[s])*(this.y[a]-this.y[s])/(this.x[a]-this.x[s])+this.y[s]):0},this},getInterpolateFunction:function(e){var t=this;t.controller.spline||(t.controller.spline=t.params.loop?new oe.LinearSpline(t.slidesGrid,e.slidesGrid):new oe.LinearSpline(t.snapGrid,e.snapGrid))},setTranslate:function(e,t){var i,n,o=this,s=o.controller.control;function a(e){var t=o.rtlTranslate?-o.translate:o.translate;"slide"===o.params.controller.by&&(o.controller.getInterpolateFunction(e),n=-o.controller.spline.interpolate(-t)),n&&"container"!==o.params.controller.by||(i=(e.maxTranslate()-e.minTranslate())/(o.maxTranslate()-o.minTranslate()),n=(t-o.minTranslate())*i+e.minTranslate()),o.params.controller.inverse&&(n=e.maxTranslate()-n),e.updateProgress(n),e.setTranslate(n,o),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(s))for(var r=0;r<s.length;r+=1)s[r]!==t&&s[r]instanceof B&&a(s[r]);else s instanceof B&&t!==s&&a(s)},setTransition:function(t,e){var i,n=this,o=n.controller.control;function s(e){e.setTransition(t,n),0!==t&&(e.transitionStart(),e.params.autoHeight&&j.nextTick(function(){e.updateAutoHeight()}),e.$wrapperEl.transitionEnd(function(){o&&(e.params.loop&&"slide"===n.params.controller.by&&e.loopFix(),e.transitionEnd())}))}if(Array.isArray(o))for(i=0;i<o.length;i+=1)o[i]!==e&&o[i]instanceof B&&s(o[i]);else o instanceof B&&e!==o&&s(o)}},se={makeElFocusable:function(e){return e.attr("tabIndex","0"),e},addElRole:function(e,t){return e.attr("role",t),e},addElLabel:function(e,t){return e.attr("aria-label",t),e},disableEl:function(e){return e.attr("aria-disabled",!0),e},enableEl:function(e){return e.attr("aria-disabled",!1),e},onEnterKey:function(e){var t,i=this,n=i.params.a11y;13===e.keyCode&&(t=L(e.target),i.navigation&&i.navigation.$nextEl&&t.is(i.navigation.$nextEl)&&(i.isEnd&&!i.params.loop||i.slideNext(),i.isEnd?i.a11y.notify(n.lastSlideMessage):i.a11y.notify(n.nextSlideMessage)),i.navigation&&i.navigation.$prevEl&&t.is(i.navigation.$prevEl)&&(i.isBeginning&&!i.params.loop||i.slidePrev(),i.isBeginning?i.a11y.notify(n.firstSlideMessage):i.a11y.notify(n.prevSlideMessage)),i.pagination&&t.is("."+i.params.pagination.bulletClass)&&t[0].click())},notify:function(e){var t=this.a11y.liveRegion;0!==t.length&&(t.html(""),t.html(e))},updateNavigation:function(){var e,t,i,n=this;n.params.loop||(t=(e=n.navigation).$nextEl,(i=e.$prevEl)&&0<i.length&&(n.isBeginning?n.a11y.disableEl(i):n.a11y.enableEl(i)),t&&0<t.length&&(n.isEnd?n.a11y.disableEl(t):n.a11y.enableEl(t)))},updatePagination:function(){var n=this,o=n.params.a11y;n.pagination&&n.params.pagination.clickable&&n.pagination.bullets&&n.pagination.bullets.length&&n.pagination.bullets.each(function(e,t){var i=L(t);n.a11y.makeElFocusable(i),n.a11y.addElRole(i,"button"),n.a11y.addElLabel(i,o.paginationBulletMessage.replace(/{{index}}/,i.index()+1))})},init:function(){var e=this;e.$el.append(e.a11y.liveRegion);var t,i,n=e.params.a11y;e.navigation&&e.navigation.$nextEl&&(t=e.navigation.$nextEl),e.navigation&&e.navigation.$prevEl&&(i=e.navigation.$prevEl),t&&(e.a11y.makeElFocusable(t),e.a11y.addElRole(t,"button"),e.a11y.addElLabel(t,n.nextSlideMessage),t.on("keydown",e.a11y.onEnterKey)),i&&(e.a11y.makeElFocusable(i),e.a11y.addElRole(i,"button"),e.a11y.addElLabel(i,n.prevSlideMessage),i.on("keydown",e.a11y.onEnterKey)),e.pagination&&e.params.pagination.clickable&&e.pagination.bullets&&e.pagination.bullets.length&&e.pagination.$el.on("keydown","."+e.params.pagination.bulletClass,e.a11y.onEnterKey)},destroy:function(){var e,t,i=this;i.a11y.liveRegion&&0<i.a11y.liveRegion.length&&i.a11y.liveRegion.remove(),i.navigation&&i.navigation.$nextEl&&(e=i.navigation.$nextEl),i.navigation&&i.navigation.$prevEl&&(t=i.navigation.$prevEl),e&&e.off("keydown",i.a11y.onEnterKey),t&&t.off("keydown",i.a11y.onEnterKey),i.pagination&&i.params.pagination.clickable&&i.pagination.bullets&&i.pagination.bullets.length&&i.pagination.$el.off("keydown","."+i.params.pagination.bulletClass,i.a11y.onEnterKey)}},ae={init:function(){var e=this;if(e.params.history){if(!N.history||!N.history.pushState)return e.params.history.enabled=!1,void(e.params.hashNavigation.enabled=!0);var t=e.history;t.initialized=!0,t.paths=ae.getPathValues(),(t.paths.key||t.paths.value)&&(t.scrollToSlide(0,t.paths.value,e.params.runCallbacksOnInit),e.params.history.replaceState||N.addEventListener("popstate",e.history.setHistoryPopState))}},destroy:function(){this.params.history.replaceState||N.removeEventListener("popstate",this.history.setHistoryPopState)},setHistoryPopState:function(){this.history.paths=ae.getPathValues(),this.history.scrollToSlide(this.params.speed,this.history.paths.value,!1)},getPathValues:function(){var e=N.location.pathname.slice(1).split("/").filter(function(e){return""!==e}),t=e.length;return{key:e[t-2],value:e[t-1]}},setHistory:function(e,t){var i,n,o;this.history.initialized&&this.params.history.enabled&&(i=this.slides.eq(t),n=ae.slugify(i.attr("data-history")),N.location.pathname.includes(e)||(n=e+"/"+n),(o=N.history.state)&&o.value===n||(this.params.history.replaceState?N.history.replaceState({value:n},null,n):N.history.pushState({value:n},null,n)))},slugify:function(e){return e.toString().toLowerCase().replace(/\s+/g,"-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,"")},scrollToSlide:function(e,t,i){var n=this;if(t)for(var o=0,s=n.slides.length;o<s;o+=1){var a,r=n.slides.eq(o);ae.slugify(r.attr("data-history"))!==t||r.hasClass(n.params.slideDuplicateClass)||(a=r.index(),n.slideTo(a,e,i))}else n.slideTo(0,e,i)}},re={onHashCange:function(){var e=this,t=m.location.hash.replace("#","");t!==e.slides.eq(e.activeIndex).attr("data-hash")&&e.slideTo(e.$wrapperEl.children("."+e.params.slideClass+'[data-hash="'+t+'"]').index())},setHash:function(){var e,t,i=this;i.hashNavigation.initialized&&i.params.hashNavigation.enabled&&(i.params.hashNavigation.replaceState&&N.history&&N.history.replaceState?N.history.replaceState(null,null,"#"+i.slides.eq(i.activeIndex).attr("data-hash")||""):(t=(e=i.slides.eq(i.activeIndex)).attr("data-hash")||e.attr("data-history"),m.location.hash=t||""))},init:function(){var e=this;if(!(!e.params.hashNavigation.enabled||e.params.history&&e.params.history.enabled)){e.hashNavigation.initialized=!0;var t=m.location.hash.replace("#","");if(t)for(var i=0,n=e.slides.length;i<n;i+=1){var o,s=e.slides.eq(i);(s.attr("data-hash")||s.attr("data-history"))!==t||s.hasClass(e.params.slideDuplicateClass)||(o=s.index(),e.slideTo(o,0,e.params.runCallbacksOnInit,!0))}e.params.hashNavigation.watchState&&L(N).on("hashchange",e.hashNavigation.onHashCange)}},destroy:function(){this.params.hashNavigation.watchState&&L(N).off("hashchange",this.hashNavigation.onHashCange)}},le={run:function(){var e=this,t=e.slides.eq(e.activeIndex),i=e.params.autoplay.delay;t.attr("data-swiper-autoplay")&&(i=t.attr("data-swiper-autoplay")||e.params.autoplay.delay),e.autoplay.timeout=j.nextTick(function(){e.params.autoplay.reverseDirection?e.params.loop?(e.loopFix(),e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.isBeginning?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(e.slides.length-1,e.params.speed,!0,!0),e.emit("autoplay")):(e.slidePrev(e.params.speed,!0,!0),e.emit("autoplay")):e.params.loop?(e.loopFix(),e.slideNext(e.params.speed,!0,!0),e.emit("autoplay")):e.isEnd?e.params.autoplay.stopOnLastSlide?e.autoplay.stop():(e.slideTo(0,e.params.speed,!0,!0),e.emit("autoplay")):(e.slideNext(e.params.speed,!0,!0),e.emit("autoplay"))},i)},start:function(){var e=this;return void 0===e.autoplay.timeout&&!e.autoplay.running&&(e.autoplay.running=!0,e.emit("autoplayStart"),e.autoplay.run(),!0)},stop:function(){var e=this;return!!e.autoplay.running&&void 0!==e.autoplay.timeout&&(e.autoplay.timeout&&(clearTimeout(e.autoplay.timeout),e.autoplay.timeout=void 0),e.autoplay.running=!1,e.emit("autoplayStop"),!0)},pause:function(e){var t=this;t.autoplay.running&&(t.autoplay.paused||(t.autoplay.timeout&&clearTimeout(t.autoplay.timeout),t.autoplay.paused=!0,0!==e&&t.params.autoplay.waitForTransition?(t.$wrapperEl[0].addEventListener("transitionend",t.autoplay.onTransitionEnd),t.$wrapperEl[0].addEventListener("webkitTransitionEnd",t.autoplay.onTransitionEnd)):(t.autoplay.paused=!1,t.autoplay.run())))}},de={setTranslate:function(){for(var e=this,t=e.slides,i=0;i<t.length;i+=1){var n=e.slides.eq(i),o=-n[0].swiperSlideOffset;e.params.virtualTranslate||(o-=e.translate);var s=0;e.isHorizontal()||(s=o,o=0);var a=e.params.fadeEffect.crossFade?Math.max(1-Math.abs(n[0].progress),0):1+Math.min(Math.max(n[0].progress,-1),0);n.css({opacity:a}).transform("translate3d("+o+"px, "+s+"px, 0px)")}},setTransition:function(e){var i,n=this,t=n.slides,o=n.$wrapperEl;t.transition(e),n.params.virtualTranslate&&0!==e&&(i=!1,t.transitionEnd(function(){if(!i&&n&&!n.destroyed){i=!0,n.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)o.trigger(e[t])}}))}},ce={setTranslate:function(){var e,t=this,i=t.$el,n=t.$wrapperEl,o=t.slides,s=t.width,a=t.height,r=t.rtlTranslate,l=t.size,d=t.params.cubeEffect,c=t.isHorizontal(),u=t.virtual&&t.params.virtual.enabled,p=0;d.shadow&&(c?(0===(e=n.find(".swiper-cube-shadow")).length&&(e=L('<div class="swiper-cube-shadow"></div>'),n.append(e)),e.css({height:s+"px"})):0===(e=i.find(".swiper-cube-shadow")).length&&(e=L('<div class="swiper-cube-shadow"></div>'),i.append(e)));for(var h,f,m,g,v,y=0;y<o.length;y+=1){var b=o.eq(y),x=y;u&&(x=parseInt(b.attr("data-swiper-slide-index"),10));var w=90*x,S=Math.floor(w/360);r&&(w=-w,S=Math.floor(-w/360));var T=Math.max(Math.min(b[0].progress,1),-1),C=0,k=0,E=0;x%4==0?(C=4*-S*l,E=0):(x-1)%4==0?(C=0,E=4*-S*l):(x-2)%4==0?(C=l+4*S*l,E=l):(x-3)%4==0&&(C=-l,E=3*l+4*l*S),r&&(C=-C),c||(k=C,C=0);var $,M,P="rotateX("+(c?0:-w)+"deg) rotateY("+(c?w:0)+"deg) translate3d("+C+"px, "+k+"px, "+E+"px)";T<=1&&-1<T&&(p=r?90*-x-90*T:90*x+90*T),b.transform(P),d.slideShadows&&($=c?b.find(".swiper-slide-shadow-left"):b.find(".swiper-slide-shadow-top"),M=c?b.find(".swiper-slide-shadow-right"):b.find(".swiper-slide-shadow-bottom"),0===$.length&&($=L('<div class="swiper-slide-shadow-'+(c?"left":"top")+'"></div>'),b.append($)),0===M.length&&(M=L('<div class="swiper-slide-shadow-'+(c?"right":"bottom")+'"></div>'),b.append(M)),$.length&&($[0].style.opacity=Math.max(-T,0)),M.length&&(M[0].style.opacity=Math.max(T,0)))}n.css({"-webkit-transform-origin":"50% 50% -"+l/2+"px","-moz-transform-origin":"50% 50% -"+l/2+"px","-ms-transform-origin":"50% 50% -"+l/2+"px","transform-origin":"50% 50% -"+l/2+"px"}),d.shadow&&(c?e.transform("translate3d(0px, "+(s/2+d.shadowOffset)+"px, "+-s/2+"px) rotateX(90deg) rotateZ(0deg) scale("+d.shadowScale+")"):(h=Math.abs(p)-90*Math.floor(Math.abs(p)/90),f=1.5-(Math.sin(2*h*Math.PI/360)/2+Math.cos(2*h*Math.PI/360)/2),m=d.shadowScale,g=d.shadowScale/f,v=d.shadowOffset,e.transform("scale3d("+m+", 1, "+g+") translate3d(0px, "+(a/2+v)+"px, "+-a/2/g+"px) rotateX(-90deg)")));var A=z.isSafari||z.isUiWebView?-l/2:0;n.transform("translate3d(0px,0,"+A+"px) rotateX("+(t.isHorizontal()?0:p)+"deg) rotateY("+(t.isHorizontal()?-p:0)+"deg)")},setTransition:function(e){var t=this.$el;this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),this.params.cubeEffect.shadow&&!this.isHorizontal()&&t.find(".swiper-cube-shadow").transition(e)}},ue={setTranslate:function(){for(var e=this,t=e.slides,i=e.rtlTranslate,n=0;n<t.length;n+=1){var o=t.eq(n),s=o[0].progress;e.params.flipEffect.limitRotation&&(s=Math.max(Math.min(o[0].progress,1),-1));var a,r,l=-180*s,d=0,c=-o[0].swiperSlideOffset,u=0;e.isHorizontal()?i&&(l=-l):(u=c,d=-l,l=c=0),o[0].style.zIndex=-Math.abs(Math.round(s))+t.length,e.params.flipEffect.slideShadows&&(a=e.isHorizontal()?o.find(".swiper-slide-shadow-left"):o.find(".swiper-slide-shadow-top"),r=e.isHorizontal()?o.find(".swiper-slide-shadow-right"):o.find(".swiper-slide-shadow-bottom"),0===a.length&&(a=L('<div class="swiper-slide-shadow-'+(e.isHorizontal()?"left":"top")+'"></div>'),o.append(a)),0===r.length&&(r=L('<div class="swiper-slide-shadow-'+(e.isHorizontal()?"right":"bottom")+'"></div>'),o.append(r)),a.length&&(a[0].style.opacity=Math.max(-s,0)),r.length&&(r[0].style.opacity=Math.max(s,0))),o.transform("translate3d("+c+"px, "+u+"px, 0px) rotateX("+d+"deg) rotateY("+l+"deg)")}},setTransition:function(e){var i,n=this,t=n.slides,o=n.activeIndex,s=n.$wrapperEl;t.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e),n.params.virtualTranslate&&0!==e&&(i=!1,t.eq(o).transitionEnd(function(){if(!i&&n&&!n.destroyed){i=!0,n.animating=!1;for(var e=["webkitTransitionEnd","transitionend"],t=0;t<e.length;t+=1)s.trigger(e[t])}}))}},pe={setTranslate:function(){for(var e=this,t=e.width,i=e.height,n=e.slides,o=e.$wrapperEl,s=e.slidesSizesGrid,a=e.params.coverflowEffect,r=e.isHorizontal(),l=e.translate,d=r?t/2-l:i/2-l,c=r?a.rotate:-a.rotate,u=a.depth,p=0,h=n.length;p<h;p+=1){var f=n.eq(p),m=s[p],g=(d-f[0].swiperSlideOffset-m/2)/m*a.modifier,v=r?c*g:0,y=r?0:c*g,b=-u*Math.abs(g),x=r?0:a.stretch*g,w=r?a.stretch*g:0;Math.abs(w)<.001&&(w=0),Math.abs(x)<.001&&(x=0),Math.abs(b)<.001&&(b=0),Math.abs(v)<.001&&(v=0),Math.abs(y)<.001&&(y=0);var S,T,C="translate3d("+w+"px,"+x+"px,"+b+"px)  rotateX("+y+"deg) rotateY("+v+"deg)";f.transform(C),f[0].style.zIndex=1-Math.abs(Math.round(g)),a.slideShadows&&(S=r?f.find(".swiper-slide-shadow-left"):f.find(".swiper-slide-shadow-top"),T=r?f.find(".swiper-slide-shadow-right"):f.find(".swiper-slide-shadow-bottom"),0===S.length&&(S=L('<div class="swiper-slide-shadow-'+(r?"left":"top")+'"></div>'),f.append(S)),0===T.length&&(T=L('<div class="swiper-slide-shadow-'+(r?"right":"bottom")+'"></div>'),f.append(T)),S.length&&(S[0].style.opacity=0<g?g:0),T.length&&(T[0].style.opacity=0<-g?-g:0))}(R.pointerEvents||R.prefixedPointerEvents)&&(o[0].style.perspectiveOrigin=d+"px 50%")},setTransition:function(e){this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e)}},he=[H,q,F,W,Y,V,K,{name:"mousewheel",params:{mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarged:"container"}},create:function(){var e=this;j.extend(e,{mousewheel:{enabled:!1,enable:Z.enable.bind(e),disable:Z.disable.bind(e),handle:Z.handle.bind(e),handleMouseEnter:Z.handleMouseEnter.bind(e),handleMouseLeave:Z.handleMouseLeave.bind(e),lastScrollTime:j.now()}})},on:{init:function(){this.params.mousewheel.enabled&&this.mousewheel.enable()},destroy:function(){this.mousewheel.enabled&&this.mousewheel.disable()}}},{name:"navigation",params:{navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock"}},create:function(){j.extend(this,{navigation:{init:Q.init.bind(this),update:Q.update.bind(this),destroy:Q.destroy.bind(this)}})},on:{init:function(){this.navigation.init(),this.navigation.update()},toEdge:function(){this.navigation.update()},fromEdge:function(){this.navigation.update()},destroy:function(){this.navigation.destroy()},click:function(e){var t=this.navigation,i=t.$nextEl,n=t.$prevEl;!this.params.navigation.hideOnClick||L(e.target).is(n)||L(e.target).is(i)||(i&&i.toggleClass(this.params.navigation.hiddenClass),n&&n.toggleClass(this.params.navigation.hiddenClass))}}},{name:"pagination",params:{pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:function(e){return e},formatFractionTotal:function(e){return e},bulletClass:"swiper-pagination-bullet",bulletActiveClass:"swiper-pagination-bullet-active",modifierClass:"swiper-pagination-",currentClass:"swiper-pagination-current",totalClass:"swiper-pagination-total",hiddenClass:"swiper-pagination-hidden",progressbarFillClass:"swiper-pagination-progressbar-fill",progressbarOppositeClass:"swiper-pagination-progressbar-opposite",clickableClass:"swiper-pagination-clickable",lockClass:"swiper-pagination-lock"}},create:function(){var e=this;j.extend(e,{pagination:{init:J.init.bind(e),render:J.render.bind(e),update:J.update.bind(e),destroy:J.destroy.bind(e),dynamicBulletIndex:0}})},on:{init:function(){this.pagination.init(),this.pagination.render(),this.pagination.update()},activeIndexChange:function(){!this.params.loop&&void 0!==this.snapIndex||this.pagination.update()},snapIndexChange:function(){this.params.loop||this.pagination.update()},slidesLengthChange:function(){this.params.loop&&(this.pagination.render(),this.pagination.update())},snapGridLengthChange:function(){this.params.loop||(this.pagination.render(),this.pagination.update())},destroy:function(){this.pagination.destroy()},click:function(e){var t=this;t.params.pagination.el&&t.params.pagination.hideOnClick&&0<t.pagination.$el.length&&!L(e.target).hasClass(t.params.pagination.bulletClass)&&t.pagination.$el.toggleClass(t.params.pagination.hiddenClass)}}},{name:"scrollbar",params:{scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock",dragClass:"swiper-scrollbar-drag"}},create:function(){var e=this;j.extend(e,{scrollbar:{init:ee.init.bind(e),destroy:ee.destroy.bind(e),updateSize:ee.updateSize.bind(e),setTranslate:ee.setTranslate.bind(e),setTransition:ee.setTransition.bind(e),enableDraggable:ee.enableDraggable.bind(e),disableDraggable:ee.disableDraggable.bind(e),setDragPosition:ee.setDragPosition.bind(e),onDragStart:ee.onDragStart.bind(e),onDragMove:ee.onDragMove.bind(e),onDragEnd:ee.onDragEnd.bind(e),isTouched:!1,timeout:null,dragTimeout:null}})},on:{init:function(){this.scrollbar.init(),this.scrollbar.updateSize(),this.scrollbar.setTranslate()},update:function(){this.scrollbar.updateSize()},resize:function(){this.scrollbar.updateSize()},observerUpdate:function(){this.scrollbar.updateSize()},setTranslate:function(){this.scrollbar.setTranslate()},setTransition:function(e){this.scrollbar.setTransition(e)},destroy:function(){this.scrollbar.destroy()}}},{name:"parallax",params:{parallax:{enabled:!1}},create:function(){j.extend(this,{parallax:{setTransform:te.setTransform.bind(this),setTranslate:te.setTranslate.bind(this),setTransition:te.setTransition.bind(this)}})},on:{beforeInit:function(){this.params.parallax.enabled&&(this.params.watchSlidesProgress=!0)},init:function(){this.params.parallax&&this.parallax.setTranslate()},setTranslate:function(){this.params.parallax&&this.parallax.setTranslate()},setTransition:function(e){this.params.parallax&&this.parallax.setTransition(e)}}},{name:"zoom",params:{zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}},create:function(){var t=this,i={enabled:!1,scale:1,currentScale:1,isScaling:!1,gesture:{$slideEl:void 0,slideWidth:void 0,slideHeight:void 0,$imageEl:void 0,$imageWrapEl:void 0,maxRatio:3},image:{isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},velocity:{x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0}};"onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach(function(e){i[e]=ie[e].bind(t)}),j.extend(t,{zoom:i})},on:{init:function(){this.params.zoom.enabled&&this.zoom.enable()},destroy:function(){this.zoom.disable()},touchStart:function(e){this.zoom.enabled&&this.zoom.onTouchStart(e)},touchEnd:function(e){this.zoom.enabled&&this.zoom.onTouchEnd(e)},doubleTap:function(e){this.params.zoom.enabled&&this.zoom.enabled&&this.params.zoom.toggle&&this.zoom.toggle(e)},transitionEnd:function(){this.zoom.enabled&&this.params.zoom.enabled&&this.zoom.onTransitionEnd()}}},{name:"lazy",params:{lazy:{enabled:!1,loadPrevNext:!1,loadPrevNextAmount:1,loadOnTransitionStart:!1,elementClass:"swiper-lazy",loadingClass:"swiper-lazy-loading",loadedClass:"swiper-lazy-loaded",preloaderClass:"swiper-lazy-preloader"}},create:function(){j.extend(this,{lazy:{initialImageLoaded:!1,load:ne.load.bind(this),loadInSlide:ne.loadInSlide.bind(this)}})},on:{beforeInit:function(){this.params.lazy.enabled&&this.params.preloadImages&&(this.params.preloadImages=!1)},init:function(){this.params.lazy.enabled&&!this.params.loop&&0===this.params.initialSlide&&this.lazy.load()},scroll:function(){this.params.freeMode&&!this.params.freeModeSticky&&this.lazy.load()},resize:function(){this.params.lazy.enabled&&this.lazy.load()},scrollbarDragMove:function(){this.params.lazy.enabled&&this.lazy.load()},transitionStart:function(){var e=this;e.params.lazy.enabled&&(e.params.lazy.loadOnTransitionStart||!e.params.lazy.loadOnTransitionStart&&!e.lazy.initialImageLoaded)&&e.lazy.load()},transitionEnd:function(){this.params.lazy.enabled&&!this.params.lazy.loadOnTransitionStart&&this.lazy.load()}}},{name:"controller",params:{controller:{control:void 0,inverse:!1,by:"slide"}},create:function(){j.extend(this,{controller:{control:this.params.controller.control,getInterpolateFunction:oe.getInterpolateFunction.bind(this),setTranslate:oe.setTranslate.bind(this),setTransition:oe.setTransition.bind(this)}})},on:{update:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},resize:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},observerUpdate:function(){this.controller.control&&this.controller.spline&&(this.controller.spline=void 0,delete this.controller.spline)},setTranslate:function(e,t){this.controller.control&&this.controller.setTranslate(e,t)},setTransition:function(e,t){this.controller.control&&this.controller.setTransition(e,t)}}},{name:"a11y",params:{a11y:{enabled:!0,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}"}},create:function(){var t=this;j.extend(t,{a11y:{liveRegion:L('<span class="'+t.params.a11y.notificationClass+'" aria-live="assertive" aria-atomic="true"></span>')}}),Object.keys(se).forEach(function(e){t.a11y[e]=se[e].bind(t)})},on:{init:function(){this.params.a11y.enabled&&(this.a11y.init(),this.a11y.updateNavigation())},toEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},fromEdge:function(){this.params.a11y.enabled&&this.a11y.updateNavigation()},paginationUpdate:function(){this.params.a11y.enabled&&this.a11y.updatePagination()},destroy:function(){this.params.a11y.enabled&&this.a11y.destroy()}}},{name:"history",params:{history:{enabled:!1,replaceState:!1,key:"slides"}},create:function(){j.extend(this,{history:{init:ae.init.bind(this),setHistory:ae.setHistory.bind(this),setHistoryPopState:ae.setHistoryPopState.bind(this),scrollToSlide:ae.scrollToSlide.bind(this),destroy:ae.destroy.bind(this)}})},on:{init:function(){this.params.history.enabled&&this.history.init()},destroy:function(){this.params.history.enabled&&this.history.destroy()},transitionEnd:function(){this.history.initialized&&this.history.setHistory(this.params.history.key,this.activeIndex)}}},{name:"hash-navigation",params:{hashNavigation:{enabled:!1,replaceState:!1,watchState:!1}},create:function(){j.extend(this,{hashNavigation:{initialized:!1,init:re.init.bind(this),destroy:re.destroy.bind(this),setHash:re.setHash.bind(this),onHashCange:re.onHashCange.bind(this)}})},on:{init:function(){this.params.hashNavigation.enabled&&this.hashNavigation.init()},destroy:function(){this.params.hashNavigation.enabled&&this.hashNavigation.destroy()},transitionEnd:function(){this.hashNavigation.initialized&&this.hashNavigation.setHash()}}},{name:"autoplay",params:{autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!0,stopOnLastSlide:!1,reverseDirection:!1}},create:function(){var t=this;j.extend(t,{autoplay:{running:!1,paused:!1,run:le.run.bind(t),start:le.start.bind(t),stop:le.stop.bind(t),pause:le.pause.bind(t),onTransitionEnd:function(e){t&&!t.destroyed&&t.$wrapperEl&&e.target===this&&(t.$wrapperEl[0].removeEventListener("transitionend",t.autoplay.onTransitionEnd),t.$wrapperEl[0].removeEventListener("webkitTransitionEnd",t.autoplay.onTransitionEnd),t.autoplay.paused=!1,t.autoplay.running?t.autoplay.run():t.autoplay.stop())}}})},on:{init:function(){this.params.autoplay.enabled&&this.autoplay.start()},beforeTransitionStart:function(e,t){this.autoplay.running&&(t||!this.params.autoplay.disableOnInteraction?this.autoplay.pause(e):this.autoplay.stop())},sliderFirstMove:function(){this.autoplay.running&&(this.params.autoplay.disableOnInteraction?this.autoplay.stop():this.autoplay.pause())},destroy:function(){this.autoplay.running&&this.autoplay.stop()}}},{name:"effect-fade",params:{fadeEffect:{crossFade:!1}},create:function(){j.extend(this,{fadeEffect:{setTranslate:de.setTranslate.bind(this),setTransition:de.setTransition.bind(this)}})},on:{beforeInit:function(){var e;"fade"===this.params.effect&&(this.classNames.push(this.params.containerModifierClass+"fade"),e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0},j.extend(this.params,e),j.extend(this.originalParams,e))},setTranslate:function(){"fade"===this.params.effect&&this.fadeEffect.setTranslate()},setTransition:function(e){"fade"===this.params.effect&&this.fadeEffect.setTransition(e)}}},{name:"effect-cube",params:{cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}},create:function(){j.extend(this,{cubeEffect:{setTranslate:ce.setTranslate.bind(this),setTransition:ce.setTransition.bind(this)}})},on:{beforeInit:function(){var e;"cube"===this.params.effect&&(this.classNames.push(this.params.containerModifierClass+"cube"),this.classNames.push(this.params.containerModifierClass+"3d"),e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0},j.extend(this.params,e),j.extend(this.originalParams,e))},setTranslate:function(){"cube"===this.params.effect&&this.cubeEffect.setTranslate()},setTransition:function(e){"cube"===this.params.effect&&this.cubeEffect.setTransition(e)}}},{name:"effect-flip",params:{flipEffect:{slideShadows:!0,limitRotation:!0}},create:function(){j.extend(this,{flipEffect:{setTranslate:ue.setTranslate.bind(this),setTransition:ue.setTransition.bind(this)}})},on:{beforeInit:function(){var e;"flip"===this.params.effect&&(this.classNames.push(this.params.containerModifierClass+"flip"),this.classNames.push(this.params.containerModifierClass+"3d"),e={slidesPerView:1,slidesPerColumn:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!0},j.extend(this.params,e),j.extend(this.originalParams,e))},setTranslate:function(){"flip"===this.params.effect&&this.flipEffect.setTranslate()},setTransition:function(e){"flip"===this.params.effect&&this.flipEffect.setTransition(e)}}},{name:"effect-coverflow",params:{coverflowEffect:{rotate:50,stretch:0,depth:100,modifier:1,slideShadows:!0}},create:function(){j.extend(this,{coverflowEffect:{setTranslate:pe.setTranslate.bind(this),setTransition:pe.setTransition.bind(this)}})},on:{beforeInit:function(){"coverflow"===this.params.effect&&(this.classNames.push(this.params.containerModifierClass+"coverflow"),this.classNames.push(this.params.containerModifierClass+"3d"),this.params.watchSlidesProgress=!0,this.originalParams.watchSlidesProgress=!0)},setTranslate:function(){"coverflow"===this.params.effect&&this.coverflowEffect.setTranslate()},setTransition:function(e){"coverflow"===this.params.effect&&this.coverflowEffect.setTransition(e)}}}];return void 0===B.use&&(B.use=B.Class.use,B.installModule=B.Class.installModule),B.use(he),B}),function(d,s,m,g){"use strict";function i(e){var t=e.currentTarget,i=e.data?e.data.options:{},n=e.data?e.data.items:[],o=m(t).attr("data-fancybox")||"",s=0;e.preventDefault(),e.stopPropagation(),o?(s=(n=n.length?n.filter('[data-fancybox="'+o+'"]'):m('[data-fancybox="'+o+'"]')).index(t))<0&&(s=0):n=[t],m.fancybox.open(n,i,s)}if(m){if(m.fn.fancybox)return m.error("fancyBox already initialized");var o={loop:!1,margin:[44,0],gutter:50,keyboard:!0,arrows:!0,infobar:!1,toolbar:!0,buttons:["slideShow","fullScreen","thumbs","close"],idleTime:4,smallBtn:"auto",protect:!1,modal:!1,image:{preload:"auto"},ajax:{settings:{data:{fancybox:!0}}},iframe:{tpl:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen allowtransparency="true" src=""></iframe>',preload:!0,css:{},attr:{scrolling:"auto"}},animationEffect:"zoom",animationDuration:366,zoomOpacity:"auto",transitionEffect:"fade",transitionDuration:366,slideClass:"",baseClass:"",baseTpl:'<div class="fancybox-container" role="dialog" tabindex="-1"><div class="fancybox-bg"></div><div class="fancybox-inner"><div class="fancybox-infobar"><button data-fancybox-prev title="{{PREV}}" class="fancybox-button fancybox-button--left"></button><div class="fancybox-infobar__body"><span data-fancybox-index></span>&nbsp;/&nbsp;<span data-fancybox-count></span></div><button data-fancybox-next title="{{NEXT}}" class="fancybox-button fancybox-button--right"></button></div><div class="fancybox-toolbar">{{BUTTONS}}</div><div class="fancybox-navigation"><button data-fancybox-prev title="{{PREV}}" class="fancybox-arrow fancybox-arrow--left" /><button data-fancybox-next title="{{NEXT}}" class="fancybox-arrow fancybox-arrow--right" /></div><div class="fancybox-stage"></div><div class="fancybox-caption-wrap"><div class="fancybox-caption"></div></div></div></div>',spinnerTpl:'<div class="fancybox-loading"></div>',errorTpl:'<div class="fancybox-error"><p>{{ERROR}}<p></div>',btnTpl:{slideShow:'<button data-fancybox-play class="fancybox-button fancybox-button--play" title="{{PLAY_START}}"></button>',fullScreen:'<button data-fancybox-fullscreen class="fancybox-button fancybox-button--fullscreen" title="{{FULL_SCREEN}}"></button>',thumbs:'<button data-fancybox-thumbs class="fancybox-button fancybox-button--thumbs" title="{{THUMBS}}"></button>',close:'<button data-fancybox-close class="fancybox-button fancybox-button--close" title="{{CLOSE}}"></button>',smallBtn:'<button data-fancybox-close class="fancybox-close-small" title="{{CLOSE}}"></button>'},parentEl:"body",autoFocus:!0,backFocus:!0,trapFocus:!0,fullScreen:{autoStart:!1},touch:{vertical:!0,momentum:!0},hash:null,media:{},slideShow:{autoStart:!1,speed:4e3},thumbs:{autoStart:!1,hideOnClose:!0},onInit:m.noop,beforeLoad:m.noop,afterLoad:m.noop,beforeShow:m.noop,afterShow:m.noop,beforeClose:m.noop,afterClose:m.noop,onActivate:m.noop,onDeactivate:m.noop,clickContent:function(e){return"image"===e.type&&"zoom"},clickSlide:"close",clickOutside:"close",dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1,mobile:{clickContent:function(e){return"image"===e.type&&"toggleControls"},clickSlide:function(e){return"image"===e.type?"toggleControls":"close"},dblclickContent:function(e){return"image"===e.type&&"zoom"},dblclickSlide:function(e){return"image"===e.type&&"zoom"}},lang:"en",i18n:{en:{CLOSE:"Close",NEXT:"Next",PREV:"Previous",ERROR:"The requested content cannot be loaded. <br/> Please try again later.",PLAY_START:"Start slideshow",PLAY_STOP:"Pause slideshow",FULL_SCREEN:"Full screen",THUMBS:"Thumbnails"},de:{CLOSE:"Schliessen",NEXT:"Weiter",PREV:"ZurÃ¼ck",ERROR:"Die angeforderten Daten konnten nicht geladen werden. <br/> Bitte versuchen Sie es spÃ¤ter nochmal.",PLAY_START:"Diaschau starten",PLAY_STOP:"Diaschau beenden",FULL_SCREEN:"Vollbild",THUMBS:"Vorschaubilder"}}},c=m(d),a=m(s),r=0,u=d.requestAnimationFrame||d.webkitRequestAnimationFrame||d.mozRequestAnimationFrame||d.oRequestAnimationFrame||function(e){return d.setTimeout(e,1e3/60)},p=function(){var e,t=s.createElement("fakeelement"),i={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(e in i)if(t.style[e]!==g)return i[e]}(),h=function(e){return e&&e.length&&e[0].offsetHeight},n=function(e,t,i){var n=this;n.opts=m.extend(!0,{index:i},o,t||{}),t&&m.isArray(t.buttons)&&(n.opts.buttons=t.buttons),n.id=n.opts.id||++r,n.group=[],n.currIndex=parseInt(n.opts.index,10)||0,n.prevIndex=null,n.prevPos=null,n.currPos=0,n.firstRun=null,n.createGroup(e),n.group.length&&(n.$lastFocus=m(s.activeElement).blur(),n.slides={},n.init(e))};m.extend(n.prototype,{init:function(){var e,t,i,n=this,o=n.group[n.currIndex].opts;n.scrollTop=a.scrollTop(),n.scrollLeft=a.scrollLeft(),m.fancybox.getInstance()||m.fancybox.isMobile||"hidden"===m("body").css("overflow")||(e=m("body").width(),m("html").addClass("fancybox-enabled"),1<(e=m("body").width()-e)&&m("head").append('<style id="fancybox-style-noscroll" type="text/css">.compensate-for-scrollbar, .fancybox-enabled body { margin-right: '+e+"px; }</style>")),i="",m.each(o.buttons,function(e,t){i+=o.btnTpl[t]||""}),t=m(n.translate(n,o.baseTpl.replace("{{BUTTONS}}",i))).addClass("fancybox-is-hidden").attr("id","fancybox-container-"+n.id).addClass(o.baseClass).data("FancyBox",n).prependTo(o.parentEl),n.$refs={container:t},["bg","inner","infobar","toolbar","stage","caption"].forEach(function(e){n.$refs[e]=t.find(".fancybox-"+e)}),(!o.arrows||n.group.length<2)&&t.find(".fancybox-navigation").remove(),o.infobar||n.$refs.infobar.remove(),o.toolbar||n.$refs.toolbar.remove(),n.trigger("onInit"),n.activate(),n.jumpTo(n.currIndex)},translate:function(e,t){var n=e.opts.i18n[e.opts.lang];return t.replace(/\{\{(\w+)\}\}/g,function(e,t){var i=n[t];return i===g?e:i})},createGroup:function(e){var d=this,t=m.makeArray(e);m.each(t,function(e,t){var i,n,o,s,a={},r={},l=[];m.isPlainObject(t)?r=(a=t).opts||t:"object"===m.type(t)&&m(t).length?(i=m(t),l=i.data(),r="options"in l?l.options:{},r="object"===m.type(r)?r:{},a.src="src"in l?l.src:r.src||i.attr("href"),["width","height","thumb","type","filter"].forEach(function(e){e in l&&(r[e]=l[e])}),"srcset"in l&&(r.image={srcset:l.srcset}),r.$orig=i,a.type||a.src||(a.type="inline",a.src=t)):a={type:"html",src:t+""},a.opts=m.extend(!0,{},d.opts,r),m.fancybox.isMobile&&(a.opts=m.extend(!0,{},a.opts,a.opts.mobile)),n=a.type||a.opts.type,o=a.src||"",!n&&o&&(o.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i)?n="image":o.match(/\.(pdf)((\?|#).*)?$/i)?n="pdf":"#"===o.charAt(0)&&(n="inline")),a.type=n,a.index=d.group.length,a.opts.$orig&&!a.opts.$orig.length&&delete a.opts.$orig,!a.opts.$thumb&&a.opts.$orig&&(a.opts.$thumb=a.opts.$orig.find("img:first")),a.opts.$thumb&&!a.opts.$thumb.length&&delete a.opts.$thumb,"function"===m.type(a.opts.caption)?a.opts.caption=a.opts.caption.apply(t,[d,a]):"caption"in l&&(a.opts.caption=l.caption),a.opts.caption=a.opts.caption===g?"":a.opts.caption+"","ajax"!==n||1<(s=o.split(/\s+/,2)).length&&(a.src=s.shift(),a.opts.filter=s.shift()),"auto"==a.opts.smallBtn&&(-1<m.inArray(n,["html","inline","ajax"])?(a.opts.toolbar=!1,a.opts.smallBtn=!0):a.opts.smallBtn=!1),"pdf"===n&&(a.type="iframe",a.opts.iframe.preload=!1),a.opts.modal&&(a.opts=m.extend(!0,a.opts,{infobar:0,toolbar:0,smallBtn:0,keyboard:0,slideShow:0,fullScreen:0,thumbs:0,touch:0,clickContent:!1,clickSlide:!1,clickOutside:!1,dblclickContent:!1,dblclickSlide:!1,dblclickOutside:!1})),d.group.push(a)})},addEvents:function(){var n=this;n.removeEvents(),n.$refs.container.on("click.fb-close","[data-fancybox-close]",function(e){e.stopPropagation(),e.preventDefault(),n.close(e)}).on("click.fb-prev touchend.fb-prev","[data-fancybox-prev]",function(e){e.stopPropagation(),e.preventDefault(),n.previous()}).on("click.fb-next touchend.fb-next","[data-fancybox-next]",function(e){e.stopPropagation(),e.preventDefault(),n.next()}),c.on("orientationchange.fb resize.fb",function(e){e&&e.originalEvent&&"resize"===e.originalEvent.type?u(function(){n.update()}):(n.$refs.stage.hide(),setTimeout(function(){n.$refs.stage.show(),n.update()},500))}),a.on("focusin.fb",function(e){var t=m.fancybox?m.fancybox.getInstance():null;t.isClosing||!t.current||!t.current.opts.trapFocus||m(e.target).hasClass("fancybox-container")||m(e.target).is(s)||t&&"fixed"!==m(e.target).css("position")&&!t.$refs.container.has(e.target).length&&(e.stopPropagation(),t.focus(),c.scrollTop(n.scrollTop).scrollLeft(n.scrollLeft))}),a.on("keydown.fb",function(e){var t=n.current,i=e.keyCode||e.which;if(t&&t.opts.keyboard&&!m(e.target).is("input")&&!m(e.target).is("textarea"))return 8===i||27===i?(e.preventDefault(),void n.close(e)):37===i||38===i?(e.preventDefault(),void n.previous()):39===i||40===i?(e.preventDefault(),void n.next()):void n.trigger("afterKeydown",e,i)}),n.group[n.currIndex].opts.idleTime&&(n.idleSecondsCounter=0,a.on("mousemove.fb-idle mouseenter.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle",function(){n.idleSecondsCounter=0,n.isIdle&&n.showControls(),n.isIdle=!1}),n.idleInterval=d.setInterval(function(){n.idleSecondsCounter++,n.idleSecondsCounter>=n.group[n.currIndex].opts.idleTime&&(n.isIdle=!0,n.idleSecondsCounter=0,n.hideControls())},1e3))},removeEvents:function(){c.off("orientationchange.fb resize.fb"),a.off("focusin.fb keydown.fb .fb-idle"),this.$refs.container.off(".fb-close .fb-prev .fb-next"),this.idleInterval&&(d.clearInterval(this.idleInterval),this.idleInterval=null)},previous:function(e){return this.jumpTo(this.currPos-1,e)},next:function(e){return this.jumpTo(this.currPos+1,e)},jumpTo:function(e,n){var t,i,o,s,a,r,l,d=this,c=d.group.length;if(!(d.isSliding||d.isClosing||d.isAnimating&&d.firstRun)){if(e=parseInt(e,10),!(i=d.current?d.current.opts.loop:d.opts.loop)&&(e<0||c<=e))return!1;if(t=d.firstRun=null===d.firstRun,!(c<2&&!t&&d.isSliding)){if(s=d.current,d.prevIndex=d.currIndex,d.prevPos=d.currPos,o=d.createSlide(e),1<c&&((i||0<o.index)&&d.createSlide(e-1),(i||o.index<c-1)&&d.createSlide(e+1)),d.current=o,d.currIndex=o.index,d.currPos=o.pos,d.trigger("beforeShow",t),d.updateControls(),r=m.fancybox.getTranslate(o.$slide),o.isMoved=(0!==r.left||0!==r.top)&&!o.$slide.hasClass("fancybox-animated"),o.forcedDuration=g,m.isNumeric(n)?o.forcedDuration=n:n=o.opts[t?"animationDuration":"transitionDuration"],n=parseInt(n,10),t)return o.opts.animationEffect&&n&&d.$refs.container.css("transition-duration",n+"ms"),d.$refs.container.removeClass("fancybox-is-hidden"),h(d.$refs.container),d.$refs.container.addClass("fancybox-is-open"),o.$slide.addClass("fancybox-slide--current"),d.loadSlide(o),void d.preload();m.each(d.slides,function(e,t){m.fancybox.stop(t.$slide)}),o.$slide.removeClass("fancybox-slide--next fancybox-slide--previous").addClass("fancybox-slide--current"),o.isMoved?(a=Math.round(o.$slide.width()),m.each(d.slides,function(e,t){var i=t.pos-o.pos;m.fancybox.animate(t.$slide,{top:0,left:i*a+i*t.opts.gutter},n,function(){t.$slide.removeAttr("style").removeClass("fancybox-slide--next fancybox-slide--previous"),t.pos===d.currPos&&(o.isMoved=!1,d.complete())})})):d.$refs.stage.children().removeAttr("style"),o.isLoaded?d.revealContent(o):d.loadSlide(o),d.preload(),s.pos!==o.pos&&(l="fancybox-slide--"+(s.pos>o.pos?"next":"previous"),s.$slide.removeClass("fancybox-slide--complete fancybox-slide--current fancybox-slide--next fancybox-slide--previous"),s.isComplete=!1,n&&(o.isMoved||o.opts.transitionEffect)&&(o.isMoved?s.$slide.addClass(l):(l="fancybox-animated "+l+" fancybox-fx-"+o.opts.transitionEffect,m.fancybox.animate(s.$slide,l,n,function(){s.$slide.removeClass(l).removeAttr("style")}))))}}},createSlide:function(e){var t,i=this,n=e%i.group.length;return n=n<0?i.group.length+n:n,!i.slides[e]&&i.group[n]&&(t=m('<div class="fancybox-slide"></div>').appendTo(i.$refs.stage),i.slides[e]=m.extend(!0,{},i.group[n],{pos:e,$slide:t,isLoaded:!1}),i.updateSlide(i.slides[e])),i.slides[e]},scaleToActual:function(e,t,i){var n,o,s,a,r,l=this,d=l.current,c=d.$content,u=parseInt(d.$slide.width(),10),p=parseInt(d.$slide.height(),10),h=d.width,f=d.height;"image"!=d.type||d.hasError||!c||l.isAnimating||(m.fancybox.stop(c),l.isAnimating=!0,e=e===g?.5*u:e,t=t===g?.5*p:t,a=h/(n=m.fancybox.getTranslate(c)).width,r=f/n.height,o=.5*u-.5*h,s=.5*p-.5*f,u<h&&(0<(o=n.left*a-(e*a-e))&&(o=0),o<u-h&&(o=u-h)),p<f&&(0<(s=n.top*r-(t*r-t))&&(s=0),s<p-f&&(s=p-f)),l.updateCursor(h,f),m.fancybox.animate(c,{top:s,left:o,scaleX:a,scaleY:r},i||330,function(){l.isAnimating=!1}),l.SlideShow&&l.SlideShow.isActive&&l.SlideShow.stop())},scaleToFit:function(e){var t,i=this,n=i.current,o=n.$content;"image"!=n.type||n.hasError||!o||i.isAnimating||(m.fancybox.stop(o),i.isAnimating=!0,t=i.getFitPos(n),i.updateCursor(t.width,t.height),m.fancybox.animate(o,{top:t.top,left:t.left,scaleX:t.width/o.width(),scaleY:t.height/o.height()},e||330,function(){i.isAnimating=!1}))},getFitPos:function(e){var t,i,n,o,s,a=e.$content,r=e.width,l=e.height,d=e.opts.margin;return!(!a||!a.length||!r&&!l)&&("number"===m.type(d)&&(d=[d,d]),2==d.length&&(d=[d[0],d[1],d[0],d[1]]),c.width()<800&&(d=[0,0,0,0]),t=parseInt(this.$refs.stage.width(),10)-(d[1]+d[3]),i=parseInt(this.$refs.stage.height(),10)-(d[0]+d[2]),n=Math.min(1,t/r,i/l),o=Math.floor(n*r),s=Math.floor(n*l),{top:Math.floor(.5*(i-s))+d[0],left:Math.floor(.5*(t-o))+d[3],width:o,height:s})},update:function(){var i=this;m.each(i.slides,function(e,t){i.updateSlide(t)})},updateSlide:function(e){var t=e.$content;t&&(e.width||e.height)&&(m.fancybox.stop(t),m.fancybox.setTranslate(t,this.getFitPos(e)),e.pos===this.currPos&&this.updateCursor()),e.$slide.trigger("refresh"),this.trigger("onUpdate",e)},updateCursor:function(e,t){var i=this.$refs.container.removeClass("fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-drag fancybox-can-zoomOut");this.current&&!this.isClosing&&(this.isZoomable()?(i.addClass("fancybox-is-zoomable"),(e!==g&&t!==g?e<this.current.width&&t<this.current.height:this.isScaledDown())?i.addClass("fancybox-can-zoomIn"):this.current.opts.touch?i.addClass("fancybox-can-drag"):i.addClass("fancybox-can-zoomOut")):this.current.opts.touch&&i.addClass("fancybox-can-drag"))},isZoomable:function(){var e,t=this.current;if(t&&!this.isClosing)return!!("image"===t.type&&t.isLoaded&&!t.hasError&&("zoom"===t.opts.clickContent||m.isFunction(t.opts.clickContent)&&"zoom"===t.opts.clickContent(t))&&(e=this.getFitPos(t),t.width>e.width||t.height>e.height))},isScaledDown:function(){var e=this.current,t=e.$content,i=!1;return t&&(i=(i=m.fancybox.getTranslate(t)).width<e.width||i.height<e.height),i},canPan:function(){var e=this.current,t=e.$content,i=!1;return t&&(i=this.getFitPos(e),i=1<Math.abs(t.width()-i.width)||1<Math.abs(t.height()-i.height)),i},loadSlide:function(i){var e,t,n,o=this;if(!i.isLoading&&!i.isLoaded){switch(i.isLoading=!0,o.trigger("beforeLoad",i),e=i.type,(t=i.$slide).off("refresh").trigger("onReset").addClass("fancybox-slide--"+(e||"unknown")).addClass(i.opts.slideClass),e){case"image":o.setImage(i);break;case"iframe":o.setIframe(i);break;case"html":o.setContent(i,i.src||i.content);break;case"inline":m(i.src).length?o.setContent(i,m(i.src)):o.setError(i);break;case"ajax":o.showLoading(i),n=m.ajax(m.extend({},i.opts.ajax.settings,{url:i.src,success:function(e,t){"success"===t&&o.setContent(i,e)},error:function(e,t){e&&"abort"!==t&&o.setError(i)}})),t.one("onReset",function(){n.abort()});break;default:o.setError(i)}return!0}},setImage:function(e){var t,i,n,o,s=this,a=e.opts.image.srcset;if(a){n=d.devicePixelRatio||1,o=d.innerWidth*n,(i=a.split(",").map(function(e){var n={};return e.trim().split(/\s+/).forEach(function(e,t){var i=parseInt(e.substring(0,e.length-1),10);return 0===t?n.url=e:void(i&&(n.value=i,n.postfix=e[e.length-1]))}),n})).sort(function(e,t){return e.value-t.value});for(var r=0;r<i.length;r++){var l=i[r];if("w"===l.postfix&&l.value>=o||"x"===l.postfix&&l.value>=n){t=l;break}}!t&&i.length&&(t=i[i.length-1]),t&&(e.src=t.url,e.width&&e.height&&"w"==t.postfix&&(e.height=e.width/e.height*t.value,e.width=t.value))}e.$content=m('<div class="fancybox-image-wrap"></div>').addClass("fancybox-is-hidden").appendTo(e.$slide),!1!==e.opts.preload&&e.opts.width&&e.opts.height&&(e.opts.thumb||e.opts.$thumb)?(e.width=e.opts.width,e.height=e.opts.height,e.$ghost=m("<img />").one("error",function(){m(this).remove(),e.$ghost=null,s.setBigImage(e)}).one("load",function(){s.afterLoad(e),s.setBigImage(e)}).addClass("fancybox-image").appendTo(e.$content).attr("src",e.opts.thumb||e.opts.$thumb.attr("src"))):s.setBigImage(e)},setBigImage:function(e){var t=this,i=m("<img />");e.$image=i.one("error",function(){t.setError(e)}).one("load",function(){clearTimeout(e.timouts),e.timouts=null,t.isClosing||(e.width=this.naturalWidth,e.height=this.naturalHeight,e.opts.image.srcset&&i.attr("sizes","100vw").attr("srcset",e.opts.image.srcset),t.hideLoading(e),e.$ghost?e.timouts=setTimeout(function(){e.timouts=null,e.$ghost.hide()},Math.min(300,Math.max(1e3,e.height/1600))):t.afterLoad(e))}).addClass("fancybox-image").attr("src",e.src).appendTo(e.$content),i[0].complete?i.trigger("load"):i[0].error?i.trigger("error"):e.timouts=setTimeout(function(){i[0].complete||e.hasError||t.showLoading(e)},100)},setIframe:function(s){var a,t=this,r=s.opts.iframe,e=s.$slide;s.$content=m('<div class="fancybox-content'+(r.preload?" fancybox-is-hidden":"")+'"></div>').css(r.css).appendTo(e),a=m(r.tpl.replace(/\{rnd\}/g,(new Date).getTime())).attr(r.attr).appendTo(s.$content),r.preload?(t.showLoading(s),a.on("load.fb error.fb",function(e){this.isReady=1,s.$slide.trigger("refresh"),t.afterLoad(s)}),e.on("refresh.fb",function(){var e,t,i,n,o=s.$content;if(1===a[0].isReady){try{e=a.contents().find("body")}catch(e){}e&&e.length&&(r.css.width===g||r.css.height===g)&&(t=a[0].contentWindow.document.documentElement.scrollWidth,i=Math.ceil(e.outerWidth(!0)+(o.width()-t)),n=Math.ceil(e.outerHeight(!0)),o.css({width:r.css.width===g?i+(o.outerWidth()-o.innerWidth()):r.css.width,height:r.css.height===g?n+(o.outerHeight()-o.innerHeight()):r.css.height})),o.removeClass("fancybox-is-hidden")}})):this.afterLoad(s),a.attr("src",s.src),!0===s.opts.smallBtn&&s.$content.prepend(t.translate(s,s.opts.btnTpl.smallBtn)),e.one("onReset",function(){try{m(this).find("iframe").hide().attr("src","//about:blank")}catch(e){}m(this).empty(),s.isLoaded=!1})},setContent:function(e,t){var i;this.isClosing||(this.hideLoading(e),e.$slide.empty(),(i=t)&&i.hasOwnProperty&&i instanceof m&&t.parent().length?(t.parent(".fancybox-slide--inline").trigger("onReset"),e.$placeholder=m("<div></div>").hide().insertAfter(t),t.css("display","inline-block")):e.hasError||("string"!==m.type(t)||3===(t=m("<div>").append(m.trim(t)).contents())[0].nodeType&&(t=m("<div>").html(t)),e.opts.filter&&(t=m("<div>").html(t).find(e.opts.filter))),e.$slide.one("onReset",function(){e.$placeholder&&(e.$placeholder.after(t.hide()).remove(),e.$placeholder=null),e.$smallBtn&&(e.$smallBtn.remove(),e.$smallBtn=null),e.hasError||(m(this).empty(),e.isLoaded=!1)}),e.$content=m(t).appendTo(e.$slide),e.opts.smallBtn&&!e.$smallBtn&&(e.$smallBtn=m(this.translate(e,e.opts.btnTpl.smallBtn)).appendTo(e.$content)),this.afterLoad(e))},setError:function(e){e.hasError=!0,e.$slide.removeClass("fancybox-slide--"+e.type),this.setContent(e,this.translate(e,e.opts.errorTpl))},showLoading:function(e){(e=e||this.current)&&!e.$spinner&&(e.$spinner=m(this.opts.spinnerTpl).appendTo(e.$slide))},hideLoading:function(e){(e=e||this.current)&&e.$spinner&&(e.$spinner.remove(),delete e.$spinner)},afterLoad:function(e){this.isClosing||(e.isLoading=!1,e.isLoaded=!0,this.trigger("afterLoad",e),this.hideLoading(e),e.opts.protect&&e.$content&&!e.hasError&&(e.$content.on("contextmenu.fb",function(e){return 2==e.button&&e.preventDefault(),!0}),"image"===e.type&&m('<div class="fancybox-spaceball"></div>').appendTo(e.$content)),this.revealContent(e))},revealContent:function(t){var i,e,n,o=this,s=t.$slide,a=!1,r=t.opts[o.firstRun?"animationEffect":"transitionEffect"],l=t.opts[o.firstRun?"animationDuration":"transitionDuration"];return l=parseInt(t.forcedDuration===g?l:t.forcedDuration,10),!t.isMoved&&t.pos===o.currPos&&l||(r=!1),"zoom"!==r||t.pos===o.currPos&&l&&"image"===t.type&&!t.hasError&&(a=o.getThumbPos(t))||(r="fade"),"zoom"===r?((n=o.getFitPos(t)).scaleX=Math.round(n.width/a.width*100)/100,n.scaleY=Math.round(n.height/a.height*100)/100,delete n.width,delete n.height,"auto"==(e=t.opts.zoomOpacity)&&(e=.1<Math.abs(t.width/t.height-a.width/a.height)),e&&(a.opacity=.1,n.opacity=1),m.fancybox.setTranslate(t.$content.removeClass("fancybox-is-hidden"),a),h(t.$content),void m.fancybox.animate(t.$content,n,l,function(){o.complete()})):(o.updateSlide(t),r?(m.fancybox.stop(s),i="fancybox-animated fancybox-slide--"+(t.pos>o.prevPos?"next":"previous")+" fancybox-fx-"+r,s.removeAttr("style").removeClass("fancybox-slide--current fancybox-slide--next fancybox-slide--previous").addClass(i),t.$content.removeClass("fancybox-is-hidden"),h(s),void m.fancybox.animate(s,"fancybox-slide--current",l,function(e){s.removeClass(i).removeAttr("style"),t.pos===o.currPos&&o.complete()},!0)):(h(s),t.$content.removeClass("fancybox-is-hidden"),void(t.pos===o.currPos&&o.complete())))},getThumbPos:function(e){var t,i=!1,n=e.opts.$thumb,o=n?n.offset():0;return o&&n[0].ownerDocument===s&&function(e){for(var t=e[0],n=t.getBoundingClientRect(),i=[];null!==t.parentElement;)"hidden"!==m(t.parentElement).css("overflow")&&"auto"!==m(t.parentElement).css("overflow")||i.push(t.parentElement.getBoundingClientRect()),t=t.parentElement;return i.every(function(e){var t=Math.min(n.right,e.right)-Math.max(n.left,e.left),i=Math.min(n.bottom,e.bottom)-Math.max(n.top,e.top);return 0<t&&0<i})&&0<n.bottom&&0<n.right&&n.left<m(d).width()&&n.top<m(d).height()}(n)&&(t=this.$refs.stage.offset(),i={top:o.top-t.top+parseFloat(n.css("border-top-width")||0),left:o.left-t.left+parseFloat(n.css("border-left-width")||0),width:n.width(),height:n.height(),scaleX:1,scaleY:1}),i},complete:function(){var i=this,e=i.current,n={};e.isMoved||!e.isLoaded||e.isComplete||(e.isComplete=!0,e.$slide.siblings().trigger("onReset"),h(e.$slide),e.$slide.addClass("fancybox-slide--complete"),m.each(i.slides,function(e,t){t.pos>=i.currPos-1&&t.pos<=i.currPos+1?n[t.pos]=t:t&&(m.fancybox.stop(t.$slide),t.$slide.unbind().remove())}),i.slides=n,i.updateCursor(),i.trigger("afterShow"),(m(s.activeElement).is("[disabled]")||e.opts.autoFocus&&"image"!=e.type&&"iframe"!==e.type)&&i.focus())},preload:function(){var e,t;this.group.length<2||(e=this.slides[this.currPos+1],t=this.slides[this.currPos-1],e&&"image"===e.type&&this.loadSlide(e),t&&"image"===t.type&&this.loadSlide(t))},focus:function(){var e,t=this.current;this.isClosing||(e=(e=t&&t.isComplete?t.$slide.find("button,:input,[tabindex],a").filter(":not([disabled]):visible:first"):null)&&e.length?e:this.$refs.container).focus()},activate:function(){var t=this;m(".fancybox-container").each(function(){var e=m(this).data("FancyBox");e&&e.uid!==t.uid&&!e.isClosing&&e.trigger("onDeactivate")}),t.current&&(0<t.$refs.container.index()&&t.$refs.container.prependTo(s.body),t.updateControls()),t.trigger("onActivate"),t.addEvents()},close:function(e,t){function i(){d.cleanUp(e)}var n,o,s,a,r,l,d=this,c=d.current;return!d.isClosing&&(!(d.isClosing=!0)===d.trigger("beforeClose",e)?(d.isClosing=!1,u(function(){d.update()}),!1):(d.removeEvents(),c.timouts&&clearTimeout(c.timouts),s=c.$content,n=c.opts.animationEffect,o=m.isNumeric(t)?t:n?c.opts.animationDuration:0,c.$slide.off(p).removeClass("fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated"),c.$slide.siblings().trigger("onReset").remove(),o&&d.$refs.container.removeClass("fancybox-is-open").addClass("fancybox-is-closing"),d.hideLoading(c),d.hideControls(),d.updateCursor(),"zoom"!==n||!0!==e&&s&&o&&"image"===c.type&&!c.hasError&&(l=d.getThumbPos(c))||(n="fade"),"zoom"===n?(m.fancybox.stop(s),(r=m.fancybox.getTranslate(s)).width=r.width*r.scaleX,r.height=r.height*r.scaleY,"auto"==(a=c.opts.zoomOpacity)&&(a=.1<Math.abs(c.width/c.height-l.width/l.height)),a&&(l.opacity=0),r.scaleX=r.width/l.width,r.scaleY=r.height/l.height,r.width=l.width,r.height=l.height,m.fancybox.setTranslate(c.$content,r),m.fancybox.animate(c.$content,l,o,i)):n&&o?!0===e?setTimeout(i,o):m.fancybox.animate(c.$slide.removeClass("fancybox-slide--current"),"fancybox-animated fancybox-slide--previous fancybox-fx-"+n,o,i):i(),!0))},cleanUp:function(e){var t;this.current.$slide.trigger("onReset"),this.$refs.container.empty().remove(),this.trigger("afterClose",e),this.$lastFocus&&!this.current.focusBack&&this.$lastFocus.focus(),this.current=null,(t=m.fancybox.getInstance())?t.activate():(c.scrollTop(this.scrollTop).scrollLeft(this.scrollLeft),m("html").removeClass("fancybox-enabled"),m("#fancybox-style-noscroll").remove())},trigger:function(e,t){var i,n=Array.prototype.slice.call(arguments,1),o=t&&t.opts?t:this.current;return o?n.unshift(o):o=this,n.unshift(this),m.isFunction(o.opts[e])&&(i=o.opts[e].apply(o,n)),!1===i?i:void("afterClose"===e?a.trigger(e+".fb",n):this.$refs.container.trigger(e+".fb",n))},updateControls:function(){var e=this.current,t=e.index,i=e.opts,n=i.caption,o=this.$refs.caption;e.$slide.trigger("refresh"),this.$caption=n&&n.length?o.html(n):null,this.isHiddenControls||this.showControls(),m("[data-fancybox-count]").html(this.group.length),m("[data-fancybox-index]").html(t+1),m("[data-fancybox-prev]").prop("disabled",!i.loop&&t<=0),m("[data-fancybox-next]").prop("disabled",!i.loop&&t>=this.group.length-1)},hideControls:function(){this.isHiddenControls=!0,this.$refs.container.removeClass("fancybox-show-infobar fancybox-show-toolbar fancybox-show-caption fancybox-show-nav")},showControls:function(){var e=this.current?this.current.opts:this.opts,t=this.$refs.container;this.isHiddenControls=!1,this.idleSecondsCounter=0,t.toggleClass("fancybox-show-toolbar",!(!e.toolbar||!e.buttons)).toggleClass("fancybox-show-infobar",!!(e.infobar&&1<this.group.length)).toggleClass("fancybox-show-nav",!!(e.arrows&&1<this.group.length)).toggleClass("fancybox-is-modal",!!e.modal),this.$caption?t.addClass("fancybox-show-caption "):t.removeClass("fancybox-show-caption")},toggleControls:function(){this.isHiddenControls?this.showControls():this.hideControls()}}),m.fancybox={version:"3.1.20",defaults:o,getInstance:function(e){var t=m('.fancybox-container:not(".fancybox-is-closing"):first').data("FancyBox"),i=Array.prototype.slice.call(arguments,1);return t instanceof n&&("string"===m.type(e)?t[e].apply(t,i):"function"===m.type(e)&&e.apply(t,i),t)},open:function(e,t,i){return new n(e,t,i)},close:function(e){var t=this.getInstance();t&&(t.close(),!0===e&&this.close())},destroy:function(){this.close(!0),a.off("click.fb-start")},isMobile:s.createTouch!==g&&/Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent),use3d:(e=s.createElement("div"),d.getComputedStyle&&d.getComputedStyle(e).getPropertyValue("transform")&&!(s.documentMode&&s.documentMode<11)),getTranslate:function(e){var t,i;return!(!e||!e.length)&&((t=(t=e.eq(0).css("transform"))&&-1!==t.indexOf("matrix")?(t=(t=t.split("(")[1]).split(")")[0]).split(","):[]).length?t=(t=10<t.length?[t[13],t[12],t[0],t[5]]:[t[5],t[4],t[0],t[3]]).map(parseFloat):(t=[0,0,1,1],(i=/\.*translate\((.*)px,(.*)px\)/i.exec(e.eq(0).attr("style")))&&(t[0]=parseFloat(i[2]),t[1]=parseFloat(i[1]))),{top:t[0],left:t[1],scaleX:t[2],scaleY:t[3],opacity:parseFloat(e.css("opacity")),width:e.width(),height:e.height()})},setTranslate:function(e,t){var i="",n={};if(e&&t)return t.left===g&&t.top===g||(i=(t.left===g?e.position().left:t.left)+"px, "+(t.top===g?e.position().top:t.top)+"px",i=this.use3d?"translate3d("+i+", 0px)":"translate("+i+")"),t.scaleX!==g&&t.scaleY!==g&&(i=(i.length?i+" ":"")+"scale("+t.scaleX+", "+t.scaleY+")"),i.length&&(n.transform=i),t.opacity!==g&&(n.opacity=t.opacity),t.width!==g&&(n.width=t.width),t.height!==g&&(n.height=t.height),e.css(n)},animate:function(t,i,e,n,o){var s=p||"transitionend";m.isFunction(e)&&(n=e,e=null),m.isPlainObject(i)||t.removeAttr("style"),t.on(s,function(e){e&&e.originalEvent&&(!t.is(e.originalEvent.target)||"z-index"==e.originalEvent.propertyName)||(t.off(s),m.isPlainObject(i)?i.scaleX!==g&&i.scaleY!==g&&(t.css("transition-duration","0ms"),i.width=t.width()*i.scaleX,i.height=t.height()*i.scaleY,i.scaleX=1,i.scaleY=1,m.fancybox.setTranslate(t,i)):!0!==o&&t.removeClass(i),m.isFunction(n)&&n(e))}),m.isNumeric(e)&&t.css("transition-duration",e+"ms"),m.isPlainObject(i)?m.fancybox.setTranslate(t,i):t.addClass(i),t.data("timer",setTimeout(function(){t.trigger("transitionend")},e+16))},stop:function(e){clearTimeout(e.data("timer")),e.off(p)}},m.fn.fancybox=function(e){var t;return(t=(e=e||{}).selector||!1)?m("body").off("click.fb-start",t).on("click.fb-start",t,{items:m(t),options:e},i):this.off("click.fb-start").on("click.fb-start",{items:this,options:e},i),this},a.on("click.fb-start","[data-fancybox]",i)}var e}(window,document,window.jQuery),function(h){"use strict";function f(i,e,t){if(i)return t=t||"","object"===h.type(t)&&(t=h.param(t,!0)),h.each(e,function(e,t){i=i.replace("$"+e,t||"")}),t.length&&(i+=(0<i.indexOf("?")?"&":"?")+t),i}var i={youtube:{matcher:/(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*))(.*)/i,params:{autoplay:1,autohide:1,fs:1,rel:0,hd:1,wmode:"transparent",enablejsapi:1,html5:1},paramPlace:8,type:"iframe",url:"//www.youtube.com/embed/$4",thumb:"//img.youtube.com/vi/$4/hqdefault.jpg"},vimeo:{matcher:/^.+vimeo.com\/(.*\/)?([\d]+)(.*)?/,params:{autoplay:1,hd:1,show_title:1,show_byline:1,show_portrait:0,fullscreen:1,api:1},paramPlace:3,type:"iframe",url:"//player.vimeo.com/video/$2"},metacafe:{matcher:/metacafe.com\/watch\/(\d+)\/(.*)?/,type:"iframe",url:"//www.metacafe.com/embed/$1/?ap=1"},dailymotion:{matcher:/dailymotion.com\/video\/(.*)\/?(.*)/,params:{additionalInfos:0,autoStart:1},type:"iframe",url:"//www.dailymotion.com/embed/video/$1"},vine:{matcher:/vine.co\/v\/([a-zA-Z0-9\?\=\-]+)/,type:"iframe",url:"//vine.co/v/$1/embed/simple"},instagram:{matcher:/(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,type:"image",url:"//$1/p/$2/media/?size=l"},google_maps:{matcher:/(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(((maps\/(place\/(.*)\/)?\@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?/i,type:"iframe",url:function(e){return"//maps.google."+e[2]+"/?ll="+(e[9]?e[9]+"&z="+Math.floor(e[10])+(e[12]?e[12].replace(/^\//,"&"):""):e[12])+"&output="+(e[12]&&0<e[12].indexOf("layer=c")?"svembed":"embed")}}};h(document).on("onInit.fb",function(e,t){h.each(t.group,function(e,o){var t,s,a,r,l,d,c,u=o.src||"",p=!1;o.type||(t=h.extend(!0,{},i,o.opts.media),h.each(t,function(e,t){if(a=u.match(t.matcher),d={},c=e,a){if(p=t.type,t.paramPlace&&a[t.paramPlace]){"?"==(l=a[t.paramPlace])[0]&&(l=l.substring(1)),l=l.split("&");for(var i=0;i<l.length;++i){var n=l[i].split("=",2);2==n.length&&(d[n[0]]=decodeURIComponent(n[1].replace(/\+/g," ")))}}return r=h.extend(!0,{},t.params,o.opts[e],d),u="function"===h.type(t.url)?t.url.call(this,a,r,o):f(t.url,a,r),s="function"===h.type(t.thumb)?t.thumb.call(this,a,r,o):f(t.thumb,a),"vimeo"===c&&(u=u.replace("&%23","#")),!1}}),p?(o.src=u,o.type=p,o.opts.thumb||o.opts.$thumb&&o.opts.$thumb.length||(o.opts.thumb=s),"iframe"===p&&(h.extend(!0,o.opts,{iframe:{preload:!1,attr:{scrolling:"no"}}}),o.contentProvider=c,o.opts.slideClass+=" fancybox-slide--"+("google_maps"==c?"map":"video"))):o.type="image")})})}(window.jQuery),function(f,r,m){"use strict";function c(e){var t=[];for(var i in e=(e=e.originalEvent||e||f.e).touches&&e.touches.length?e.touches:e.changedTouches&&e.changedTouches.length?e.changedTouches:[e])e[i].pageX?t.push({x:e[i].pageX,y:e[i].pageY}):e[i].clientX&&t.push({x:e[i].clientX,y:e[i].clientY});return t}function g(e,t,i){return t&&e?"x"===i?e.x-t.x:"y"===i?e.y-t.y:Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)):0}function l(e){if(e.is("a,button,input,select,textarea")||m.isFunction(e.get(0).onclick))return 1;for(var t=0,i=e[0].attributes,n=i.length;t<n;t++)if("data-fancybox-"===i[t].nodeName.substr(0,14))return 1}function d(e){for(var t,i,n,o,s,a=!1;(t=e.get(0),0,i=f.getComputedStyle(t)["overflow-y"],n=f.getComputedStyle(t)["overflow-x"],o=("scroll"===i||"auto"===i)&&t.scrollHeight>t.clientHeight,s=("scroll"===n||"auto"===n)&&t.scrollWidth>t.clientWidth,!(a=o||s))&&((e=e.parent()).length&&!e.hasClass("fancybox-stage")&&!e.is("body")););return a}function i(e){this.instance=e,this.$bg=e.$refs.bg,this.$stage=e.$refs.stage,this.$container=e.$refs.container,this.destroy(),this.$container.on("touchstart.fb.touch mousedown.fb.touch",m.proxy(this,"ontouchstart"))}var v=f.requestAnimationFrame||f.webkitRequestAnimationFrame||f.mozRequestAnimationFrame||f.oRequestAnimationFrame||function(e){return f.setTimeout(e,1e3/60)},y=f.cancelAnimationFrame||f.webkitCancelAnimationFrame||f.mozCancelAnimationFrame||f.oCancelAnimationFrame||function(e){f.clearTimeout(e)};i.prototype.destroy=function(){this.$container.off(".fb.touch")},i.prototype.ontouchstart=function(e){var t=this,i=m(e.target),n=t.instance,o=n.current,s=o.$content,a="touchstart"==e.type;if(a&&t.$container.off("mousedown.fb.touch"),!o||t.instance.isAnimating||t.instance.isClosing)return e.stopPropagation(),void e.preventDefault();if((!e.originalEvent||2!=e.originalEvent.button)&&i.length&&!l(i)&&!l(i.parent())&&!(e.originalEvent.clientX>i[0].clientWidth+i.offset().left)&&(t.startPoints=c(e),t.startPoints&&!(1<t.startPoints.length&&n.isSliding))){if(t.$target=i,t.$content=s,t.canTap=!0,m(r).off(".fb.touch"),m(r).on(a?"touchend.fb.touch touchcancel.fb.touch":"mouseup.fb.touch mouseleave.fb.touch",m.proxy(t,"ontouchend")),m(r).on(a?"touchmove.fb.touch":"mousemove.fb.touch",m.proxy(t,"ontouchmove")),e.stopPropagation(),!n.current.opts.touch&&!n.canPan()||!i.is(t.$stage)&&!t.$stage.find(i).length)return void(i.is("img")&&e.preventDefault());m.fancybox.isMobile&&(d(t.$target)||d(t.$target.parent()))||e.preventDefault(),t.canvasWidth=Math.round(o.$slide[0].clientWidth),t.canvasHeight=Math.round(o.$slide[0].clientHeight),t.startTime=(new Date).getTime(),t.distanceX=t.distanceY=t.distance=0,t.isPanning=!1,t.isSwiping=!1,t.isZooming=!1,t.sliderStartPos=t.sliderLastPos||{top:0,left:0},t.contentStartPos=m.fancybox.getTranslate(t.$content),t.contentLastPos=null,1!==t.startPoints.length||t.isZooming||(t.canTap=!n.isSliding,"image"===o.type&&(t.contentStartPos.width>t.canvasWidth+1||t.contentStartPos.height>t.canvasHeight+1)?(m.fancybox.stop(t.$content),t.$content.css("transition-duration","0ms"),t.isPanning=!0):t.isSwiping=!0,t.$container.addClass("fancybox-controls--isGrabbing")),2!==t.startPoints.length||n.isAnimating||o.hasError||"image"!==o.type||!o.isLoaded&&!o.$ghost||(t.isZooming=!0,t.isSwiping=!1,t.isPanning=!1,m.fancybox.stop(t.$content),t.$content.css("transition-duration","0ms"),t.centerPointStartX=.5*(t.startPoints[0].x+t.startPoints[1].x)-m(f).scrollLeft(),t.centerPointStartY=.5*(t.startPoints[0].y+t.startPoints[1].y)-m(f).scrollTop(),t.percentageOfImageAtPinchPointX=(t.centerPointStartX-t.contentStartPos.left)/t.contentStartPos.width,t.percentageOfImageAtPinchPointY=(t.centerPointStartY-t.contentStartPos.top)/t.contentStartPos.height,t.startDistanceBetweenFingers=g(t.startPoints[0],t.startPoints[1]))}},i.prototype.ontouchmove=function(e){var t=this;if(t.newPoints=c(e),m.fancybox.isMobile&&(d(t.$target)||d(t.$target.parent())))return e.stopPropagation(),void(t.canTap=!1);if((t.instance.current.opts.touch||t.instance.canPan())&&t.newPoints&&t.newPoints.length&&(t.distanceX=g(t.newPoints[0],t.startPoints[0],"x"),t.distanceY=g(t.newPoints[0],t.startPoints[0],"y"),t.distance=g(t.newPoints[0],t.startPoints[0]),0<t.distance)){if(!t.$target.is(t.$stage)&&!t.$stage.find(t.$target).length)return;e.stopPropagation(),e.preventDefault(),t.isSwiping?t.onSwipe():t.isPanning?t.onPan():t.isZooming&&t.onZoom()}},i.prototype.onSwipe=function(){var e,n=this,t=n.isSwiping,i=n.sliderStartPos.left||0;!0===t?10<Math.abs(n.distance)&&(n.canTap=!1,n.instance.group.length<2&&n.instance.opts.touch.vertical?n.isSwiping="y":n.instance.isSliding||!1===n.instance.opts.touch.vertical||"auto"===n.instance.opts.touch.vertical&&800<m(f).width()?n.isSwiping="x":(e=Math.abs(180*Math.atan2(n.distanceY,n.distanceX)/Math.PI),n.isSwiping=45<e&&e<135?"y":"x"),n.instance.isSliding=n.isSwiping,n.startPoints=n.newPoints,m.each(n.instance.slides,function(e,t){m.fancybox.stop(t.$slide),t.$slide.css("transition-duration","0ms"),t.inTransition=!1,t.pos===n.instance.current.pos&&(n.sliderStartPos.left=m.fancybox.getTranslate(t.$slide).left)}),n.instance.SlideShow&&n.instance.SlideShow.isActive&&n.instance.SlideShow.stop()):("x"==t&&(0<n.distanceX&&(n.instance.group.length<2||0===n.instance.current.index&&!n.instance.current.opts.loop)?i+=Math.pow(n.distanceX,.8):n.distanceX<0&&(n.instance.group.length<2||n.instance.current.index===n.instance.group.length-1&&!n.instance.current.opts.loop)?i-=Math.pow(-n.distanceX,.8):i+=n.distanceX),n.sliderLastPos={top:"x"==t?0:n.sliderStartPos.top+n.distanceY,left:i},n.requestId&&(y(n.requestId),n.requestId=null),n.requestId=v(function(){n.sliderLastPos&&(m.each(n.instance.slides,function(e,t){var i=t.pos-n.instance.currPos;m.fancybox.setTranslate(t.$slide,{top:n.sliderLastPos.top,left:n.sliderLastPos.left+i*n.canvasWidth+i*t.opts.gutter})}),n.$container.addClass("fancybox-is-sliding"))}))},i.prototype.onPan=function(){var e,t,i,n=this;n.canTap=!1,e=n.contentStartPos.width>n.canvasWidth?n.contentStartPos.left+n.distanceX:n.contentStartPos.left,t=n.contentStartPos.top+n.distanceY,(i=n.limitMovement(e,t,n.contentStartPos.width,n.contentStartPos.height)).scaleX=n.contentStartPos.scaleX,i.scaleY=n.contentStartPos.scaleY,n.contentLastPos=i,n.requestId&&(y(n.requestId),n.requestId=null),n.requestId=v(function(){m.fancybox.setTranslate(n.$content,n.contentLastPos)})},i.prototype.limitMovement=function(e,t,i,n){var o=this.canvasWidth,s=this.canvasHeight,a=this.contentStartPos.left,r=this.contentStartPos.top,l=this.distanceX,d=this.distanceY,c=Math.max(0,.5*o-.5*i),u=Math.max(0,.5*s-.5*n),p=Math.min(o-i,.5*o-.5*i),h=Math.min(s-n,.5*s-.5*n);return o<i&&(0<l&&c<e&&(e=c-1+Math.pow(-c+a+l,.8)||0),l<0&&e<p&&(e=p+1-Math.pow(p-a-l,.8)||0)),s<n&&(0<d&&u<t&&(t=u-1+Math.pow(-u+r+d,.8)||0),d<0&&t<h&&(t=h+1-Math.pow(h-r-d,.8)||0)),{top:t,left:e}},i.prototype.limitPosition=function(e,t,i,n){var o=this.canvasWidth,s=this.canvasHeight;return e=o<i?(e=0<e?0:e)<o-i?o-i:e:Math.max(0,o/2-i/2),{top:t=s<n?(t=0<t?0:t)<s-n?s-n:t:Math.max(0,s/2-n/2),left:e}},i.prototype.onZoom=function(){var e=this,t=e.contentStartPos.width,i=e.contentStartPos.height,n=e.contentStartPos.left,o=e.contentStartPos.top,s=g(e.newPoints[0],e.newPoints[1])/e.startDistanceBetweenFingers,a=Math.floor(t*s),r=Math.floor(i*s),l=(t-a)*e.percentageOfImageAtPinchPointX,d=(i-r)*e.percentageOfImageAtPinchPointY,c=(e.newPoints[0].x+e.newPoints[1].x)/2-m(f).scrollLeft(),u=(e.newPoints[0].y+e.newPoints[1].y)/2-m(f).scrollTop(),p=c-e.centerPointStartX,h={top:o+(d+(u-e.centerPointStartY)),left:n+(l+p),scaleX:e.contentStartPos.scaleX*s,scaleY:e.contentStartPos.scaleY*s};e.canTap=!1,e.newWidth=a,e.newHeight=r,e.contentLastPos=h,e.requestId&&(y(e.requestId),e.requestId=null),e.requestId=v(function(){m.fancybox.setTranslate(e.$content,e.contentLastPos)})},i.prototype.ontouchend=function(e){var t=this,i=Math.max((new Date).getTime()-t.startTime,1),n=t.isSwiping,o=t.isPanning,s=t.isZooming;return t.endPoints=c(e),t.$container.removeClass("fancybox-controls--isGrabbing"),m(r).off(".fb.touch"),t.requestId&&(y(t.requestId),t.requestId=null),t.isSwiping=!1,t.isPanning=!1,t.isZooming=!1,t.canTap?t.onTap(e):(t.speed=366,t.velocityX=t.distanceX/i*.5,t.velocityY=t.distanceY/i*.5,t.speedX=Math.max(.5*t.speed,Math.min(1.5*t.speed,1/Math.abs(t.velocityX)*t.speed)),void(o?t.endPanning():s?t.endZooming():t.endSwiping(n)))},i.prototype.endSwiping=function(e){var t=this,i=!1;t.instance.isSliding=!1,t.sliderLastPos=null,"y"==e&&50<Math.abs(t.distanceY)?(m.fancybox.animate(t.instance.current.$slide,{top:t.sliderStartPos.top+t.distanceY+150*t.velocityY,opacity:0},150),i=t.instance.close(!0,300)):"x"==e&&50<t.distanceX&&1<t.instance.group.length?i=t.instance.previous(t.speedX):"x"==e&&t.distanceX<-50&&1<t.instance.group.length&&(i=t.instance.next(t.speedX)),!1!==i||"x"!=e&&"y"!=e||t.instance.jumpTo(t.instance.current.index,150),t.$container.removeClass("fancybox-is-sliding")},i.prototype.endPanning=function(){var e,t,i,n=this;n.contentLastPos&&(t=!1===n.instance.current.opts.touch.momentum?(e=n.contentLastPos.left,n.contentLastPos.top):(e=n.contentLastPos.left+n.velocityX*n.speed,n.contentLastPos.top+n.velocityY*n.speed),(i=n.limitPosition(e,t,n.contentStartPos.width,n.contentStartPos.height)).width=n.contentStartPos.width,i.height=n.contentStartPos.height,m.fancybox.animate(n.$content,i,330))},i.prototype.endZooming=function(){var e,t,i,n,o=this,s=o.instance.current,a=o.newWidth,r=o.newHeight;o.contentLastPos&&(e=o.contentLastPos.left,n={top:t=o.contentLastPos.top,left:e,width:a,height:r,scaleX:1,scaleY:1},m.fancybox.setTranslate(o.$content,n),a<o.canvasWidth&&r<o.canvasHeight?o.instance.scaleToFit(150):a>s.width||r>s.height?o.instance.scaleToActual(o.centerPointStartX,o.centerPointStartY,150):(i=o.limitPosition(e,t,a,r),m.fancybox.setTranslate(o.content,m.fancybox.getTranslate(o.$content)),m.fancybox.animate(o.$content,i,150)))},i.prototype.onTap=function(i){function e(e){var t=a.opts[e];if(m.isFunction(t)&&(t=t.apply(s,[a,i])),t)switch(t){case"close":s.close(n.startEvent);break;case"toggleControls":s.toggleControls(!0);break;case"next":s.next();break;case"nextOrClose":1<s.group.length?s.next():s.close(n.startEvent);break;case"zoom":"image"==a.type&&(a.isLoaded||a.$ghost)&&(s.canPan()?s.scaleToFit():s.isScaledDown()?s.scaleToActual(l,d):s.group.length<2&&s.close(n.startEvent))}}var t,n=this,o=m(i.target),s=n.instance,a=s.current,r=i&&c(i)||n.startPoints,l=r[0]?r[0].x-n.$stage.offset().left:0,d=r[0]?r[0].y-n.$stage.offset().top:0;if(!(i.originalEvent&&2==i.originalEvent.button||s.isSliding||l>o[0].clientWidth+o.offset().left)){if(o.is(".fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container"))t="Outside";else if(o.is(".fancybox-slide"))t="Slide";else{if(!s.current.$content||!s.current.$content.has(i.target).length)return;t="Content"}if(n.tapped){if(clearTimeout(n.tapped),n.tapped=null,50<Math.abs(l-n.tapX)||50<Math.abs(d-n.tapY)||s.isSliding)return this;e("dblclick"+t)}else n.tapX=l,n.tapY=d,a.opts["dblclick"+t]&&a.opts["dblclick"+t]!==a.opts["click"+t]?n.tapped=setTimeout(function(){n.tapped=null,e("click"+t)},300):e("click"+t);return this}},m(r).on("onActivate.fb",function(e,t){t&&!t.Guestures&&(t.Guestures=new i(t))}),m(r).on("beforeClose.fb",function(e,t){t&&t.Guestures&&t.Guestures.destroy()})}(window,document,window.jQuery),function(a,r){"use strict";function i(e){this.instance=e,this.init()}r.extend(i.prototype,{timer:null,isActive:!1,$button:null,speed:3e3,init:function(){var e=this;e.$button=e.instance.$refs.toolbar.find("[data-fancybox-play]").on("click",function(){e.toggle()}),(e.instance.group.length<2||!e.instance.group[e.instance.currIndex].opts.slideShow)&&e.$button.hide()},set:function(){var e=this;e.instance&&e.instance.current&&(e.instance.current.opts.loop||e.instance.currIndex<e.instance.group.length-1)?e.timer=setTimeout(function(){e.instance.next()},e.instance.current.opts.slideShow.speed||e.speed):(e.stop(),e.instance.idleSecondsCounter=0,e.instance.showControls())},clear:function(){clearTimeout(this.timer),this.timer=null},start:function(){var e=this.instance.current;this.instance&&e&&(e.opts.loop||e.index<this.instance.group.length-1)&&(this.isActive=!0,this.$button.attr("title",e.opts.i18n[e.opts.lang].PLAY_STOP).addClass("fancybox-button--pause"),e.isComplete&&this.set())},stop:function(){var e=this.instance.current;this.clear(),this.$button.attr("title",e.opts.i18n[e.opts.lang].PLAY_START).removeClass("fancybox-button--pause"),this.isActive=!1},toggle:function(){this.isActive?this.stop():this.start()}}),r(a).on({"onInit.fb":function(e,t){t&&!t.SlideShow&&(t.SlideShow=new i(t))},"beforeShow.fb":function(e,t,i,n){var o=t&&t.SlideShow;n?o&&i.opts.slideShow.autoStart&&o.start():o&&o.isActive&&o.clear()},"afterShow.fb":function(e,t){var i=t&&t.SlideShow;i&&i.isActive&&i.set()},"afterKeydown.fb":function(e,t,i,n,o){var s=t&&t.SlideShow;!s||!i.opts.slideShow||80!==o&&32!==o||r(a.activeElement).is("button,a,input")||(n.preventDefault(),s.toggle())},"beforeClose.fb onDeactivate.fb":function(e,t){var i=t&&t.SlideShow;i&&i.stop()}}),r(a).on("visibilitychange",function(){var e=r.fancybox.getInstance(),t=e&&e.SlideShow;t&&t.isActive&&(a.hidden?t.clear():t.set())})}(document,window.jQuery),function(s,t){"use strict";var i=function(){for(var e,t,i=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],n={},o=0;o<i.length;o++)if((e=i[o])&&e[1]in s){for(t=0;t<e.length;t++)n[i[0][t]]=e[t];return n}return!1}();if(!i)return t.fancybox.defaults.btnTpl.fullScreen=!1;var o={request:function(e){(e=e||s.documentElement)[i.requestFullscreen](e.ALLOW_KEYBOARD_INPUT)},exit:function(){s[i.exitFullscreen]()},toggle:function(e){e=e||s.documentElement,this.isFullscreen()?this.exit():this.request(e)},isFullscreen:function(){return Boolean(s[i.fullscreenElement])},enabled:function(){return Boolean(s[i.fullscreenEnabled])}};t(s).on({"onInit.fb":function(e,t){var i,n=t.$refs.toolbar.find("[data-fancybox-fullscreen]");t&&!t.FullScreen&&t.group[t.currIndex].opts.fullScreen?((i=t.$refs.container).on("click.fb-fullscreen","[data-fancybox-fullscreen]",function(e){e.stopPropagation(),e.preventDefault(),o.toggle(i[0])}),t.opts.fullScreen&&!0===t.opts.fullScreen.autoStart&&o.request(i[0]),t.FullScreen=o):n.hide()},"afterKeydown.fb":function(e,t,i,n,o){t&&t.FullScreen&&70===o&&(n.preventDefault(),t.FullScreen.toggle(t.$refs.container[0]))},"beforeClose.fb":function(e){e&&e.FullScreen&&o.exit()}}),t(s).on(i.fullscreenchange,function(){var e=t.fancybox.getInstance();e.current&&"image"===e.current.type&&e.isAnimating&&(e.current.$content.css("transition","none"),e.isAnimating=!1,e.update(!0,!0,0))})}(document,window.jQuery),function(e,r){"use strict";function i(e){this.instance=e,this.init()}r.extend(i.prototype,{$button:null,$grid:null,$list:null,isVisible:!1,init:function(){var e=this,t=e.instance.group[0],i=e.instance.group[1];e.$button=e.instance.$refs.toolbar.find("[data-fancybox-thumbs]"),1<e.instance.group.length&&e.instance.group[e.instance.currIndex].opts.thumbs&&("image"==t.type||t.opts.thumb||t.opts.$thumb)&&("image"==i.type||i.opts.thumb||i.opts.$thumb)?(e.$button.on("click",function(){e.toggle()}),e.isActive=!0):(e.$button.hide(),e.isActive=!1)},create:function(){var i,n,e=this.instance;this.$grid=r('<div class="fancybox-thumbs"></div>').appendTo(e.$refs.container),i="<ul>",r.each(e.group,function(e,t){(n=t.opts.thumb||(t.opts.$thumb?t.opts.$thumb.attr("src"):null))||"image"!==t.type||(n=t.src),n&&n.length&&(i+='<li data-index="'+e+'"  tabindex="0" class="fancybox-thumbs-loading"><img data-src="'+n+'" /></li>')}),i+="</ul>",this.$list=r(i).appendTo(this.$grid).on("click","li",function(){e.jumpTo(r(this).data("index"))}),this.$list.find("img").hide().one("load",function(){var e=r(this).parent().removeClass("fancybox-thumbs-loading"),t=e.outerWidth(),i=e.outerHeight(),n=this.naturalWidth||this.width,o=this.naturalHeight||this.height,s=n/t,a=o/i;1<=s&&1<=a&&(a<s?(n/=a,o=i):(n=t,o/=s)),r(this).css({width:Math.floor(n),height:Math.floor(o),"margin-top":Math.min(0,Math.floor(.3*i-.3*o)),"margin-left":Math.min(0,Math.floor(.5*t-.5*n))}).show()}).each(function(){this.src=r(this).data("src")})},focus:function(){this.instance.current&&this.$list.children().removeClass("fancybox-thumbs-active").filter('[data-index="'+this.instance.current.index+'"]').addClass("fancybox-thumbs-active").focus()},close:function(){this.$grid.hide()},update:function(){this.instance.$refs.container.toggleClass("fancybox-show-thumbs",this.isVisible),this.isVisible?(this.$grid||this.create(),this.instance.trigger("onThumbsShow"),this.focus()):this.$grid&&this.instance.trigger("onThumbsHide"),this.instance.update()},hide:function(){this.isVisible=!1,this.update()},show:function(){this.isVisible=!0,this.update()},toggle:function(){this.isVisible=!this.isVisible,this.update()}}),r(e).on({"onInit.fb":function(e,t){t&&!t.Thumbs&&(t.Thumbs=new i(t))},"beforeShow.fb":function(e,t,i,n){var o=t&&t.Thumbs;if(o&&o.isActive){if(i.modal)return o.$button.hide(),void o.hide();n&&!0===t.opts.thumbs.autoStart&&o.show(),o.isVisible&&o.focus()}},"afterKeydown.fb":function(e,t,i,n,o){var s=t&&t.Thumbs;s&&s.isActive&&71===o&&(n.preventDefault(),s.toggle())},"beforeClose.fb":function(e,t){var i=t&&t.Thumbs;i&&i.isVisible&&!1!==t.opts.thumbs.hideOnClose&&i.close()}})}(document,window.jQuery),function(s,a,r){"use strict";function o(){var e=a.location.hash.substr(1),t=e.split("-"),i=1<t.length&&/^\+?\d+$/.test(t[t.length-1])&&parseInt(t.pop(-1),10)||1;return i<1&&(i=1),{hash:e,index:i,gallery:t.join("-")}}function t(e){var t;""!==e.gallery&&((t=r("[data-fancybox='"+r.escapeSelector(e.gallery)+"']").eq(e.index-1)).length?t.trigger("click"):r("#"+r.escapeSelector(e.gallery)).trigger("click"))}function l(e){var t;return!!e&&((t=e.current?e.current.opts:e.opts).$orig?t.$orig.data("fancybox"):t.hash||"")}r.escapeSelector||(r.escapeSelector=function(e){return(e+"").replace(/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g,function(e,t){return t?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e})});var d=null,c=null;r(function(){setTimeout(function(){!1!==r.fancybox.defaults.hash&&(r(s).on({"onInit.fb":function(e,t){var i,n;!1!==t.group[t.currIndex].opts.hash&&(i=o(),(n=l(t))&&i.gallery&&n==i.gallery&&(t.currIndex=i.index-1))},"beforeShow.fb":function(e,t,i,n){var o;!1===i.opts.hash||(o=l(t))&&""!==o&&(a.location.hash.indexOf(o)<0&&(t.opts.origHash=a.location.hash),d=o+(1<t.group.length?"-"+(i.index+1):""),"replaceState"in a.history?(c&&clearTimeout(c),c=setTimeout(function(){a.history[n?"pushState":"replaceState"]({},s.title,a.location.pathname+a.location.search+"#"+d),c=null},300)):a.location.hash=d)},"beforeClose.fb":function(e,t,i){var n,o;c&&clearTimeout(c),!1!==i.opts.hash&&(n=l(t),o=t&&t.opts.origHash?t.opts.origHash:"",n&&""!==n&&("replaceState"in history?a.history.replaceState({},s.title,a.location.pathname+a.location.search+o):(a.location.hash=o,r(a).scrollTop(t.scrollTop).scrollLeft(t.scrollLeft))),d=null)}}),r(a).on("hashchange.fb",function(){var e=o();r.fancybox.getInstance()?!d||d===e.gallery+"-"+e.index||1===e.index&&d==e.gallery||(d=null,r.fancybox.close()):""!==e.gallery&&t(e)}),r(a).one("unload.fb popstate.fb",function(){r.fancybox.getInstance("close",!0,0)}),t(o()))},50)})}(document,window,window.jQuery),function(e){"function"==typeof define&&define.amd?define(["jquery"],e):e("object"==("undefined"==typeof exports?"undefined":_typeof(exports))?require("jquery"):jQuery)}(function(C){var n,e=navigator.userAgent,k=/iphone/i.test(e),o=/chrome/i.test(e),E=/android/i.test(e);C.mask={definitions:{9:"[0-9]",a:"[A-Za-z]","*":"[A-Za-z0-9]"},autoclear:!0,dataName:"rawMaskFn",placeholder:"_"},C.fn.extend({caret:function(e,t){var i;if(0!==this.length&&!this.is(":hidden"))return"number"==typeof e?(t="number"==typeof t?t:e,this.each(function(){this.setSelectionRange?this.setSelectionRange(e,t):this.createTextRange&&((i=this.createTextRange()).collapse(!0),i.moveEnd("character",t),i.moveStart("character",e),i.select())})):(this[0].setSelectionRange?(e=this[0].selectionStart,t=this[0].selectionEnd):document.selection&&document.selection.createRange&&(i=document.selection.createRange(),e=0-i.duplicate().moveStart("character",-1e5),t=e+i.text.length),{begin:e,end:t})},unmask:function(){return this.trigger("unmask")},mask:function(t,v){var i,y,b,x,w,S,T;if(!t&&0<this.length){var e=C(this[0]).data(C.mask.dataName);return e?e():void 0}return v=C.extend({autoclear:C.mask.autoclear,placeholder:C.mask.placeholder,completed:null},v),i=C.mask.definitions,y=[],b=S=t.length,x=null,C.each(t.split(""),function(e,t){"?"==t?(S--,b=e):i[t]?(y.push(new RegExp(i[t])),null===x&&(x=y.length-1),e<b&&(w=y.length-1)):y.push(null)}),this.trigger("unmask").each(function(){function a(){if(v.completed){for(var e=x;e<=w;e++)if(y[e]&&f[e]===r(e))return;v.completed.call(h)}}function r(e){return v.placeholder.charAt(e<v.placeholder.length?e:0)}function l(e){for(;++e<S&&!y[e];);return e}function d(e,t){var i,n;if(!(e<0)){for(i=e,n=l(t);i<S;i++)if(y[i]){if(!(n<S&&y[i].test(f[n])))break;f[i]=f[n],f[n]=r(n),n=l(n)}u(),h.caret(Math.max(x,e))}}function s(){p(),h.val()!=g&&h.change()}function c(e,t){for(var i=e;i<t&&i<S;i++)y[i]&&(f[i]=r(i))}function u(){h.val(f.join(""))}function p(e){for(var t,i=h.val(),n=-1,o=0,s=0;o<S;o++)if(y[o]){for(f[o]=r(o);s++<i.length;)if(t=i.charAt(s-1),y[o].test(t)){f[o]=t,n=o;break}if(s>i.length){c(o+1,S);break}}else f[o]===i.charAt(s)&&s++,o<b&&(n=o);return e?u():n+1<b?v.autoclear||f.join("")===m?(h.val()&&h.val(""),c(0,S)):u():(u(),h.val(h.val().substring(0,n+1))),b?o:x}var h=C(this),f=C.map(t.split(""),function(e,t){return"?"!=e?i[e]?r(t):e:void 0}),m=f.join(""),g=h.val();h.data(C.mask.dataName,function(){return C.map(f,function(e,t){return y[t]&&e!=r(t)?e:null}).join("")}),h.one("unmask",function(){h.off(".mask").removeData(C.mask.dataName)}).on("focus.mask",function(){var e;h.prop("readonly")||(clearTimeout(n),g=h.val(),e=p(),n=setTimeout(function(){h.get(0)===document.activeElement&&(u(),e==t.replace("?","").length?h.caret(0,e):h.caret(e))},10))}).on("blur.mask",s).on("keydown.mask",function(e){var t,i,n,o;h.prop("readonly")||(o=e.which||e.keyCode,T=h.val(),8===o||46===o||k&&127===o?(i=(t=h.caret()).begin,(n=t.end)-i==0&&(i=46!==o?function(e){for(;0<=--e&&!y[e];);return e}(i):n=l(i-1),n=46===o?l(n):n),c(i,n),d(i,n-1),e.preventDefault()):13===o?s.call(this,e):27===o&&(h.val(g),h.caret(0,p()),e.preventDefault()))}).on("keypress.mask",function(e){var t,i,n,o,s;h.prop("readonly")||(o=e.which||e.keyCode,s=h.caret(),e.ctrlKey||e.altKey||e.metaKey||o<32||!o||13===o||(s.end-s.begin!=0&&(c(s.begin,s.end),d(s.begin,s.end-1)),(t=l(s.begin-1))<S&&(i=String.fromCharCode(o),y[t].test(i))&&(function(e){for(var t,i,n=e,o=r(e);n<S;n++)if(y[n]){if(t=l(n),i=f[n],f[n]=o,!(t<S&&y[t].test(i)))break;o=i}}(t),f[t]=i,u(),n=l(t),E?setTimeout(function(){C.proxy(C.fn.caret,h,n)()},0):h.caret(n),s.begin<=w&&a()),e.preventDefault()))}).on("input.mask paste.mask",function(){h.prop("readonly")||setTimeout(function(){var e=p(!0);h.caret(e),a()},0)}),o&&E&&h.off("input.mask").on("input.mask",function(){var e=h.val(),t=h.caret();if(T&&T.length&&T.length>e.length){for(p(!0);0<t.begin&&!y[t.begin-1];)t.begin--;if(0===t.begin)for(;t.begin<x&&!y[t.begin];)t.begin++;h.caret(t.begin,t.begin)}else{for(p(!0);t.begin<S&&!y[t.begin];)t.begin++;h.caret(t.begin,t.begin)}a()}),p()})}})}),function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(d){"use strict";var o,s=window.Slick||{};o=0,(s=function(e,t){var i,n=this;n.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:d(e),appendDots:d(e),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,t){return d('<button type="button" />').text(t+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,focusOnChange:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},n.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},d.extend(n,n.initials),n.activeBreakpoint=null,n.animType=null,n.animProp=null,n.breakpoints=[],n.breakpointSettings=[],n.cssTransitions=!1,n.focussed=!1,n.interrupted=!1,n.hidden="hidden",n.paused=!0,n.positionProp=null,n.respondTo=null,n.rowCount=1,n.shouldClick=!0,n.$slider=d(e),n.$slidesCache=null,n.transformType=null,n.transitionType=null,n.visibilityChange="visibilitychange",n.windowWidth=0,n.windowTimer=null,i=d(e).data("slick")||{},n.options=d.extend({},n.defaults,t,i),n.currentSlide=n.options.initialSlide,n.originalSettings=n.options,void 0!==document.mozHidden?(n.hidden="mozHidden",n.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(n.hidden="webkitHidden",n.visibilityChange="webkitvisibilitychange"),n.autoPlay=d.proxy(n.autoPlay,n),n.autoPlayClear=d.proxy(n.autoPlayClear,n),n.autoPlayIterator=d.proxy(n.autoPlayIterator,n),n.changeSlide=d.proxy(n.changeSlide,n),n.clickHandler=d.proxy(n.clickHandler,n),n.selectHandler=d.proxy(n.selectHandler,n),n.setPosition=d.proxy(n.setPosition,n),n.swipeHandler=d.proxy(n.swipeHandler,n),n.dragHandler=d.proxy(n.dragHandler,n),n.keyHandler=d.proxy(n.keyHandler,n),n.instanceUid=o++,n.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,n.registerBreakpoints(),n.init(!0)}).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},s.prototype.addSlide=s.prototype.slickAdd=function(e,t,i){var n=this;if("boolean"==typeof t)i=t,t=null;else if(t<0||t>=n.slideCount)return!1;n.unload(),"number"==typeof t?0===t&&0===n.$slides.length?d(e).appendTo(n.$slideTrack):i?d(e).insertBefore(n.$slides.eq(t)):d(e).insertAfter(n.$slides.eq(t)):!0===i?d(e).prependTo(n.$slideTrack):d(e).appendTo(n.$slideTrack),n.$slides=n.$slideTrack.children(this.options.slide),n.$slideTrack.children(this.options.slide).detach(),n.$slideTrack.append(n.$slides),n.$slides.each(function(e,t){d(t).attr("data-slick-index",e)}),n.$slidesCache=n.$slides,n.reinit()},s.prototype.animateHeight=function(){var e;1===this.options.slidesToShow&&!0===this.options.adaptiveHeight&&!1===this.options.vertical&&(e=this.$slides.eq(this.currentSlide).outerHeight(!0),this.$list.animate({height:e},this.options.speed))},s.prototype.animateSlide=function(e,t){var i={},n=this;n.animateHeight(),!0===n.options.rtl&&!1===n.options.vertical&&(e=-e),!1===n.transformsEnabled?!1===n.options.vertical?n.$slideTrack.animate({left:e},n.options.speed,n.options.easing,t):n.$slideTrack.animate({top:e},n.options.speed,n.options.easing,t):!1===n.cssTransitions?(!0===n.options.rtl&&(n.currentLeft=-n.currentLeft),d({animStart:n.currentLeft}).animate({animStart:e},{duration:n.options.speed,easing:n.options.easing,step:function(e){e=Math.ceil(e),!1===n.options.vertical?i[n.animType]="translate("+e+"px, 0px)":i[n.animType]="translate(0px,"+e+"px)",n.$slideTrack.css(i)},complete:function(){t&&t.call()}})):(n.applyTransition(),e=Math.ceil(e),!1===n.options.vertical?i[n.animType]="translate3d("+e+"px, 0px, 0px)":i[n.animType]="translate3d(0px,"+e+"px, 0px)",n.$slideTrack.css(i),t&&setTimeout(function(){n.disableTransition(),t.call()},n.options.speed))},s.prototype.getNavTarget=function(){var e=this.options.asNavFor;return e&&null!==e&&(e=d(e).not(this.$slider)),e},s.prototype.asNavFor=function(t){var e=this.getNavTarget();null!==e&&"object"==typeof e&&e.each(function(){var e=d(this).slick("getSlick");e.unslicked||e.slideHandler(t,!0)})},s.prototype.applyTransition=function(e){var t=this,i={};!1===t.options.fade?i[t.transitionType]=t.transformType+" "+t.options.speed+"ms "+t.options.cssEase:i[t.transitionType]="opacity "+t.options.speed+"ms "+t.options.cssEase,!1===t.options.fade?t.$slideTrack.css(i):t.$slides.eq(e).css(i)},s.prototype.autoPlay=function(){this.autoPlayClear(),this.slideCount>this.options.slidesToShow&&(this.autoPlayTimer=setInterval(this.autoPlayIterator,this.options.autoplaySpeed))},s.prototype.autoPlayClear=function(){this.autoPlayTimer&&clearInterval(this.autoPlayTimer)},s.prototype.autoPlayIterator=function(){var e=this,t=e.currentSlide+e.options.slidesToScroll;e.paused||e.interrupted||e.focussed||(!1===e.options.infinite&&(1===e.direction&&e.currentSlide+1===e.slideCount-1?e.direction=0:0===e.direction&&(t=e.currentSlide-e.options.slidesToScroll,e.currentSlide-1==0&&(e.direction=1))),e.slideHandler(t))},s.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=d(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=d(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},s.prototype.buildDots=function(){var e,t,i=this;if(!0===i.options.dots&&i.slideCount>i.options.slidesToShow){for(i.$slider.addClass("slick-dotted"),t=d("<ul />").addClass(i.options.dotsClass),e=0;e<=i.getDotCount();e+=1)t.append(d("<li />").append(i.options.customPaging.call(this,i,e)));i.$dots=t.appendTo(i.options.appendDots),i.$dots.find("li").first().addClass("slick-active")}},s.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each(function(e,t){d(t).attr("data-slick-index",e).data("originalStyling",d(t).attr("style")||"")}),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?d('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),d("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},s.prototype.buildRows=function(){var e,t,i,n=this,o=document.createDocumentFragment(),s=n.$slider.children();if(0<n.options.rows){for(i=n.options.slidesPerRow*n.options.rows,t=Math.ceil(s.length/i),e=0;e<t;e++){for(var a=document.createElement("div"),r=0;r<n.options.rows;r++){for(var l=document.createElement("div"),d=0;d<n.options.slidesPerRow;d++){var c=e*i+(r*n.options.slidesPerRow+d);s.get(c)&&l.appendChild(s.get(c))}a.appendChild(l)}o.appendChild(a)}n.$slider.empty().append(o),n.$slider.children().children().children().css({width:100/n.options.slidesPerRow+"%",display:"inline-block"})}},s.prototype.checkResponsive=function(e,t){var i,n,o,s=this,a=!1,r=s.$slider.width(),l=window.innerWidth||d(window).width();if("window"===s.respondTo?o=l:"slider"===s.respondTo?o=r:"min"===s.respondTo&&(o=Math.min(l,r)),s.options.responsive&&s.options.responsive.length&&null!==s.options.responsive){for(i in n=null,s.breakpoints)s.breakpoints.hasOwnProperty(i)&&(!1===s.originalSettings.mobileFirst?o<s.breakpoints[i]&&(n=s.breakpoints[i]):o>s.breakpoints[i]&&(n=s.breakpoints[i]));null!==n?null!==s.activeBreakpoint&&n===s.activeBreakpoint&&!t||(s.activeBreakpoint=n,"unslick"===s.breakpointSettings[n]?s.unslick(n):(s.options=d.extend({},s.originalSettings,s.breakpointSettings[n]),!0===e&&(s.currentSlide=s.options.initialSlide),s.refresh(e)),a=n):null!==s.activeBreakpoint&&(s.activeBreakpoint=null,s.options=s.originalSettings,!0===e&&(s.currentSlide=s.options.initialSlide),s.refresh(e),a=n),e||!1===a||s.$slider.trigger("breakpoint",[s,a])}},s.prototype.changeSlide=function(e,t){var i,n,o=this,s=d(e.currentTarget);switch(s.is("a")&&e.preventDefault(),s.is("li")||(s=s.closest("li")),i=o.slideCount%o.options.slidesToScroll!=0?0:(o.slideCount-o.currentSlide)%o.options.slidesToScroll,e.data.message){case"previous":n=0==i?o.options.slidesToScroll:o.options.slidesToShow-i,o.slideCount>o.options.slidesToShow&&o.slideHandler(o.currentSlide-n,!1,t);break;case"next":n=0==i?o.options.slidesToScroll:i,o.slideCount>o.options.slidesToShow&&o.slideHandler(o.currentSlide+n,!1,t);break;case"index":var a=0===e.data.index?0:e.data.index||s.index()*o.options.slidesToScroll;o.slideHandler(o.checkNavigable(a),!1,t),s.children().trigger("focus");break;default:return}},s.prototype.checkNavigable=function(e){var t=this.getNavigableIndexes(),i=0;if(e>t[t.length-1])e=t[t.length-1];else for(var n in t){if(e<t[n]){e=i;break}i=t[n]}return e},s.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(d("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",d.proxy(e.interrupt,e,!0)).off("mouseleave.slick",d.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow&&e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow&&e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),d(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().off("click.slick",e.selectHandler),d(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),d(window).off("resize.slick.slick-"+e.instanceUid,e.resize),d("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),d(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},s.prototype.cleanUpSlideEvents=function(){this.$list.off("mouseenter.slick",d.proxy(this.interrupt,this,!0)),this.$list.off("mouseleave.slick",d.proxy(this.interrupt,this,!1))},s.prototype.cleanUpRows=function(){var e;0<this.options.rows&&((e=this.$slides.children().children()).removeAttr("style"),this.$slider.empty().append(e))},s.prototype.clickHandler=function(e){!1===this.shouldClick&&(e.stopImmediatePropagation(),e.stopPropagation(),e.preventDefault())},s.prototype.destroy=function(e){var t=this;t.autoPlayClear(),t.touchObject={},t.cleanUpEvents(),d(".slick-cloned",t.$slider).detach(),t.$dots&&t.$dots.remove(),t.$prevArrow&&t.$prevArrow.length&&(t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.prevArrow)&&t.$prevArrow.remove()),t.$nextArrow&&t.$nextArrow.length&&(t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),t.htmlExpr.test(t.options.nextArrow)&&t.$nextArrow.remove()),t.$slides&&(t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){d(this).attr("style",d(this).data("originalStyling"))}),t.$slideTrack.children(this.options.slide).detach(),t.$slideTrack.detach(),t.$list.detach(),t.$slider.append(t.$slides)),t.cleanUpRows(),t.$slider.removeClass("slick-slider"),t.$slider.removeClass("slick-initialized"),t.$slider.removeClass("slick-dotted"),t.unslicked=!0,e||t.$slider.trigger("destroy",[t])},s.prototype.disableTransition=function(e){var t={};t[this.transitionType]="",!1===this.options.fade?this.$slideTrack.css(t):this.$slides.eq(e).css(t)},s.prototype.fadeSlide=function(e,t){var i=this;!1===i.cssTransitions?(i.$slides.eq(e).css({zIndex:i.options.zIndex}),i.$slides.eq(e).animate({opacity:1},i.options.speed,i.options.easing,t)):(i.applyTransition(e),i.$slides.eq(e).css({opacity:1,zIndex:i.options.zIndex}),t&&setTimeout(function(){i.disableTransition(e),t.call()},i.options.speed))},s.prototype.fadeSlideOut=function(e){!1===this.cssTransitions?this.$slides.eq(e).animate({opacity:0,zIndex:this.options.zIndex-2},this.options.speed,this.options.easing):(this.applyTransition(e),this.$slides.eq(e).css({opacity:0,zIndex:this.options.zIndex-2}))},s.prototype.filterSlides=s.prototype.slickFilter=function(e){null!==e&&(this.$slidesCache=this.$slides,this.unload(),this.$slideTrack.children(this.options.slide).detach(),this.$slidesCache.filter(e).appendTo(this.$slideTrack),this.reinit())},s.prototype.focusHandler=function(){var i=this;i.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(e){e.stopImmediatePropagation();var t=d(this);setTimeout(function(){i.options.pauseOnFocus&&(i.focussed=t.is(":focus"),i.autoPlay())},0)})},s.prototype.getCurrent=s.prototype.slickCurrentSlide=function(){return this.currentSlide},s.prototype.getDotCount=function(){var e=this,t=0,i=0,n=0;if(!0===e.options.infinite)if(e.slideCount<=e.options.slidesToShow)++n;else for(;t<e.slideCount;)++n,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else if(!0===e.options.centerMode)n=e.slideCount;else if(e.options.asNavFor)for(;t<e.slideCount;)++n,t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else n=1+Math.ceil((e.slideCount-e.options.slidesToShow)/e.options.slidesToScroll);return n-1},s.prototype.getLeft=function(e){var t,i,n,o,s=this,a=0;return s.slideOffset=0,i=s.$slides.first().outerHeight(!0),!0===s.options.infinite?(s.slideCount>s.options.slidesToShow&&(s.slideOffset=s.slideWidth*s.options.slidesToShow*-1,o=-1,!0===s.options.vertical&&!0===s.options.centerMode&&(2===s.options.slidesToShow?o=-1.5:1===s.options.slidesToShow&&(o=-2)),a=i*s.options.slidesToShow*o),s.slideCount%s.options.slidesToScroll!=0&&e+s.options.slidesToScroll>s.slideCount&&s.slideCount>s.options.slidesToShow&&(a=e>s.slideCount?(s.slideOffset=(s.options.slidesToShow-(e-s.slideCount))*s.slideWidth*-1,(s.options.slidesToShow-(e-s.slideCount))*i*-1):(s.slideOffset=s.slideCount%s.options.slidesToScroll*s.slideWidth*-1,s.slideCount%s.options.slidesToScroll*i*-1))):e+s.options.slidesToShow>s.slideCount&&(s.slideOffset=(e+s.options.slidesToShow-s.slideCount)*s.slideWidth,a=(e+s.options.slidesToShow-s.slideCount)*i),s.slideCount<=s.options.slidesToShow&&(a=s.slideOffset=0),!0===s.options.centerMode&&s.slideCount<=s.options.slidesToShow?s.slideOffset=s.slideWidth*Math.floor(s.options.slidesToShow)/2-s.slideWidth*s.slideCount/2:!0===s.options.centerMode&&!0===s.options.infinite?s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)-s.slideWidth:!0===s.options.centerMode&&(s.slideOffset=0,s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)),t=!1===s.options.vertical?e*s.slideWidth*-1+s.slideOffset:e*i*-1+a,!0===s.options.variableWidth&&(n=s.slideCount<=s.options.slidesToShow||!1===s.options.infinite?s.$slideTrack.children(".slick-slide").eq(e):s.$slideTrack.children(".slick-slide").eq(e+s.options.slidesToShow),t=!0===s.options.rtl?n[0]?-1*(s.$slideTrack.width()-n[0].offsetLeft-n.width()):0:n[0]?-1*n[0].offsetLeft:0,!0===s.options.centerMode&&(n=s.slideCount<=s.options.slidesToShow||!1===s.options.infinite?s.$slideTrack.children(".slick-slide").eq(e):s.$slideTrack.children(".slick-slide").eq(e+s.options.slidesToShow+1),t=!0===s.options.rtl?n[0]?-1*(s.$slideTrack.width()-n[0].offsetLeft-n.width()):0:n[0]?-1*n[0].offsetLeft:0,t+=(s.$list.width()-n.outerWidth())/2)),t},s.prototype.getOption=s.prototype.slickGetOption=function(e){return this.options[e]},s.prototype.getNavigableIndexes=function(){for(var e=this,t=0,i=0,n=[],o=!1===e.options.infinite?e.slideCount:(t=-1*e.options.slidesToScroll,i=-1*e.options.slidesToScroll,2*e.slideCount);t<o;)n.push(t),t=i+e.options.slidesToScroll,i+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;return n},s.prototype.getSlick=function(){return this},s.prototype.getSlideCount=function(){var i,n=this,o=!0===n.options.centerMode?n.slideWidth*Math.floor(n.options.slidesToShow/2):0;return!0===n.options.swipeToSlide?(n.$slideTrack.find(".slick-slide").each(function(e,t){if(t.offsetLeft-o+d(t).outerWidth()/2>-1*n.swipeLeft)return i=t,!1}),Math.abs(d(i).attr("data-slick-index")-n.currentSlide)||1):n.options.slidesToScroll},s.prototype.goTo=s.prototype.slickGoTo=function(e,t){this.changeSlide({data:{message:"index",index:parseInt(e)}},t)},s.prototype.init=function(e){var t=this;d(t.$slider).hasClass("slick-initialized")||(d(t.$slider).addClass("slick-initialized"),t.buildRows(),t.buildOut(),t.setProps(),t.startLoad(),t.loadSlider(),t.initializeEvents(),t.updateArrows(),t.updateDots(),t.checkResponsive(!0),t.focusHandler()),e&&t.$slider.trigger("init",[t]),!0===t.options.accessibility&&t.initADA(),t.options.autoplay&&(t.paused=!1,t.autoPlay())},s.prototype.initADA=function(){var n=this,i=Math.ceil(n.slideCount/n.options.slidesToShow),o=n.getNavigableIndexes().filter(function(e){return 0<=e&&e<n.slideCount});n.$slides.add(n.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==n.$dots&&(n.$slides.not(n.$slideTrack.find(".slick-cloned")).each(function(e){var t,i=o.indexOf(e);d(this).attr({role:"tabpanel",id:"slick-slide"+n.instanceUid+e,tabindex:-1}),-1!==i&&(t="slick-slide-control"+n.instanceUid+i,d("#"+t).length&&d(this).attr({"aria-describedby":t}))}),n.$dots.attr("role","tablist").find("li").each(function(e){var t=o[e];d(this).attr({role:"presentation"}),d(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+n.instanceUid+e,"aria-controls":"slick-slide"+n.instanceUid+t,"aria-label":e+1+" of "+i,"aria-selected":null,tabindex:"-1"})}).eq(n.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var e=n.currentSlide,t=e+n.options.slidesToShow;e<t;e++)n.options.focusOnChange?n.$slides.eq(e).attr({tabindex:"0"}):n.$slides.eq(e).removeAttr("tabindex");n.activateADA()},s.prototype.initArrowEvents=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},e.changeSlide),e.$nextArrow.off("click.slick").on("click.slick",{message:"next"},e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow.on("keydown.slick",e.keyHandler),e.$nextArrow.on("keydown.slick",e.keyHandler)))},s.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&(d("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&e.slideCount>e.options.slidesToShow&&d("li",e.$dots).on("mouseenter.slick",d.proxy(e.interrupt,e,!0)).on("mouseleave.slick",d.proxy(e.interrupt,e,!1))},s.prototype.initSlideEvents=function(){this.options.pauseOnHover&&(this.$list.on("mouseenter.slick",d.proxy(this.interrupt,this,!0)),this.$list.on("mouseleave.slick",d.proxy(this.interrupt,this,!1)))},s.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),d(document).on(e.visibilityChange,d.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().on("click.slick",e.selectHandler),d(window).on("orientationchange.slick.slick-"+e.instanceUid,d.proxy(e.orientationChange,e)),d(window).on("resize.slick.slick-"+e.instanceUid,d.proxy(e.resize,e)),d("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),d(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),d(e.setPosition)},s.prototype.initUI=function(){!0===this.options.arrows&&this.slideCount>this.options.slidesToShow&&(this.$prevArrow.show(),this.$nextArrow.show()),!0===this.options.dots&&this.slideCount>this.options.slidesToShow&&this.$dots.show()},s.prototype.keyHandler=function(e){e.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===e.keyCode&&!0===this.options.accessibility?this.changeSlide({data:{message:!0===this.options.rtl?"next":"previous"}}):39===e.keyCode&&!0===this.options.accessibility&&this.changeSlide({data:{message:!0===this.options.rtl?"previous":"next"}}))},s.prototype.lazyLoad=function(){var e,t,i,s=this;function n(e){d("img[data-lazy]",e).each(function(){var e=d(this),t=d(this).attr("data-lazy"),i=d(this).attr("data-srcset"),n=d(this).attr("data-sizes")||s.$slider.attr("data-sizes"),o=document.createElement("img");o.onload=function(){e.animate({opacity:0},100,function(){i&&(e.attr("srcset",i),n&&e.attr("sizes",n)),e.attr("src",t).animate({opacity:1},200,function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),s.$slider.trigger("lazyLoaded",[s,e,t])})},o.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),s.$slider.trigger("lazyLoadError",[s,e,t])},o.src=t})}if(!0===s.options.centerMode?i=!0===s.options.infinite?(t=s.currentSlide+(s.options.slidesToShow/2+1))+s.options.slidesToShow+2:(t=Math.max(0,s.currentSlide-(s.options.slidesToShow/2+1)),s.options.slidesToShow/2+1+2+s.currentSlide):(t=s.options.infinite?s.options.slidesToShow+s.currentSlide:s.currentSlide,i=Math.ceil(t+s.options.slidesToShow),!0===s.options.fade&&(0<t&&t--,i<=s.slideCount&&i++)),e=s.$slider.find(".slick-slide").slice(t,i),"anticipated"===s.options.lazyLoad)for(var o=t-1,a=i,r=s.$slider.find(".slick-slide"),l=0;l<s.options.slidesToScroll;l++)o<0&&(o=s.slideCount-1),e=(e=e.add(r.eq(o))).add(r.eq(a)),o--,a++;n(e),s.slideCount<=s.options.slidesToShow?n(s.$slider.find(".slick-slide")):s.currentSlide>=s.slideCount-s.options.slidesToShow?n(s.$slider.find(".slick-cloned").slice(0,s.options.slidesToShow)):0===s.currentSlide&&n(s.$slider.find(".slick-cloned").slice(-1*s.options.slidesToShow))},s.prototype.loadSlider=function(){this.setPosition(),this.$slideTrack.css({opacity:1}),this.$slider.removeClass("slick-loading"),this.initUI(),"progressive"===this.options.lazyLoad&&this.progressiveLazyLoad()},s.prototype.next=s.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},s.prototype.orientationChange=function(){this.checkResponsive(),this.setPosition()},s.prototype.pause=s.prototype.slickPause=function(){this.autoPlayClear(),this.paused=!0},s.prototype.play=s.prototype.slickPlay=function(){this.autoPlay(),this.options.autoplay=!0,this.paused=!1,this.focussed=!1,this.interrupted=!1},s.prototype.postSlide=function(e){var t=this;t.unslicked||(t.$slider.trigger("afterChange",[t,e]),t.animating=!1,t.slideCount>t.options.slidesToShow&&t.setPosition(),t.swipeLeft=null,t.options.autoplay&&t.autoPlay(),!0===t.options.accessibility&&(t.initADA(),t.options.focusOnChange&&d(t.$slides.get(t.currentSlide)).attr("tabindex",0).focus()))},s.prototype.prev=s.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},s.prototype.preventDefault=function(e){e.preventDefault()},s.prototype.progressiveLazyLoad=function(e){e=e||1;var t,i,n,o,s,a=this,r=d("img[data-lazy]",a.$slider);r.length?(t=r.first(),i=t.attr("data-lazy"),n=t.attr("data-srcset"),o=t.attr("data-sizes")||a.$slider.attr("data-sizes"),(s=document.createElement("img")).onload=function(){n&&(t.attr("srcset",n),o&&t.attr("sizes",o)),t.attr("src",i).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===a.options.adaptiveHeight&&a.setPosition(),a.$slider.trigger("lazyLoaded",[a,t,i]),a.progressiveLazyLoad()},s.onerror=function(){e<3?setTimeout(function(){a.progressiveLazyLoad(e+1)},500):(t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),a.$slider.trigger("lazyLoadError",[a,t,i]),a.progressiveLazyLoad())},s.src=i):a.$slider.trigger("allImagesLoaded",[a])},s.prototype.refresh=function(e){var t,i=this,n=i.slideCount-i.options.slidesToShow;!i.options.infinite&&i.currentSlide>n&&(i.currentSlide=n),i.slideCount<=i.options.slidesToShow&&(i.currentSlide=0),t=i.currentSlide,i.destroy(!0),d.extend(i,i.initials,{currentSlide:t}),i.init(),e||i.changeSlide({data:{message:"index",index:t}},!1)},s.prototype.registerBreakpoints=function(){var e,t,i,n=this,o=n.options.responsive||null;if("array"===d.type(o)&&o.length){for(e in n.respondTo=n.options.respondTo||"window",o)if(i=n.breakpoints.length-1,o.hasOwnProperty(e)){for(t=o[e].breakpoint;0<=i;)n.breakpoints[i]&&n.breakpoints[i]===t&&n.breakpoints.splice(i,1),i--;n.breakpoints.push(t),n.breakpointSettings[t]=o[e].settings}n.breakpoints.sort(function(e,t){return n.options.mobileFirst?e-t:t-e})}},s.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},s.prototype.resize=function(){var e=this;d(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=d(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},s.prototype.removeSlide=s.prototype.slickRemove=function(e,t,i){var n=this;if(e="boolean"==typeof e?!0===(t=e)?0:n.slideCount-1:!0===t?--e:e,n.slideCount<1||e<0||e>n.slideCount-1)return!1;n.unload(),!0===i?n.$slideTrack.children().remove():n.$slideTrack.children(this.options.slide).eq(e).remove(),n.$slides=n.$slideTrack.children(this.options.slide),n.$slideTrack.children(this.options.slide).detach(),n.$slideTrack.append(n.$slides),n.$slidesCache=n.$slides,n.reinit()},s.prototype.setCSS=function(e){var t,i,n=this,o={};!0===n.options.rtl&&(e=-e),t="left"==n.positionProp?Math.ceil(e)+"px":"0px",i="top"==n.positionProp?Math.ceil(e)+"px":"0px",o[n.positionProp]=e,!1===n.transformsEnabled||(!(o={})===n.cssTransitions?o[n.animType]="translate("+t+", "+i+")":o[n.animType]="translate3d("+t+", "+i+", 0px)"),n.$slideTrack.css(o)},s.prototype.setDimensions=function(){var e=this;!1===e.options.vertical?!0===e.options.centerMode&&e.$list.css({padding:"0px "+e.options.centerPadding}):(e.$list.height(e.$slides.first().outerHeight(!0)*e.options.slidesToShow),!0===e.options.centerMode&&e.$list.css({padding:e.options.centerPadding+" 0px"})),e.listWidth=e.$list.width(),e.listHeight=e.$list.height(),!1===e.options.vertical&&!1===e.options.variableWidth?(e.slideWidth=Math.ceil(e.listWidth/e.options.slidesToShow),e.$slideTrack.width(Math.ceil(e.slideWidth*e.$slideTrack.children(".slick-slide").length))):!0===e.options.variableWidth?e.$slideTrack.width(5e3*e.slideCount):(e.slideWidth=Math.ceil(e.listWidth),e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(!0)*e.$slideTrack.children(".slick-slide").length)));var t=e.$slides.first().outerWidth(!0)-e.$slides.first().width();!1===e.options.variableWidth&&e.$slideTrack.children(".slick-slide").width(e.slideWidth-t)},s.prototype.setFade=function(){var i,n=this;n.$slides.each(function(e,t){i=n.slideWidth*e*-1,!0===n.options.rtl?d(t).css({position:"relative",right:i,top:0,zIndex:n.options.zIndex-2,opacity:0}):d(t).css({position:"relative",left:i,top:0,zIndex:n.options.zIndex-2,opacity:0})}),n.$slides.eq(n.currentSlide).css({zIndex:n.options.zIndex-1,opacity:1})},s.prototype.setHeight=function(){var e;1===this.options.slidesToShow&&!0===this.options.adaptiveHeight&&!1===this.options.vertical&&(e=this.$slides.eq(this.currentSlide).outerHeight(!0),this.$list.css("height",e))},s.prototype.setOption=s.prototype.slickSetOption=function(){var e,t,i,n,o,s=this,a=!1;if("object"===d.type(arguments[0])?(i=arguments[0],a=arguments[1],o="multiple"):"string"===d.type(arguments[0])&&(n=arguments[1],a=arguments[2],"responsive"===(i=arguments[0])&&"array"===d.type(arguments[1])?o="responsive":void 0!==arguments[1]&&(o="single")),"single"===o)s.options[i]=n;else if("multiple"===o)d.each(i,function(e,t){s.options[e]=t});else if("responsive"===o)for(t in n)if("array"!==d.type(s.options.responsive))s.options.responsive=[n[t]];else{for(e=s.options.responsive.length-1;0<=e;)s.options.responsive[e].breakpoint===n[t].breakpoint&&s.options.responsive.splice(e,1),e--;s.options.responsive.push(n[t])}a&&(s.unload(),s.reinit())},s.prototype.setPosition=function(){this.setDimensions(),this.setHeight(),!1===this.options.fade?this.setCSS(this.getLeft(this.currentSlide)):this.setFade(),this.$slider.trigger("setPosition",[this])},s.prototype.setProps=function(){var e=this,t=document.body.style;e.positionProp=!0===e.options.vertical?"top":"left","top"===e.positionProp?e.$slider.addClass("slick-vertical"):e.$slider.removeClass("slick-vertical"),void 0===t.WebkitTransition&&void 0===t.MozTransition&&void 0===t.msTransition||!0===e.options.useCSS&&(e.cssTransitions=!0),e.options.fade&&("number"==typeof e.options.zIndex?e.options.zIndex<3&&(e.options.zIndex=3):e.options.zIndex=e.defaults.zIndex),void 0!==t.OTransform&&(e.animType="OTransform",e.transformType="-o-transform",e.transitionType="OTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.MozTransform&&(e.animType="MozTransform",e.transformType="-moz-transform",e.transitionType="MozTransition",void 0===t.perspectiveProperty&&void 0===t.MozPerspective&&(e.animType=!1)),void 0!==t.webkitTransform&&(e.animType="webkitTransform",e.transformType="-webkit-transform",e.transitionType="webkitTransition",void 0===t.perspectiveProperty&&void 0===t.webkitPerspective&&(e.animType=!1)),void 0!==t.msTransform&&(e.animType="msTransform",e.transformType="-ms-transform",e.transitionType="msTransition",void 0===t.msTransform&&(e.animType=!1)),void 0!==t.transform&&!1!==e.animType&&(e.animType="transform",e.transformType="transform",e.transitionType="transition"),e.transformsEnabled=e.options.useTransform&&null!==e.animType&&!1!==e.animType},s.prototype.setSlideClasses=function(e){var t,i,n,o,s=this,a=s.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true");s.$slides.eq(e).addClass("slick-current"),!0===s.options.centerMode?(n=s.options.slidesToShow%2==0?1:0,o=Math.floor(s.options.slidesToShow/2),!0===s.options.infinite&&(o<=e&&e<=s.slideCount-1-o?s.$slides.slice(e-o+n,e+o+1).addClass("slick-active").attr("aria-hidden","false"):(t=s.options.slidesToShow+e,a.slice(t-o+1+n,t+o+2).addClass("slick-active").attr("aria-hidden","false")),0===e?a.eq(a.length-1-s.options.slidesToShow).addClass("slick-center"):e===s.slideCount-1&&a.eq(s.options.slidesToShow).addClass("slick-center")),s.$slides.eq(e).addClass("slick-center")):0<=e&&e<=s.slideCount-s.options.slidesToShow?s.$slides.slice(e,e+s.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):a.length<=s.options.slidesToShow?a.addClass("slick-active").attr("aria-hidden","false"):(i=s.slideCount%s.options.slidesToShow,t=!0===s.options.infinite?s.options.slidesToShow+e:e,s.options.slidesToShow==s.options.slidesToScroll&&s.slideCount-e<s.options.slidesToShow?a.slice(t-(s.options.slidesToShow-i),t+i).addClass("slick-active").attr("aria-hidden","false"):a.slice(t,t+s.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false")),"ondemand"!==s.options.lazyLoad&&"anticipated"!==s.options.lazyLoad||s.lazyLoad()},s.prototype.setupInfinite=function(){var e,t,i,n=this;if(!0===n.options.fade&&(n.options.centerMode=!1),!0===n.options.infinite&&!1===n.options.fade&&(t=null,n.slideCount>n.options.slidesToShow)){for(i=!0===n.options.centerMode?n.options.slidesToShow+1:n.options.slidesToShow,e=n.slideCount;e>n.slideCount-i;--e)t=e-1,d(n.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t-n.slideCount).prependTo(n.$slideTrack).addClass("slick-cloned");for(e=0;e<i+n.slideCount;e+=1)t=e,d(n.$slides[t]).clone(!0).attr("id","").attr("data-slick-index",t+n.slideCount).appendTo(n.$slideTrack).addClass("slick-cloned");n.$slideTrack.find(".slick-cloned").find("[id]").each(function(){d(this).attr("id","")})}},s.prototype.interrupt=function(e){e||this.autoPlay(),this.interrupted=e},s.prototype.selectHandler=function(e){var t=d(e.target).is(".slick-slide")?d(e.target):d(e.target).parents(".slick-slide"),i=(i=parseInt(t.attr("data-slick-index")))||0;this.slideCount<=this.options.slidesToShow?this.slideHandler(i,!1,!0):this.slideHandler(i)},s.prototype.slideHandler=function(e,t,i){var n,o,s,a,r,l,d=this;if(t=t||!1,!(!0===d.animating&&!0===d.options.waitForAnimate||!0===d.options.fade&&d.currentSlide===e))if(!1===t&&d.asNavFor(e),n=e,r=d.getLeft(n),a=d.getLeft(d.currentSlide),d.currentLeft=null===d.swipeLeft?a:d.swipeLeft,!1===d.options.infinite&&!1===d.options.centerMode&&(e<0||e>d.getDotCount()*d.options.slidesToScroll))!1===d.options.fade&&(n=d.currentSlide,!0!==i&&d.slideCount>d.options.slidesToShow?d.animateSlide(a,function(){d.postSlide(n)}):d.postSlide(n));else if(!1===d.options.infinite&&!0===d.options.centerMode&&(e<0||e>d.slideCount-d.options.slidesToScroll))!1===d.options.fade&&(n=d.currentSlide,!0!==i&&d.slideCount>d.options.slidesToShow?d.animateSlide(a,function(){d.postSlide(n)}):d.postSlide(n));else{if(d.options.autoplay&&clearInterval(d.autoPlayTimer),o=n<0?d.slideCount%d.options.slidesToScroll!=0?d.slideCount-d.slideCount%d.options.slidesToScroll:d.slideCount+n:n>=d.slideCount?d.slideCount%d.options.slidesToScroll!=0?0:n-d.slideCount:n,d.animating=!0,d.$slider.trigger("beforeChange",[d,d.currentSlide,o]),s=d.currentSlide,d.currentSlide=o,d.setSlideClasses(d.currentSlide),d.options.asNavFor&&(l=(l=d.getNavTarget()).slick("getSlick")).slideCount<=l.options.slidesToShow&&l.setSlideClasses(d.currentSlide),d.updateDots(),d.updateArrows(),!0===d.options.fade)return!0!==i?(d.fadeSlideOut(s),d.fadeSlide(o,function(){d.postSlide(o)})):d.postSlide(o),void d.animateHeight();!0!==i&&d.slideCount>d.options.slidesToShow?d.animateSlide(r,function(){d.postSlide(o)}):d.postSlide(o)}},s.prototype.startLoad=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.hide(),e.$nextArrow.hide()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.hide(),e.$slider.addClass("slick-loading")},s.prototype.swipeDirection=function(){var e=this.touchObject.startX-this.touchObject.curX,t=this.touchObject.startY-this.touchObject.curY,i=Math.atan2(t,e),n=Math.round(180*i/Math.PI);return n<0&&(n=360-Math.abs(n)),n<=45&&0<=n||n<=360&&315<=n?!1===this.options.rtl?"left":"right":135<=n&&n<=225?!1===this.options.rtl?"right":"left":!0===this.options.verticalSwiping?35<=n&&n<=135?"down":"up":"vertical"},s.prototype.swipeEnd=function(e){var t,i,n=this;if(n.dragging=!1,n.swiping=!1,n.scrolling)return n.scrolling=!1;if(n.interrupted=!1,n.shouldClick=!(10<n.touchObject.swipeLength),void 0===n.touchObject.curX)return!1;if(!0===n.touchObject.edgeHit&&n.$slider.trigger("edge",[n,n.swipeDirection()]),n.touchObject.swipeLength>=n.touchObject.minSwipe){switch(i=n.swipeDirection()){case"left":case"down":t=n.options.swipeToSlide?n.checkNavigable(n.currentSlide+n.getSlideCount()):n.currentSlide+n.getSlideCount(),n.currentDirection=0;break;case"right":case"up":t=n.options.swipeToSlide?n.checkNavigable(n.currentSlide-n.getSlideCount()):n.currentSlide-n.getSlideCount(),n.currentDirection=1}"vertical"!=i&&(n.slideHandler(t),n.touchObject={},n.$slider.trigger("swipe",[n,i]))}else n.touchObject.startX!==n.touchObject.curX&&(n.slideHandler(n.currentSlide),n.touchObject={})},s.prototype.swipeHandler=function(e){var t=this;if(!(!1===t.options.swipe||"ontouchend"in document&&!1===t.options.swipe||!1===t.options.draggable&&-1!==e.type.indexOf("mouse")))switch(t.touchObject.fingerCount=e.originalEvent&&void 0!==e.originalEvent.touches?e.originalEvent.touches.length:1,t.touchObject.minSwipe=t.listWidth/t.options.touchThreshold,!0===t.options.verticalSwiping&&(t.touchObject.minSwipe=t.listHeight/t.options.touchThreshold),e.data.action){case"start":t.swipeStart(e);break;case"move":t.swipeMove(e);break;case"end":t.swipeEnd(e)}},s.prototype.swipeMove=function(e){var t,i,n,o,s,a=this,r=void 0!==e.originalEvent?e.originalEvent.touches:null;return!(!a.dragging||a.scrolling||r&&1!==r.length)&&(t=a.getLeft(a.currentSlide),a.touchObject.curX=void 0!==r?r[0].pageX:e.clientX,a.touchObject.curY=void 0!==r?r[0].pageY:e.clientY,a.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(a.touchObject.curX-a.touchObject.startX,2))),s=Math.round(Math.sqrt(Math.pow(a.touchObject.curY-a.touchObject.startY,2))),!a.options.verticalSwiping&&!a.swiping&&4<s?!(a.scrolling=!0):(!0===a.options.verticalSwiping&&(a.touchObject.swipeLength=s),i=a.swipeDirection(),void 0!==e.originalEvent&&4<a.touchObject.swipeLength&&(a.swiping=!0,e.preventDefault()),o=(!1===a.options.rtl?1:-1)*(a.touchObject.curX>a.touchObject.startX?1:-1),!0===a.options.verticalSwiping&&(o=a.touchObject.curY>a.touchObject.startY?1:-1),n=a.touchObject.swipeLength,(a.touchObject.edgeHit=!1)===a.options.infinite&&(0===a.currentSlide&&"right"===i||a.currentSlide>=a.getDotCount()&&"left"===i)&&(n=a.touchObject.swipeLength*a.options.edgeFriction,a.touchObject.edgeHit=!0),!1===a.options.vertical?a.swipeLeft=t+n*o:a.swipeLeft=t+n*(a.$list.height()/a.listWidth)*o,!0===a.options.verticalSwiping&&(a.swipeLeft=t+n*o),!0!==a.options.fade&&!1!==a.options.touchMove&&(!0===a.animating?(a.swipeLeft=null,!1):void a.setCSS(a.swipeLeft))))},s.prototype.swipeStart=function(e){var t,i=this;if(i.interrupted=!0,1!==i.touchObject.fingerCount||i.slideCount<=i.options.slidesToShow)return!(i.touchObject={});void 0!==e.originalEvent&&void 0!==e.originalEvent.touches&&(t=e.originalEvent.touches[0]),i.touchObject.startX=i.touchObject.curX=void 0!==t?t.pageX:e.clientX,i.touchObject.startY=i.touchObject.curY=void 0!==t?t.pageY:e.clientY,i.dragging=!0},s.prototype.unfilterSlides=s.prototype.slickUnfilter=function(){null!==this.$slidesCache&&(this.unload(),this.$slideTrack.children(this.options.slide).detach(),this.$slidesCache.appendTo(this.$slideTrack),this.reinit())},s.prototype.unload=function(){var e=this;d(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},s.prototype.unslick=function(e){this.$slider.trigger("unslick",[this,e]),this.destroy()},s.prototype.updateArrows=function(){var e=this;Math.floor(e.options.slidesToShow/2);!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&!e.options.infinite&&(e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===e.currentSlide?(e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):(e.currentSlide>=e.slideCount-e.options.slidesToShow&&!1===e.options.centerMode||e.currentSlide>=e.slideCount-1&&!0===e.options.centerMode)&&(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},s.prototype.updateDots=function(){null!==this.$dots&&(this.$dots.find("li").removeClass("slick-active").end(),this.$dots.find("li").eq(Math.floor(this.currentSlide/this.options.slidesToScroll)).addClass("slick-active"))},s.prototype.visibility=function(){this.options.autoplay&&(document[this.hidden]?this.interrupted=!0:this.interrupted=!1)},d.fn.slick=function(){for(var e,t=arguments[0],i=Array.prototype.slice.call(arguments,1),n=this.length,o=0;o<n;o++)if("object"==typeof t||void 0===t?this[o].slick=new s(this[o],t):e=this[o].slick[t].apply(this[o].slick,i),void 0!==e)return e;return this}}),function(e){"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof module&&module.exports?module.exports=e:e(jQuery,window,document)}(function(B){var h,H,n,o,r,s,g,N,j,w,f,d,l,c,u,p,m,v,y,b,x,S,$,T,C,k,E,M,R,a,P,A,L,D,q,z,I,O,_,F,W,X,Y,G,V,U,K,Z,Q,J,i,ee,te,ie,ne,oe,se,e,t,ae;e="function"==typeof define&&define.amd,t="undefined"!=typeof module&&module.exports,ae="https:"==document.location.protocol?"https:":"http:",e||(t?require("jquery-mousewheel")(B):B.event.special.mousewheel||B("head").append(decodeURI("%3Cscript src="+ae+"//cdnjs.cloudflare.com/ajax/libs/jquery-mousewheel/3.1.13/jquery.mousewheel.min.js%3E%3C/script%3E"))),h="mCustomScrollbar",H="mCS",n=".mCustomScrollbar",o={setTop:0,setLeft:0,axis:"y",scrollbarPosition:"inside",scrollInertia:950,autoDraggerLength:!0,alwaysShowScrollbar:0,snapOffset:0,mouseWheel:{enable:!0,scrollAmount:"auto",axis:"y",deltaFactor:"auto",disableOver:["select","option","keygen","datalist","textarea"]},scrollButtons:{scrollType:"stepless",scrollAmount:"auto"},keyboard:{enable:!0,scrollType:"stepless",scrollAmount:"auto"},contentTouchScroll:25,documentTouchScroll:!0,advanced:{autoScrollOnFocus:"input,textarea,select,button,datalist,keygen,a[tabindex],area,object,[contenteditable='true']",updateOnContentResize:!0,updateOnImageLoad:"auto",autoUpdateTimeout:60},theme:"light",callbacks:{onTotalScrollOffset:0,onTotalScrollBackOffset:0,alwaysTriggerOffsets:!0}},r=0,s={},g=window.attachEvent&&!window.addEventListener?1:0,N=!1,w=["mCSB_dragger_onDrag","mCSB_scrollTools_onDrag","mCS_img_loaded","mCS_disabled","mCS_destroyed","mCS_no_scrollbar","mCS-autoHide","mCS-dir-rtl","mCS_no_scrollbar_y","mCS_no_scrollbar_x","mCS_y_hidden","mCS_x_hidden","mCSB_draggerContainer","mCSB_buttonUp","mCSB_buttonDown","mCSB_buttonLeft","mCSB_buttonRight"],f={init:function(a){var a=B.extend(!0,{},o,a),e=d.call(this);if(a.live){var t=a.liveSelector||this.selector||n,i=B(t);if("off"===a.live)return void c(t);s[t]=setTimeout(function(){i.mCustomScrollbar(a),"once"===a.live&&i.length&&c(t)},500)}else c(t);return a.setWidth=a.set_width?a.set_width:a.setWidth,a.setHeight=a.set_height?a.set_height:a.setHeight,a.axis=a.horizontalScroll?"x":u(a.axis),a.scrollInertia=0<a.scrollInertia&&a.scrollInertia<17?17:a.scrollInertia,"object"!=typeof a.mouseWheel&&1==a.mouseWheel&&(a.mouseWheel={enable:!0,scrollAmount:"auto",axis:"y",preventDefault:!1,deltaFactor:"auto",normalizeDelta:!1,invert:!1}),a.mouseWheel.scrollAmount=a.mouseWheelPixels?a.mouseWheelPixels:a.mouseWheel.scrollAmount,a.mouseWheel.normalizeDelta=a.advanced.normalizeMouseWheelDelta?a.advanced.normalizeMouseWheelDelta:a.mouseWheel.normalizeDelta,a.scrollButtons.scrollType=p(a.scrollButtons.scrollType),l(a),B(e).each(function(){var e,t,i,n,o,s=B(this);s.data(H)||(s.data(H,{idx:++r,opt:a,scrollRatio:{y:null,x:null},overflowed:null,contentReset:{y:null,x:null},bindEvents:!1,tweenRunning:!1,sequential:{},langDir:s.css("direction"),cbOffsets:null,trigger:null,poll:{size:{o:0,n:0},img:{o:0,n:0},change:{o:0,n:0}}}),t=(e=s.data(H)).opt,i=s.data("mcs-axis"),n=s.data("mcs-scrollbar-position"),o=s.data("mcs-theme"),i&&(t.axis=i),n&&(t.scrollbarPosition=n),o&&(t.theme=o,l(t)),m.call(this),e&&t.callbacks.onCreate&&"function"==typeof t.callbacks.onCreate&&t.callbacks.onCreate.call(this),B("#mCSB_"+e.idx+"_container img:not(."+w[2]+")").addClass(w[2]),f.update.call(null,s))})},update:function(e,r){var t=e||d.call(this);return B(t).each(function(){var e=B(this);if(e.data(H)){var t=e.data(H),i=t.opt,n=B("#mCSB_"+t.idx+"_container"),o=B("#mCSB_"+t.idx),s=[B("#mCSB_"+t.idx+"_dragger_vertical"),B("#mCSB_"+t.idx+"_dragger_horizontal")];if(!n.length)return;t.tweenRunning&&K(e),r&&t&&i.callbacks.onBeforeUpdate&&"function"==typeof i.callbacks.onBeforeUpdate&&i.callbacks.onBeforeUpdate.call(this),e.hasClass(w[3])&&e.removeClass(w[3]),e.hasClass(w[4])&&e.removeClass(w[4]),o.css("max-height","none"),o.height()!==e.height()&&o.css("max-height",e.height()),y.call(this),"y"===i.axis||i.advanced.autoExpandHorizontalScroll||n.css("width",v(n)),t.overflowed=T.call(this),M.call(this),i.autoDraggerLength&&x.call(this),S.call(this),k.call(this);var a=[Math.abs(n[0].offsetTop),Math.abs(n[0].offsetLeft)];"x"!==i.axis&&(t.overflowed[0]?s[0].height()>s[0].parent().height()?C.call(this):(Z(e,a[0].toString(),{dir:"y",dur:0,overwrite:"none"}),t.contentReset.y=null):(C.call(this),"y"===i.axis?E.call(this):"yx"===i.axis&&t.overflowed[1]&&Z(e,a[1].toString(),{dir:"x",dur:0,overwrite:"none"}))),"y"!==i.axis&&(t.overflowed[1]?s[1].width()>s[1].parent().width()?C.call(this):(Z(e,a[1].toString(),{dir:"x",dur:0,overwrite:"none"}),t.contentReset.x=null):(C.call(this),"x"===i.axis?E.call(this):"yx"===i.axis&&t.overflowed[0]&&Z(e,a[0].toString(),{dir:"y",dur:0,overwrite:"none"}))),r&&t&&(2===r&&i.callbacks.onImageLoad&&"function"==typeof i.callbacks.onImageLoad?i.callbacks.onImageLoad.call(this):3===r&&i.callbacks.onSelectorChange&&"function"==typeof i.callbacks.onSelectorChange?i.callbacks.onSelectorChange.call(this):i.callbacks.onUpdate&&"function"==typeof i.callbacks.onUpdate&&i.callbacks.onUpdate.call(this)),U.call(this)}})},scrollTo:function(r,l){if(void 0!==r&&null!=r){var e=d.call(this);return B(e).each(function(){var e,t,i,n,o,s,a=B(this);a.data(H)&&(e=a.data(H),i={trigger:"external",scrollInertia:(t=e.opt).scrollInertia,scrollEasing:"mcsEaseInOut",moveDragger:!1,timeout:60,callbacks:!0,onStart:!0,onUpdate:!0,onComplete:!0},n=B.extend(!0,{},i,l),o=G.call(this,r),s=0<n.scrollInertia&&n.scrollInertia<17?17:n.scrollInertia,o[0]=V.call(this,o[0],"y"),o[1]=V.call(this,o[1],"x"),n.moveDragger&&(o[0]*=e.scrollRatio.y,o[1]*=e.scrollRatio.x),n.dur=se()?0:s,setTimeout(function(){null!==o[0]&&void 0!==o[0]&&"x"!==t.axis&&e.overflowed[0]&&(n.dir="y",n.overwrite="all",Z(a,o[0].toString(),n)),null!==o[1]&&void 0!==o[1]&&"y"!==t.axis&&e.overflowed[1]&&(n.dir="x",n.overwrite="none",Z(a,o[1].toString(),n))},n.timeout))})}},stop:function(){var e=d.call(this);return B(e).each(function(){var e=B(this);e.data(H)&&K(e)})},disable:function(t){var e=d.call(this);return B(e).each(function(){var e=B(this);e.data(H)&&(e.data(H),U.call(this,"remove"),E.call(this),t&&C.call(this),M.call(this,!0),e.addClass(w[3]))})},destroy:function(){var a=d.call(this);return B(a).each(function(){var e,t,i,n,o,s=B(this);s.data(H)&&(t=(e=s.data(H)).opt,i=B("#mCSB_"+e.idx),n=B("#mCSB_"+e.idx+"_container"),o=B(".mCSB_"+e.idx+"_scrollbar"),t.live&&c(t.liveSelector||B(a).selector),U.call(this,"remove"),E.call(this),C.call(this),s.removeData(H),ee(this,"mcs"),o.remove(),n.find("img."+w[2]).removeClass(w[2]),i.replaceWith(n.contents()),s.removeClass(h+" _"+H+"_"+e.idx+" "+w[6]+" "+w[7]+" "+w[5]+" "+w[3]).addClass(w[4]))})}},d=function(){return"object"!=typeof B(this)||B(this).length<1?n:this},l=function(e){e.autoDraggerLength=!(-1<B.inArray(e.theme,["rounded","rounded-dark","rounded-dots","rounded-dots-dark"]))&&e.autoDraggerLength,e.autoExpandScrollbar=!(-1<B.inArray(e.theme,["rounded-dots","rounded-dots-dark","3d","3d-dark","3d-thick","3d-thick-dark","inset","inset-dark","inset-2","inset-2-dark","inset-3","inset-3-dark"]))&&e.autoExpandScrollbar,e.scrollButtons.enable=!(-1<B.inArray(e.theme,["minimal","minimal-dark"]))&&e.scrollButtons.enable,e.autoHideScrollbar=-1<B.inArray(e.theme,["minimal","minimal-dark"])||e.autoHideScrollbar,e.scrollbarPosition=-1<B.inArray(e.theme,["minimal","minimal-dark"])?"outside":e.scrollbarPosition},c=function(e){s[e]&&(clearTimeout(s[e]),ee(s,e))},u=function(e){return"yx"===e||"xy"===e||"auto"===e?"yx":"x"===e||"horizontal"===e?"x":"y"},p=function(e){return"stepped"===e||"pixels"===e||"step"===e||"click"===e?"stepped":"stepless"},m=function(){var e=B(this),t=e.data(H),i=t.opt,n=i.autoExpandScrollbar?" "+w[1]+"_expand":"",o=["<div id='mCSB_"+t.idx+"_scrollbar_vertical' class='mCSB_scrollTools mCSB_"+t.idx+"_scrollbar mCS-"+i.theme+" mCSB_scrollTools_vertical"+n+"'><div class='"+w[12]+"'><div id='mCSB_"+t.idx+"_dragger_vertical' class='mCSB_dragger' style='position:absolute;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>","<div id='mCSB_"+t.idx+"_scrollbar_horizontal' class='mCSB_scrollTools mCSB_"+t.idx+"_scrollbar mCS-"+i.theme+" mCSB_scrollTools_horizontal"+n+"'><div class='"+w[12]+"'><div id='mCSB_"+t.idx+"_dragger_horizontal' class='mCSB_dragger' style='position:absolute;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>"],s="yx"===i.axis?"mCSB_vertical_horizontal":"x"===i.axis?"mCSB_horizontal":"mCSB_vertical",a="yx"===i.axis?o[0]+o[1]:"x"===i.axis?o[1]:o[0],r="yx"===i.axis?"<div id='mCSB_"+t.idx+"_container_wrapper' class='mCSB_container_wrapper' />":"",l=i.autoHideScrollbar?" "+w[6]:"",d="x"!==i.axis&&"rtl"===t.langDir?" "+w[7]:"";i.setWidth&&e.css("width",i.setWidth),i.setHeight&&e.css("height",i.setHeight),i.setLeft="y"!==i.axis&&"rtl"===t.langDir?"989999px":i.setLeft,e.addClass(h+" _"+H+"_"+t.idx+l+d).wrapInner("<div id='mCSB_"+t.idx+"' class='mCustomScrollBox mCS-"+i.theme+" "+s+"'><div id='mCSB_"+t.idx+"_container' class='mCSB_container' style='position:relative; top:"+i.setTop+"; left:"+i.setLeft+";' dir='"+t.langDir+"' /></div>");var c=B("#mCSB_"+t.idx),u=B("#mCSB_"+t.idx+"_container");"y"===i.axis||i.advanced.autoExpandHorizontalScroll||u.css("width",v(u)),"outside"===i.scrollbarPosition?("static"===e.css("position")&&e.css("position","relative"),e.css("overflow","visible"),c.addClass("mCSB_outside").after(a)):(c.addClass("mCSB_inside").append(a),u.wrap(r)),b.call(this);var p=[B("#mCSB_"+t.idx+"_dragger_vertical"),B("#mCSB_"+t.idx+"_dragger_horizontal")];p[0].css("min-height",p[0].height()),p[1].css("min-width",p[1].width())},v=function(e){var t=[e[0].scrollWidth,Math.max.apply(Math,e.children().map(function(){return B(this).outerWidth(!0)}).get())],i=e.parent().width();return i<t[0]?t[0]:i<t[1]?t[1]:"100%"},y=function(){var e,t=B(this).data(H),i=t.opt,n=B("#mCSB_"+t.idx+"_container");i.advanced.autoExpandHorizontalScroll&&"y"!==i.axis&&(n.css({width:"auto","min-width":0,"overflow-x":"scroll"}),e=Math.ceil(n[0].scrollWidth),3===i.advanced.autoExpandHorizontalScroll||2!==i.advanced.autoExpandHorizontalScroll&&e>n.parent().width()?n.css({width:e,"min-width":"100%","overflow-x":"inherit"}):n.css({"overflow-x":"inherit",position:"absolute"}).wrap("<div class='mCSB_h_wrapper' style='position:relative; left:0; width:999999px;' />").css({width:Math.ceil(n[0].getBoundingClientRect().right+.4)-Math.floor(n[0].getBoundingClientRect().left),"min-width":"100%",position:"relative"}).unwrap())},b=function(){var e=B(this).data(H),t=e.opt,i=B(".mCSB_"+e.idx+"_scrollbar:first"),n=ne(t.scrollButtons.tabindex)?"tabindex='"+t.scrollButtons.tabindex+"'":"",o=["<a href='#' class='"+w[13]+"' "+n+" />","<a href='#' class='"+w[14]+"' "+n+" />","<a href='#' class='"+w[15]+"' "+n+" />","<a href='#' class='"+w[16]+"' "+n+" />"],s=["x"===t.axis?o[2]:o[0],"x"===t.axis?o[3]:o[1],o[2],o[3]];t.scrollButtons.enable&&i.prepend(s[0]).append(s[1]).next(".mCSB_scrollTools").prepend(s[2]).append(s[3])},x=function(){var e=B(this).data(H),t=B("#mCSB_"+e.idx),i=B("#mCSB_"+e.idx+"_container"),n=[B("#mCSB_"+e.idx+"_dragger_vertical"),B("#mCSB_"+e.idx+"_dragger_horizontal")],o=[t.height()/i.outerHeight(!1),t.width()/i.outerWidth(!1)],s=[parseInt(n[0].css("min-height")),Math.round(o[0]*n[0].parent().height()),parseInt(n[1].css("min-width")),Math.round(o[1]*n[1].parent().width())],a=g&&s[1]<s[0]?s[0]:s[1],r=g&&s[3]<s[2]?s[2]:s[3];n[0].css({height:a,"max-height":n[0].parent().height()-10}).find(".mCSB_dragger_bar").css({"line-height":s[0]+"px"}),n[1].css({width:r,"max-width":n[1].parent().width()-10})},S=function(){var e=B(this).data(H),t=B("#mCSB_"+e.idx),i=B("#mCSB_"+e.idx+"_container"),n=[B("#mCSB_"+e.idx+"_dragger_vertical"),B("#mCSB_"+e.idx+"_dragger_horizontal")],o=[i.outerHeight(!1)-t.height(),i.outerWidth(!1)-t.width()],s=[o[0]/(n[0].parent().height()-n[0].height()),o[1]/(n[1].parent().width()-n[1].width())];e.scrollRatio={y:s[0],x:s[1]}},$=function(e,t,i){var n=i?w[0]+"_expanded":"",o=e.closest(".mCSB_scrollTools");"active"===t?(e.toggleClass(w[0]+" "+n),o.toggleClass(w[1]),e[0]._draggable=e[0]._draggable?0:1):e[0]._draggable||("hide"===t?(e.removeClass(w[0]),o.removeClass(w[1])):(e.addClass(w[0]),o.addClass(w[1])))},T=function(){var e=B(this).data(H),t=B("#mCSB_"+e.idx),i=B("#mCSB_"+e.idx+"_container"),n=null==e.overflowed?i.height():i.outerHeight(!1),o=null==e.overflowed?i.width():i.outerWidth(!1),s=i[0].scrollHeight,a=i[0].scrollWidth;return n<s&&(n=s),o<a&&(o=a),[n>t.height(),o>t.width()]},C=function(){var e,t=B(this),i=t.data(H),n=i.opt,o=B("#mCSB_"+i.idx),s=B("#mCSB_"+i.idx+"_container"),a=[B("#mCSB_"+i.idx+"_dragger_vertical"),B("#mCSB_"+i.idx+"_dragger_horizontal")];K(t),("x"!==n.axis&&!i.overflowed[0]||"y"===n.axis&&i.overflowed[0])&&(a[0].add(s).css("top",0),Z(t,"_resetY")),("y"!==n.axis&&!i.overflowed[1]||"x"===n.axis&&i.overflowed[1])&&(e=dx=0,"rtl"===i.langDir&&(e=o.width()-s.outerWidth(!1),dx=Math.abs(e/i.scrollRatio.x)),s.css("left",e),a[1].css("left",dx),Z(t,"_resetX"))},k=function(){var t,i=B(this),e=i.data(H),n=e.opt;e.bindEvents||(a.call(this),n.contentTouchScroll&&P.call(this),A.call(this),n.mouseWheel.enable&&function e(){t=setTimeout(function(){B.event.special.mousewheel?(clearTimeout(t),L.call(i[0])):e()},100)}(),O.call(this),F.call(this),n.advanced.autoScrollOnFocus&&_.call(this),n.scrollButtons.enable&&W.call(this),n.keyboard.enable&&X.call(this),e.bindEvents=!0)},E=function(){var e=B(this),t=e.data(H),i=t.opt,n="mCS_"+t.idx,o=".mCSB_"+t.idx+"_scrollbar",s=B("#mCSB_"+t.idx+",#mCSB_"+t.idx+"_container,#mCSB_"+t.idx+"_container_wrapper,"+o+" ."+w[12]+",#mCSB_"+t.idx+"_dragger_vertical,#mCSB_"+t.idx+"_dragger_horizontal,"+o+">a"),a=B("#mCSB_"+t.idx+"_container");i.advanced.releaseDraggableSelectors&&s.add(B(i.advanced.releaseDraggableSelectors)),i.advanced.extraDraggableSelectors&&s.add(B(i.advanced.extraDraggableSelectors)),t.bindEvents&&(B(document).add(B(!q()||top.document)).unbind("."+n),s.each(function(){B(this).unbind("."+n)}),clearTimeout(e[0]._focusTimeout),ee(e[0],"_focusTimeout"),clearTimeout(t.sequential.step),ee(t.sequential,"step"),clearTimeout(a[0].onCompleteTimeout),ee(a[0],"onCompleteTimeout"),t.bindEvents=!1)},M=function(e){var t=B(this),i=t.data(H),n=i.opt,o=B("#mCSB_"+i.idx+"_container_wrapper"),s=o.length?o:B("#mCSB_"+i.idx+"_container"),a=[B("#mCSB_"+i.idx+"_scrollbar_vertical"),B("#mCSB_"+i.idx+"_scrollbar_horizontal")],r=[a[0].find(".mCSB_dragger"),a[1].find(".mCSB_dragger")];"x"!==n.axis&&(i.overflowed[0]&&!e?(a[0].add(r[0]).add(a[0].children("a")).css("display","block"),s.removeClass(w[8]+" "+w[10])):(n.alwaysShowScrollbar?(2!==n.alwaysShowScrollbar&&r[0].css("display","none"),s.removeClass(w[10])):(a[0].css("display","none"),s.addClass(w[10])),s.addClass(w[8]))),"y"!==n.axis&&(i.overflowed[1]&&!e?(a[1].add(r[1]).add(a[1].children("a")).css("display","block"),s.removeClass(w[9]+" "+w[11])):(n.alwaysShowScrollbar?(2!==n.alwaysShowScrollbar&&r[1].css("display","none"),s.removeClass(w[11])):(a[1].css("display","none"),s.addClass(w[11])),s.addClass(w[9]))),i.overflowed[0]||i.overflowed[1]?t.removeClass(w[5]):t.addClass(w[5])},R=function(e){var t=e.type,i=e.target.ownerDocument!==document&&null!==frameElement?[B(frameElement).offset().top,B(frameElement).offset().left]:null,n=q()&&e.target.ownerDocument!==top.document&&null!==frameElement?[B(e.view.frameElement).offset().top,B(e.view.frameElement).offset().left]:[0,0];switch(t){case"pointerdown":case"MSPointerDown":case"pointermove":case"MSPointerMove":case"pointerup":case"MSPointerUp":return i?[e.originalEvent.pageY-i[0]+n[0],e.originalEvent.pageX-i[1]+n[1],!1]:[e.originalEvent.pageY,e.originalEvent.pageX,!1];case"touchstart":case"touchmove":case"touchend":var o=e.originalEvent.touches[0]||e.originalEvent.changedTouches[0],s=e.originalEvent.touches.length||e.originalEvent.changedTouches.length;return e.target.ownerDocument!==document?[o.screenY,o.screenX,1<s]:[o.pageY,o.pageX,1<s];default:return i?[e.pageY-i[0]+n[0],e.pageX-i[1]+n[1],!1]:[e.pageY,e.pageX,!1]}},a=function(){var a,r,l,d=B(this),c=d.data(H),u=c.opt,e="mCS_"+c.idx,p=["mCSB_"+c.idx+"_dragger_vertical","mCSB_"+c.idx+"_dragger_horizontal"],h=B("#mCSB_"+c.idx+"_container"),t=B("#"+p[0]+",#"+p[1]),i=u.advanced.releaseDraggableSelectors?t.add(B(u.advanced.releaseDraggableSelectors)):t,n=u.advanced.extraDraggableSelectors?B(!q()||top.document).add(B(u.advanced.extraDraggableSelectors)):B(!q()||top.document);function o(e,t,i,n){var o,s;h[0].idleTimer=u.scrollInertia<233?250:0,s=a.attr("id")===p[1]?(o="x",(a[0].offsetLeft-t+n)*c.scrollRatio.x):(o="y",(a[0].offsetTop-e+i)*c.scrollRatio.y),Z(d,s.toString(),{dir:o,drag:!0})}t.bind("contextmenu."+e,function(e){e.preventDefault()}).bind("mousedown."+e+" touchstart."+e+" pointerdown."+e+" MSPointerDown."+e,function(e){var t,i,n,o,s;e.stopImmediatePropagation(),e.preventDefault(),te(e)&&(N=!0,g&&(document.onselectstart=function(){return!1}),z.call(h,!1),K(d),t=(a=B(this)).offset(),i=R(e)[0]-t.top,n=R(e)[1]-t.left,o=a.height()+t.top,s=a.width()+t.left,i<o&&0<i&&n<s&&0<n&&(r=i,l=n),$(a,"active",u.autoExpandScrollbar))}).bind("touchmove."+e,function(e){e.stopImmediatePropagation(),e.preventDefault();var t=a.offset(),i=R(e)[0]-t.top,n=R(e)[1]-t.left;o(r,l,i,n)}),B(document).add(n).bind("mousemove."+e+" pointermove."+e+" MSPointerMove."+e,function(e){if(a){var t=a.offset(),i=R(e)[0]-t.top,n=R(e)[1]-t.left;if(r===i&&l===n)return;o(r,l,i,n)}}).add(i).bind("mouseup."+e+" touchend."+e+" pointerup."+e+" MSPointerUp."+e,function(e){a&&($(a,"active",u.autoExpandScrollbar),a=null),N=!1,g&&(document.onselectstart=null),z.call(h,!0)})},P=function(){var c,d,u,p,h,f,m,g,v,y,b,x,w,S,T=B(this),C=T.data(H),k=C.opt,e="mCS_"+C.idx,E=B("#mCSB_"+C.idx),$=B("#mCSB_"+C.idx+"_container"),M=[B("#mCSB_"+C.idx+"_dragger_vertical"),B("#mCSB_"+C.idx+"_dragger_horizontal")],P=[],A=[],L=0,D="yx"===k.axis?"none":"all",z=[],t=$.find("iframe"),i=["touchstart."+e+" pointerdown."+e+" MSPointerDown."+e,"touchmove."+e+" pointermove."+e+" MSPointerMove."+e,"touchend."+e+" pointerup."+e+" MSPointerUp."+e],I=void 0!==document.body.style.touchAction&&""!==document.body.style.touchAction;function n(e){var t;!ie(e)||N||R(e)[2]?j=0:(S=w=0,c=j=1,T.removeClass("mCS_touch_action"),t=$.offset(),d=R(e)[0]-t.top,u=R(e)[1]-t.left,z=[R(e)[0],R(e)[1]])}function o(e){var t,i,n,o,s,a,r,l;!ie(e)||N||R(e)[2]||(k.documentTouchScroll||e.preventDefault(),e.stopImmediatePropagation(),S&&!w||c&&(m=J(),t=E.offset(),i=R(e)[0]-t.top,n=R(e)[1]-t.left,o="mcsLinearOut",P.push(i),A.push(n),z[2]=Math.abs(R(e)[0]-z[0]),z[3]=Math.abs(R(e)[1]-z[1]),C.overflowed[0]&&(s=M[0].parent().height()-M[0].height(),a=0<d-i&&i-d>-(s*C.scrollRatio.y)&&(2*z[3]<z[2]||"yx"===k.axis)),C.overflowed[1]&&(r=M[1].parent().width()-M[1].width(),l=0<u-n&&n-u>-(r*C.scrollRatio.x)&&(2*z[2]<z[3]||"yx"===k.axis)),a||l?(I||e.preventDefault(),w=1):(S=1,T.addClass("mCS_touch_action")),I&&e.preventDefault(),b="yx"===k.axis?[d-i,u-n]:"x"===k.axis?[null,u-n]:[d-i,null],$[0].idleTimer=250,C.overflowed[0]&&_(b[0],L,o,"y","all",!0),C.overflowed[1]&&_(b[1],L,o,"x",D,!0)))}function s(e){var t;!ie(e)||N||R(e)[2]?j=0:(j=1,e.stopImmediatePropagation(),K(T),f=J(),t=E.offset(),p=R(e)[0]-t.top,h=R(e)[1]-t.left,P=[],A=[])}function a(e){var t,i,n,o,s,a,r,l,d;!ie(e)||N||R(e)[2]||(c=0,e.stopImmediatePropagation(),S=w=0,g=J(),t=E.offset(),i=R(e)[0]-t.top,n=R(e)[1]-t.left,30<g-m||(o="mcsEaseOut",a=(s=(y=1e3/(g-f))<2.5)?[P[P.length-2],A[A.length-2]]:[0,0],v=s?[i-a[0],n-a[1]]:[i-p,n-h],r=[Math.abs(v[0]),Math.abs(v[1])],y=s?[Math.abs(v[0]/4),Math.abs(v[1]/4)]:[y,y],l=[Math.abs($[0].offsetTop)-v[0]*O(r[0]/y[0],y[0]),Math.abs($[0].offsetLeft)-v[1]*O(r[1]/y[1],y[1])],b="yx"===k.axis?[l[0],l[1]]:"x"===k.axis?[null,l[1]]:[l[0],null],x=[4*r[0]+k.scrollInertia,4*r[1]+k.scrollInertia],d=parseInt(k.contentTouchScroll)||0,b[0]=d<r[0]?b[0]:0,b[1]=d<r[1]?b[1]:0,C.overflowed[0]&&_(b[0],x[0],o,"y",D,!1),C.overflowed[1]&&_(b[1],x[1],o,"x",D,!1)))}function O(e,t){var i=[1.5*t,2*t,t/1.5,t/2];return 90<e?4<t?i[0]:i[3]:60<e?3<t?i[3]:i[2]:30<e?8<t?i[1]:6<t?i[0]:4<t?t:i[2]:8<t?t:i[3]}function _(e,t,i,n,o,s){e&&Z(T,e.toString(),{dur:t,scrollEasing:i,dir:n,overwrite:o,drag:s})}$.bind(i[0],function(e){n(e)}).bind(i[1],function(e){o(e)}),E.bind(i[0],function(e){s(e)}).bind(i[2],function(e){a(e)}),t.length&&t.each(function(){B(this).bind("load",function(){q(this)&&B(this.contentDocument||this.contentWindow.document).bind(i[0],function(e){n(e),s(e)}).bind(i[1],function(e){o(e)}).bind(i[2],function(e){a(e)})})})},A=function(){var o,n=B(this),s=n.data(H),a=s.opt,r=s.sequential,e="mCS_"+s.idx,l=B("#mCSB_"+s.idx+"_container"),d=l.parent();function c(e,t,i){r.type=i&&o?"stepped":"stepless",r.scrollAmount=10,Y(n,e,t,"mcsLinearOut",i?60:null)}l.bind("mousedown."+e,function(e){j||o||(o=1,N=!0)}).add(document).bind("mousemove."+e,function(e){var t,i,n;!j&&o&&(window.getSelection?window.getSelection().toString():document.selection&&"Control"!=document.selection.type&&document.selection.createRange().text)&&(t=l.offset(),i=R(e)[0]-t.top+l[0].offsetTop,n=R(e)[1]-t.left+l[0].offsetLeft,0<i&&i<d.height()&&0<n&&n<d.width()?r.step&&c("off",null,"stepped"):("x"!==a.axis&&s.overflowed[0]&&(i<0?c("on",38):i>d.height()&&c("on",40)),"y"!==a.axis&&s.overflowed[1]&&(n<0?c("on",37):n>d.width()&&c("on",39))))}).bind("mouseup."+e+" dragend."+e,function(e){j||(o&&(o=0,c("off",null)),N=!1)})},L=function(){var u,p,h,e,f,m,t;function i(e,t){var i,n,o,s,a,r,l,d,c;K(u),I(u,e.target)||(i="auto"!==h.mouseWheel.deltaFactor?parseInt(h.mouseWheel.deltaFactor):!(g&&e.deltaFactor<100)&&e.deltaFactor||100,n=h.scrollInertia,c="x"===h.axis||"x"===h.mouseWheel.axis?(o="x",s=[Math.round(i*p.scrollRatio.x),parseInt(h.mouseWheel.scrollAmount)],a="auto"!==h.mouseWheel.scrollAmount?s[1]:s[0]>=f.width()?.9*f.width():s[0],r=Math.abs(B("#mCSB_"+p.idx+"_container")[0].offsetLeft),l=m[1][0].offsetLeft,d=m[1].parent().width()-m[1].width(),"y"===h.mouseWheel.axis?e.deltaY||t:e.deltaX):(o="y",s=[Math.round(i*p.scrollRatio.y),parseInt(h.mouseWheel.scrollAmount)],a="auto"!==h.mouseWheel.scrollAmount?s[1]:s[0]>=f.height()?.9*f.height():s[0],r=Math.abs(B("#mCSB_"+p.idx+"_container")[0].offsetTop),l=m[0][0].offsetTop,d=m[0].parent().height()-m[0].height(),e.deltaY||t),"y"===o&&!p.overflowed[0]||"x"===o&&!p.overflowed[1]||((h.mouseWheel.invert||e.webkitDirectionInvertedFromDevice)&&(c=-c),h.mouseWheel.normalizeDelta&&(c=c<0?-1:1),(0<c&&0!==l||c<0&&l!==d||h.mouseWheel.preventDefault)&&(e.stopImmediatePropagation(),e.preventDefault()),e.deltaFactor<5&&!h.mouseWheel.normalizeDelta&&(a=e.deltaFactor,n=17),Z(u,(r-c*a).toString(),{dir:o,dur:n})))}B(this).data(H)&&(u=B(this),p=u.data(H),h=p.opt,e="mCS_"+p.idx,f=B("#mCSB_"+p.idx),m=[B("#mCSB_"+p.idx+"_dragger_vertical"),B("#mCSB_"+p.idx+"_dragger_horizontal")],(t=B("#mCSB_"+p.idx+"_container").find("iframe")).length&&t.each(function(){B(this).bind("load",function(){q(this)&&B(this.contentDocument||this.contentWindow.document).bind("mousewheel."+e,function(e,t){i(e,t)})})}),f.bind("mousewheel."+e,function(e,t){i(e,t)}))},D=new Object,q=function(e){var t=!1,i=!1,n=null;if(void 0===e?i="#empty":void 0!==B(e).attr("id")&&(i=B(e).attr("id")),!1!==i&&void 0!==D[i])return D[i];if(e){try{n=(e.contentDocument||e.contentWindow.document).body.innerHTML}catch(e){}t=null!==n}else{try{n=top.document.body.innerHTML}catch(e){}t=null!==n}return!1!==i&&(D[i]=t),t},z=function(e){var t,i=this.find("iframe");i.length&&(t=e?"auto":"none",i.css("pointer-events",t))},I=function(e,t){var i=t.nodeName.toLowerCase(),n=e.data(H).opt.mouseWheel.disableOver;return-1<B.inArray(i,n)&&!(-1<B.inArray(i,["select","textarea"])&&!B(t).is(":focus"))},O=function(){var a,r=B(this),l=r.data(H),e="mCS_"+l.idx,d=B("#mCSB_"+l.idx+"_container"),c=d.parent();B(".mCSB_"+l.idx+"_scrollbar ."+w[12]).bind("mousedown."+e+" touchstart."+e+" pointerdown."+e+" MSPointerDown."+e,function(e){N=!0,B(e.target).hasClass("mCSB_dragger")||(a=1)}).bind("touchend."+e+" pointerup."+e+" MSPointerUp."+e,function(e){N=!1}).bind("click."+e,function(e){if(a&&(a=0,B(e.target).hasClass(w[12])||B(e.target).hasClass("mCSB_draggerRail"))){K(r);var t=B(this),i=t.find(".mCSB_dragger");if(0<t.parent(".mCSB_scrollTools_horizontal").length){if(!l.overflowed[1])return;var n="x",o=e.pageX>i.offset().left?-1:1,s=Math.abs(d[0].offsetLeft)-o*(.9*c.width())}else{if(!l.overflowed[0])return;n="y",o=e.pageY>i.offset().top?-1:1,s=Math.abs(d[0].offsetTop)-o*(.9*c.height())}Z(r,s.toString(),{dir:n,scrollEasing:"mcsEaseInOut"})}})},_=function(){var s=B(this),e=s.data(H),a=e.opt,t="mCS_"+e.idx,r=B("#mCSB_"+e.idx+"_container"),l=r.parent();r.bind("focusin."+t,function(e){var o=B(document.activeElement),t=r.find(".mCustomScrollBox").length;o.is(a.advanced.autoScrollOnFocus)&&(K(s),clearTimeout(s[0]._focusTimeout),s[0]._focusTimer=t?17*t:0,s[0]._focusTimeout=setTimeout(function(){var e=[oe(o)[0],oe(o)[1]],t=[r[0].offsetTop,r[0].offsetLeft],i=[0<=t[0]+e[0]&&t[0]+e[0]<l.height()-o.outerHeight(!1),0<=t[1]+e[1]&&t[0]+e[1]<l.width()-o.outerWidth(!1)],n="yx"!==a.axis||i[0]||i[1]?"all":"none";"x"===a.axis||i[0]||Z(s,e[0].toString(),{dir:"y",scrollEasing:"mcsEaseInOut",overwrite:n,dur:0}),"y"===a.axis||i[1]||Z(s,e[1].toString(),{dir:"x",scrollEasing:"mcsEaseInOut",overwrite:n,dur:0})},s[0]._focusTimer))})},F=function(){var t=B(this).data(H),e="mCS_"+t.idx,i=B("#mCSB_"+t.idx+"_container").parent();i.bind("scroll."+e,function(e){0===i.scrollTop()&&0===i.scrollLeft()||B(".mCSB_"+t.idx+"_scrollbar").css("visibility","hidden")})},W=function(){var n=B(this),o=n.data(H),s=o.opt,a=o.sequential,e="mCS_"+o.idx,t=".mCSB_"+o.idx+"_scrollbar";B(t+">a").bind("contextmenu."+e,function(e){e.preventDefault()}).bind("mousedown."+e+" touchstart."+e+" pointerdown."+e+" MSPointerDown."+e+" mouseup."+e+" touchend."+e+" pointerup."+e+" MSPointerUp."+e+" mouseout."+e+" pointerout."+e+" MSPointerOut."+e+" click."+e,function(e){if(e.preventDefault(),te(e)){var t=B(this).attr("class");switch(a.type=s.scrollButtons.scrollType,e.type){case"mousedown":case"touchstart":case"pointerdown":case"MSPointerDown":if("stepped"===a.type)return;N=!0,o.tweenRunning=!1,i("on",t);break;case"mouseup":case"touchend":case"pointerup":case"MSPointerUp":case"mouseout":case"pointerout":case"MSPointerOut":if("stepped"===a.type)return;N=!1,a.dir&&i("off",t);break;case"click":if("stepped"!==a.type||o.tweenRunning)return;i("on",t)}}function i(e,t){a.scrollAmount=s.scrollButtons.scrollAmount,Y(n,e,t)}})},X=function(){var r=B(this),l=r.data(H),d=l.opt,c=l.sequential,e="mCS_"+l.idx,t=B("#mCSB_"+l.idx),u=B("#mCSB_"+l.idx+"_container"),p=u.parent(),h="input,textarea,select,datalist,keygen,[contenteditable='true']",i=u.find("iframe"),n=["blur."+e+" keydown."+e+" keyup."+e];function o(e){switch(e.type){case"blur":l.tweenRunning&&c.dir&&a("off",null);break;case"keydown":case"keyup":var t,i,n,o=e.keyCode?e.keyCode:e.which,s="on";if("x"!==d.axis&&(38===o||40===o)||"y"!==d.axis&&(37===o||39===o)){if((38===o||40===o)&&!l.overflowed[0]||(37===o||39===o)&&!l.overflowed[1])return;"keyup"===e.type&&(s="off"),B(document.activeElement).is(h)||(e.preventDefault(),e.stopImmediatePropagation(),a(s,o))}else{33===o||34===o?((l.overflowed[0]||l.overflowed[1])&&(e.preventDefault(),e.stopImmediatePropagation()),"keyup"===e.type&&(K(r),t=34===o?-1:1,n="x"===d.axis||"yx"===d.axis&&l.overflowed[1]&&!l.overflowed[0]?(i="x",Math.abs(u[0].offsetLeft)-t*(.9*p.width())):(i="y",Math.abs(u[0].offsetTop)-t*(.9*p.height())),Z(r,n.toString(),{dir:i,scrollEasing:"mcsEaseInOut"}))):35!==o&&36!==o||B(document.activeElement).is(h)||((l.overflowed[0]||l.overflowed[1])&&(e.preventDefault(),e.stopImmediatePropagation()),"keyup"===e.type&&(n="x"===d.axis||"yx"===d.axis&&l.overflowed[1]&&!l.overflowed[0]?(i="x",35===o?Math.abs(p.width()-u.outerWidth(!1)):0):(i="y",35===o?Math.abs(p.height()-u.outerHeight(!1)):0),Z(r,n.toString(),{dir:i,scrollEasing:"mcsEaseInOut"})))}}function a(e,t){c.type=d.keyboard.scrollType,c.scrollAmount=d.keyboard.scrollAmount,"stepped"===c.type&&l.tweenRunning||Y(r,e,t)}}i.length&&i.each(function(){B(this).bind("load",function(){q(this)&&B(this.contentDocument||this.contentWindow.document).bind(n[0],function(e){o(e)})})}),t.attr("tabindex","0").bind(n[0],function(e){o(e)})},Y=function(u,e,t,p,h){var f=u.data(H),m=f.opt,g=f.sequential,v=B("#mCSB_"+f.idx+"_container"),i="stepped"===g.type,y=m.scrollInertia<26?26:m.scrollInertia,b=m.scrollInertia<1?17:m.scrollInertia;switch(e){case"on":if(g.dir=[t===w[16]||t===w[15]||39===t||37===t?"x":"y",t===w[13]||t===w[15]||38===t||37===t?-1:1],K(u),ne(t)&&"stepped"===g.type)return;x(i);break;case"off":clearTimeout(g.step),ee(g,"step"),K(u),(i||f.tweenRunning&&g.dir)&&x(!0)}function x(e){m.snapAmount&&(g.scrollAmount=m.snapAmount instanceof Array?"x"===g.dir[0]?m.snapAmount[1]:m.snapAmount[0]:m.snapAmount);var t="stepped"!==g.type,i=h||(e?t?y/1.5:b:1e3/60),n=e?t?7.5:40:2.5,o=[Math.abs(v[0].offsetTop),Math.abs(v[0].offsetLeft)],s=[10<f.scrollRatio.y?10:f.scrollRatio.y,10<f.scrollRatio.x?10:f.scrollRatio.x],a="x"===g.dir[0]?o[1]+g.dir[1]*(s[1]*n):o[0]+g.dir[1]*(s[0]*n),r="x"===g.dir[0]?o[1]+g.dir[1]*parseInt(g.scrollAmount):o[0]+g.dir[1]*parseInt(g.scrollAmount),l="auto"!==g.scrollAmount?r:a,d=p||(e?t?"mcsLinearOut":"mcsEaseInOut":"mcsLinear"),c=!!e;e&&i<17&&(l="x"===g.dir[0]?o[1]:o[0]),Z(u,l.toString(),{dir:g.dir[0],scrollEasing:d,dur:i,onComplete:c}),e?g.dir=!1:(clearTimeout(g.step),g.step=setTimeout(function(){x()},i))}},G=function(e){var t=B(this).data(H).opt,i=[];return"function"==typeof e&&(e=e()),e instanceof Array?i=1<e.length?[e[0],e[1]]:"x"===t.axis?[null,e[0]]:[e[0],null]:(i[0]=e.y?e.y:e.x||"x"===t.axis?null:e,i[1]=e.x?e.x:e.y||"y"===t.axis?null:e),"function"==typeof i[0]&&(i[0]=i[0]()),"function"==typeof i[1]&&(i[1]=i[1]()),i},V=function(e,t){if(null!=e&&void 0!==e){var i=B(this),n=i.data(H),o=n.opt,s=B("#mCSB_"+n.idx+"_container"),a=s.parent(),r=typeof e,l="x"===(t=t||("x"===o.axis?"x":"y"))?s.outerWidth(!1)-a.width():s.outerHeight(!1)-a.height(),d="x"===t?s[0].offsetLeft:s[0].offsetTop,c="x"===t?"left":"top";switch(r){case"function":return e();case"object":if(!(p=e.jquery?e:B(e)).length)return;return"x"===t?oe(p)[1]:oe(p)[0];case"string":case"number":if(ne(e))return Math.abs(e);if(-1!==e.indexOf("%"))return Math.abs(l*parseInt(e)/100);if(-1!==e.indexOf("-="))return Math.abs(d-parseInt(e.split("-=")[1]));if(-1!==e.indexOf("+=")){var u=d+parseInt(e.split("+=")[1]);return 0<=u?0:Math.abs(u)}if(-1!==e.indexOf("px")&&ne(e.split("px")[0]))return Math.abs(e.split("px")[0]);if("top"===e||"left"===e)return 0;if("bottom"===e)return Math.abs(a.height()-s.outerHeight(!1));if("right"===e)return Math.abs(a.width()-s.outerWidth(!1));if("first"!==e&&"last"!==e)return B(e).length?"x"===t?oe(B(e))[1]:oe(B(e))[0]:(s.css(c,e),void f.update.call(null,i[0]));var p=s.find(":"+e);return"x"===t?oe(p)[1]:oe(p)[0]}}},U=function(e){var t=B(this),i=t.data(H),n=i.opt,o=B("#mCSB_"+i.idx+"_container");if(e)return clearTimeout(o[0].autoUpdate),void ee(o[0],"autoUpdate");function s(e){var t,i,n;B(e).hasClass(w[2])?r():((t=new Image).onload=(i=t,n=function(){this.onload=null,B(e).addClass(w[2]),r(2)},function(){return n.apply(i,arguments)}),t.src=e.src)}function a(){!0===n.advanced.updateOnSelectorChange&&(n.advanced.updateOnSelectorChange="*");var e=0,t=o.find(n.advanced.updateOnSelectorChange);return n.advanced.updateOnSelectorChange&&0<t.length&&t.each(function(){e+=this.offsetHeight+this.offsetWidth}),e}function r(e){clearTimeout(o[0].autoUpdate),f.update.call(null,t[0],e)}!function e(){clearTimeout(o[0].autoUpdate);if(0===t.parents("html").length)return void(t=null);o[0].autoUpdate=setTimeout(function(){return n.advanced.updateOnSelectorChange&&(i.poll.change.n=a(),i.poll.change.n!==i.poll.change.o)?(i.poll.change.o=i.poll.change.n,void r(3)):n.advanced.updateOnContentResize&&(i.poll.size.n=t[0].scrollHeight+t[0].scrollWidth+o[0].offsetHeight+t[0].offsetHeight+t[0].offsetWidth,i.poll.size.n!==i.poll.size.o)?(i.poll.size.o=i.poll.size.n,void r(1)):!n.advanced.updateOnImageLoad||"auto"===n.advanced.updateOnImageLoad&&"y"===n.axis||(i.poll.img.n=o.find("img").length,i.poll.img.n===i.poll.img.o)?void((n.advanced.updateOnSelectorChange||n.advanced.updateOnContentResize||n.advanced.updateOnImageLoad)&&e()):(i.poll.img.o=i.poll.img.n,void o.find("img").each(function(){s(this)}))},n.advanced.autoUpdateTimeout)}()},K=function(e){var t=e.data(H);B("#mCSB_"+t.idx+"_container,#mCSB_"+t.idx+"_container_wrapper,#mCSB_"+t.idx+"_dragger_vertical,#mCSB_"+t.idx+"_dragger_horizontal").each(function(){i.call(this)})},Z=function(o,e,s){var t,i,n,a,r=o.data(H),l=r.opt,d={trigger:"internal",dir:"y",scrollEasing:"mcsEaseOut",drag:!1,dur:l.scrollInertia,overwrite:"all",callbacks:!0,onStart:!0,onUpdate:!0,onComplete:!0},c=[(s=B.extend(d,s)).dur,s.drag?0:s.dur],u=B("#mCSB_"+r.idx),p=B("#mCSB_"+r.idx+"_container"),h=p.parent(),f=l.callbacks.onTotalScrollOffset?G.call(o,l.callbacks.onTotalScrollOffset):[0,0],m=l.callbacks.onTotalScrollBackOffset?G.call(o,l.callbacks.onTotalScrollBackOffset):[0,0];if(r.trigger=s.trigger,0===h.scrollTop()&&0===h.scrollLeft()||(B(".mCSB_"+r.idx+"_scrollbar").css("visibility","visible"),h.scrollTop(0).scrollLeft(0)),"_resetY"!==e||r.contentReset.y||(k("onOverflowYNone")&&l.callbacks.onOverflowYNone.call(o[0]),r.contentReset.y=1),"_resetX"!==e||r.contentReset.x||(k("onOverflowXNone")&&l.callbacks.onOverflowXNone.call(o[0]),r.contentReset.x=1),"_resetY"!==e&&"_resetX"!==e){switch(!r.contentReset.y&&o[0].mcs||!r.overflowed[0]||(k("onOverflowY")&&l.callbacks.onOverflowY.call(o[0]),r.contentReset.x=null),!r.contentReset.x&&o[0].mcs||!r.overflowed[1]||(k("onOverflowX")&&l.callbacks.onOverflowX.call(o[0]),r.contentReset.x=null),l.snapAmount&&(t=l.snapAmount instanceof Array?"x"===s.dir?l.snapAmount[1]:l.snapAmount[0]:l.snapAmount,i=e,n=t,a=l.snapOffset,e=Math.round(i/n)*n-a),s.dir){case"x":var g=B("#mCSB_"+r.idx+"_dragger_horizontal"),v="left",y=p[0].offsetLeft,b=[u.width()-p.outerWidth(!1),g.parent().width()-g.width()],x=[e,0===e?0:e/r.scrollRatio.x],w=f[1],S=m[1],T=0<w?w/r.scrollRatio.x:0,C=0<S?S/r.scrollRatio.x:0;break;case"y":g=B("#mCSB_"+r.idx+"_dragger_vertical"),v="top",y=p[0].offsetTop,b=[u.height()-p.outerHeight(!1),g.parent().height()-g.height()],x=[e,0===e?0:e/r.scrollRatio.y],w=f[0],S=m[0],T=0<w?w/r.scrollRatio.y:0,C=0<S?S/r.scrollRatio.y:0}x[1]<0||0===x[0]&&0===x[1]?x=[0,0]:x[1]>=b[1]?x=[b[0],b[1]]:x[0]=-x[0],o[0].mcs||(E(),k("onInit")&&l.callbacks.onInit.call(o[0])),clearTimeout(p[0].onCompleteTimeout),Q(g[0],v,Math.round(x[1]),c[1],s.scrollEasing),!r.tweenRunning&&(0===y&&0<=x[0]||y===b[0]&&x[0]<=b[0])||Q(p[0],v,Math.round(x[0]),c[0],s.scrollEasing,s.overwrite,{onStart:function(){s.callbacks&&s.onStart&&!r.tweenRunning&&(k("onScrollStart")&&(E(),l.callbacks.onScrollStart.call(o[0])),r.tweenRunning=!0,$(g),r.cbOffsets=[l.callbacks.alwaysTriggerOffsets||y>=b[0]+w,l.callbacks.alwaysTriggerOffsets||y<=-S])},onUpdate:function(){s.callbacks&&s.onUpdate&&k("whileScrolling")&&(E(),l.callbacks.whileScrolling.call(o[0]))},onComplete:function(){var e;s.callbacks&&s.onComplete&&("yx"===l.axis&&clearTimeout(p[0].onCompleteTimeout),e=p[0].idleTimer||0,p[0].onCompleteTimeout=setTimeout(function(){k("onScroll")&&(E(),l.callbacks.onScroll.call(o[0])),k("onTotalScroll")&&x[1]>=b[1]-T&&r.cbOffsets[0]&&(E(),l.callbacks.onTotalScroll.call(o[0])),k("onTotalScrollBack")&&x[1]<=C&&r.cbOffsets[1]&&(E(),l.callbacks.onTotalScrollBack.call(o[0])),r.tweenRunning=!1,p[0].idleTimer=0,$(g,"hide")},e))}})}function k(e){return r&&l.callbacks[e]&&"function"==typeof l.callbacks[e]}function E(){var e=[p[0].offsetTop,p[0].offsetLeft],t=[g[0].offsetTop,g[0].offsetLeft],i=[p.outerHeight(!1),p.outerWidth(!1)],n=[u.height(),u.width()];o[0].mcs={content:p,top:e[0],left:e[1],draggerTop:t[0],draggerLeft:t[1],topPct:Math.round(100*Math.abs(e[0])/(Math.abs(i[0])-n[0])),leftPct:Math.round(100*Math.abs(e[1])/(Math.abs(i[1])-n[1])),direction:s.dir}}},Q=function(e,t,i,n,o,s,a){e._mTween||(e._mTween={top:{},left:{}});var r,l,d=(a=a||{}).onStart||function(){},c=a.onUpdate||function(){},u=a.onComplete||function(){},p=J(),h=0,f=e.offsetTop,m=e.style,g=e._mTween[t];"left"===t&&(f=e.offsetLeft);var v=i-f;function y(){g.stop||(h||d.call(),h=J()-p,b(),h>=g.time&&(g.time=h>g.time?h+r-(h-g.time):h+r-1,g.time<h+1&&(g.time=h+1)),g.time<n?g.id=l(y):u.call())}function b(){0<n?(g.currVal=function(e,t,i,n,o){switch(o){case"linear":case"mcsLinear":return i*e/n+t;case"mcsLinearOut":return e/=n,e--,i*Math.sqrt(1-e*e)+t;case"easeInOutSmooth":return(e/=n/2)<1?i/2*e*e+t:-i/2*(--e*(e-2)-1)+t;case"easeInOutStrong":return(e/=n/2)<1?i/2*Math.pow(2,10*(e-1))+t:(e--,i/2*(2-Math.pow(2,-10*e))+t);case"easeInOut":case"mcsEaseInOut":return(e/=n/2)<1?i/2*e*e*e+t:i/2*((e-=2)*e*e+2)+t;case"easeOutSmooth":return e/=n,-i*(--e*e*e*e-1)+t;case"easeOutStrong":return i*(1-Math.pow(2,-10*e/n))+t;case"easeOut":case"mcsEaseOut":default:var s=(e/=n)*e,a=s*e;return t+i*(.499999999999997*a*s+-2.5*s*s+5.5*a+-6.5*s+4*e)}}(g.time,f,v,n,o),m[t]=Math.round(g.currVal)+"px"):m[t]=i+"px",c.call()}g.stop=0,"none"!==s&&function(){if(null==g.id)return;window.requestAnimationFrame?window.cancelAnimationFrame(g.id):clearTimeout(g.id);g.id=null}(),r=1e3/60,g.time=h+r,l=window.requestAnimationFrame?window.requestAnimationFrame:function(e){return b(),setTimeout(e,.01)},g.id=l(y)},J=function(){return window.performance&&window.performance.now?window.performance.now():window.performance&&window.performance.webkitNow?window.performance.webkitNow():Date.now?Date.now():(new Date).getTime()},i=function(){this._mTween||(this._mTween={top:{},left:{}});for(var e=["top","left"],t=0;t<e.length;t++){var i=e[t];this._mTween[i].id&&(window.requestAnimationFrame?window.cancelAnimationFrame(this._mTween[i].id):clearTimeout(this._mTween[i].id),this._mTween[i].id=null,this._mTween[i].stop=1)}},ee=function(t,i){try{delete t[i]}catch(e){t[i]=null}},te=function(e){return!(e.which&&1!==e.which)},ie=function(e){var t=e.originalEvent.pointerType;return!(t&&"touch"!==t&&2!==t)},ne=function(e){return!isNaN(parseFloat(e))&&isFinite(e)},oe=function(e){var t=e.parents(".mCSB_container");return[e.offset().top-t.offset().top,e.offset().left-t.offset().left]},se=function(){var e=function(){var e=["webkit","moz","ms","o"];if("hidden"in document)return"hidden";for(var t=0;t<e.length;t++)if(e[t]+"Hidden"in document)return e[t]+"Hidden";return null}();return!!e&&document[e]},B.fn[h]=function(e){return f[e]?f[e].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof e&&e?void B.error("Method "+e+" does not exist"):f.init.apply(this,arguments)},B[h]=function(e){return f[e]?f[e].apply(this,Array.prototype.slice.call(arguments,1)):"object"!=typeof e&&e?void B.error("Method "+e+" does not exist"):f.init.apply(this,arguments)},B[h].defaults=o,window[h]=!0,B(window).bind("load",function(){B(n)[h](),B.extend(B.expr[":"],{mcsInView:B.expr[":"].mcsInView||function(e){var t,i,n=B(e),o=n.parents(".mCSB_container");if(o.length)return t=o.parent(),0<=(i=[o[0].offsetTop,o[0].offsetLeft])[0]+oe(n)[0]&&i[0]+oe(n)[0]<t.height()-n.outerHeight(!1)&&0<=i[1]+oe(n)[1]&&i[1]+oe(n)[1]<t.width()-n.outerWidth(!1)},mcsInSight:B.expr[":"].mcsInSight||function(e,t,i){var n,o,s,a,r=B(e),l=r.parents(".mCSB_container"),d="exact"===i[3]?[[1,0],[1,0]]:[[.9,.1],[.6,.4]];if(l.length)return n=[r.outerHeight(!1),r.outerWidth(!1)],s=[l[0].offsetTop+oe(r)[0],l[0].offsetLeft+oe(r)[1]],o=[l.parent()[0].offsetHeight,l.parent()[0].offsetWidth],s[0]-o[0]*(a=[n[0]<o[0]?d[0]:d[1],n[1]<o[1]?d[0]:d[1]])[0][0]<0&&0<=s[0]+n[0]-o[0]*a[0][1]&&s[1]-o[1]*a[1][0]<0&&0<=s[1]+n[1]-o[1]*a[1][1]},mcsOverflow:B.expr[":"].mcsOverflow||function(e){var t=B(e).data(H);if(t)return t.overflowed[0]||t.overflowed[1]}})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
